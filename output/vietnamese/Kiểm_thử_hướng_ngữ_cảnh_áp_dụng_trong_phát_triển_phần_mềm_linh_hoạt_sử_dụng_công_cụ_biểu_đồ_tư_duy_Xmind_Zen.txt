1.1 Đặt vấn đề
Agile ra đời để phản ứng trong bối cảnh phát triển phần mềm gặp nhiều thử thách với các phương pháp phát triển truyền thống theo mô hình thác nước hoặc dựa theo kế hoạch. Agile là phương thức tiếp cận lặp đi lặp lại để quản lý dự án và phương thức này khuyến khích sự thay đổi khi phát triển dự án và đưa sản phẩm đến tay người dùng sao cho nhanh nhất. Trong khi các phương pháp truyền thống, các công việc được thực hiện tuần tự theo các bước trong kế hoạch từ phân tích yêu cầu chuẩn bị tài liệu, tiếp theo là thiết kế, phát triển và kiểm thử phần mềm.
Tuy nhiên, bắt đầu từ giữa những năm 90 các phương pháp truyền thống trên thực tế xảy ra rất nhiều rủi ro mà không thể lường trước được, một trong những nguyên nhân chính đến từ các yêu cầu thay đổi của khách hàng và khách hàng ngày càng không thể xác định được nhu cầu của họ trước, và trong quá trình xây dựng phần mềm. Khi yêu cầu thay đổi sẽ đối mặt với việc toàn bộ các bước trong kế hoạch phải tiến hành lại, dẫn đến các kết quả là sản phẩm làm ra không đúng yêu cầu của khách hàng, bị quá thời gian bàn giao hoặc vượt quá ngân sách.
Vào tháng 2 năm 2001, mười bảy nhà phát triển phần mềm đã gặp gỡ và họp với nhau tại bang Utah, Hoa Kỳ để thảo luận về các phương pháp phát triển phần mềm.
Họ đã cùng nhau cho ra đời bản Tuyên ngôn Agile để định nghĩa cách hiểu về phát triển phần mềm linh hoạt.
Cùng với việc ra đời của Tuyên ngôn Agile vào năm 2001, kể từ đó nhiều phương pháp phát triển phần mềm linh hoạt đã xuất hiện như Scrum, Kanban, Extreme programming, ...Mục tiêu của các phương pháp này giúp tổ chức trở nên linh hoạt đáp ứng được các thay đổi yêu cầu từ phía khách hàng và giao sản phẩm nhanh chóng đến khách hàng. Chính vì vậy, việc kiểm thử trong Agile cũng đóng góp một vai trò quan trọng. Ngoài những vai trò là kiểm tra tìm kiếm các lỗi phần mềm, ứng dụng hoặc thẩm định liệu phần mềm đã đáp ứng được các yêu cầu kĩ thuật và yêu cầu nghiệp vụ không. Trong Agile, việc kiểm thử sẽ được diễn ra sớm và thường xuyên, có thể bắt đầu khi bắt đầu dự án với sự tích hợp liên tục giữa giai đoạn phát triển và kiểm thử. Điều này giúp Agile cải thiện chất lượng sản phẩm sớm hơn và cho phép phát triển phần mềm theo chu kỳ ngắn, tìm kiếm và sửa lỗi nhanh hơn.Vì vậy, việc xây dựng một phương pháp kiểm thử để đáp ứng được các yêu cầu trong Agile được đăt ra.1.2 Mục tiêu và phạm vi đề tài Mục tiêu của đề tài là xây dựng một phương pháp kiểm thử hướng ngữ cảnh trong phát triển phần mềm linh hoạt. Ngoài ra, đề tài này còn tìm hiểu tổng quan về phát triển phần mềm linh hoạt và tìm hiểu về công cụ biểu đồ tư duy Xmind Zen. Sử dụng công cụ này để phát triển phương pháp kiểm thử hướng ngữ cảnh trong Agile. Sau đó, triển khai, áp dụng phương pháp để xây dựng một website nơi có thể chia sẻ các bài viết và đánh giá phương pháp này gồm những ưu điểm và khuyết điểm nào.
1.3 Định hướng giải pháp
Vì những mục tiêu ở trên, để có thể xây dựng phương pháp kiểm thử hướng ngữ cảnh trong phát triển phần mềm linh hoạt, đầu tiên ta sẽ tìm hiểu tổng quan về phương pháp phát triển phần mềm linh hoạt. Sau đó, tìm hiểu về công cụ biểu đồ tư duy Xmind Zen, những lợi ích và ứng dụng của công cụ để có thể áp dụng vào phương pháp. Và sau đó, em xây dựng phương pháp kiểm thử hướng ngữ cảnh trong phát triển phần mềm linh hoạt.
Tiếp theo là xây dựng một website chia sẻ các bài viết về những cuốn sách để có thể thử nghiệm phương pháp kiểm thử đã xây dựng ở trên. Để xây dựng website này, ta sẽ sử dụng nodejs với framework express và cở sở dữ liệu mongoDB.
Cuối cùng, từ những thử nghiệm về phương pháp ở trên, em sẽ đánh giá phương pháp về những ưu điểm và nhược điểm của phương pháp, đưa ra các giải pháp cho phương pháp trên.
1.4 Bố cục đồ án
Ngoài phần tóm tắt nội dụng đồ án và giới thiệu đồ án thì các phần còn lại đồ án tốt nghiệp sẽ được trình bày với bố cục như sau:
1. Chương 2: Trình bày tổng quan và vai trò của kiểm thử trong phát triển phần mềm linh hoạt. Đặc biệt hơn là tìm hiểu và xây dựng phương pháp kiểm thử hướng ngữ cảnh trong phát triển phần mềm linh hoạt, khảo sát và xây dựng website 2. Chương 3: Trình bày các công nghệ sẽ sử dụng để trong phương pháp kiểm thử và xây dựng website.
3. Chương 4: Trình bày về thiết kế kiến trúc, các thiết kế tổng quan và thiết kế chi tiết gói. Cùng với đó, trình bày thiết kế chi tiết về cơ sở dữ liệu, thiết kê giao diện và thực hiện công việc kiểm thử chức năng và kiểm thử phi chức năng với website đã xây dựng.4. Chương 5: Trình bày các đánh giá về những ưu điểm và nhược điểm của phương pháp; đưa ra các giải pháp cho phương pháp kiểm thử này.
2.1 Tổng quan về phát triền phần mềm linh hoạt và vai trò của kiểm thử
trong phát tiển phần mềm linh hoạt 2.1.1 Tổng quan về phát triển phần mềm linh hoạt Phát triển phần mềm linh hoạt là một phương thức thực hiện các dự án công nghệ phần mềm, phương thức này khuyến khích sự thay đổi khi phát triển dự án và đưa sản phẩm đến tay người dùng nhanh nhất. Trong Agile sẽ phân phối công việc theo từng bước nhỏ, với cách tiếp cận lặp đi lặp lại để quản lý dự án. Các yêu cầu, kế hoạch và kết quả được đánh giá liên tục nên các nhóm phát triển có cơ chế tự nhiên để phản ứng với sự thay đổi một cách nhanh chóng.Với trọng tâm việc giao tiếp cởi mở, hợp tác, thích ứng và tin tưởng giữa các thành viên trong nhóm.
Có rất nhiều phương pháp Agile với các hướng tiếp cận rất khác nhau. Bên cạnh các cách thức tổ chức công việc, thiết lập quy trình, các phương pháp Agile còn nghiên cứu và đưa vào sử dụng các công cụ và kỹ thuật như công cụ tích hợp, kiểm thử đơn vị, mẫu thiết kế, tái cấu trúc,... để đảm bảo gia tăng tính linh hoạt. Các phương pháp này chia sẻ nhiều đặc trưng giống nhau cộng tác nhóm chặt chẽ, tổ chức các nhóm tự quản, liên chức năng, tính đáp ứng cao trong suốt vòng đời dự án.
Một số đặc điểm trong phát triển phần mềm linh hoạt Agile:
Tính lặp: Dự án sẽ được thực hiện trong các phân đoạn lặp đi lặp lại. Các phân đoạn này thường có khung thời gian ngắn (từ một đến bốn tuần). Trong mỗi phân đoạn này, nhóm phát triển thực hiện đầy đủ các công việc cần thiết như lập kế hoạch, phân tích yêu cầu, thiết kế, triển khai, kiểm thử để cho ra các phần nhỏ của sản phẩm.
Tính tăng dần: Cuối các phân đoạn, nhóm phát triển thường cho ra các phần nhỏ của sản phẩm cuối cùng. Các phần nhỏ này thường là đẩy đủ, có khả năng chạy tốt, được kiểm thử cẩn thận và có thể sử dụng ngay. Theo thời gian, phân đoạn này tiếp nối phân đoạn kia, các phần chạy được này sẽ được tích lũy, lớn dần lên cho tới khi toàn bộ yêu cầu khách hàng được thỏa mãn.
Tính thích ứng: Do các phân đoạn chỉ kéo dài trong một khoảng thời gian ngắn và việc lập kế hoạch cũng được điều chỉnh liên tục, nên các thay đổi trong quá trình phát triển đều có thể được đáp ứng theo cách thích hợp.
Nhóm tự tổ chức và liên chức năng: Cấu trúc nhóm Agile thường là liên chứcnăng và tự tổ chức. Theo đó các nhóm này tự thực hiện lấy việc phân công công việc mà không dựa trên các mô tả cứng về chức danh hay làm việc dựa trên một sự phân cấp rõ ràng trong tổ chức. Các nhóm này cộng tác với nhau để đề ra quyết định, theo dõi tiến độ, giải quyết các vấn đề mà không chờ mệnh lệnh của các cấp quản lý. Nhóm tự tổ chức có nghĩa là nó đã đủ kĩ năng cần thiết cho việc phát triển phần mềm, do vậy nó có thể được trao quyền tự ra quyết định, tự quản lý và tổ chức lấy công việc của chính mình để đạt được hiệu quả cao nhất.
Quản lý quy trình thực nghiệm: Các nhóm Agile ra các quyết định dựa trên các dữ liệu thực tiễn thay vì tính toàn lý thuyết hay các tiền giả định. Việc phân nhỏ dự án thành các phân đoạn ngắn góp phần gia tăng các điểm mốc để nhóm phát triển thu thập dữ kiện cho phép điều chỉnh các chiến lược phát triển của mình.
Giao tiếp trực diện: Một số mô hình phát triển phần mềm dựa trên rất nhiều công việc giấy tờ, từ việc thu thập yêu cầu người dùng, viết đặc tả hệ thống, các thiết kế hệ thống, . . . Agile không phản đối công dụng của công việc tài liệu hóa nhưng đánh giá cao hơn giao tiếp trực diện thay vì gián tiếp thông qua giấy tờ. Về yêu cầu của khách hàng, agile khuyến khích nhóm phát triển trực tiếp nói chuyện với khách hàng để hiểu rõ hơn về cái khách hàng thực sự cần, thay vì phụ thuộc nhiều vào các loại văn bản.
Phát triển dựa trên giá trị: Một trong các nguyên tắc cơ bản của Agile là phần mềm chạy tốt là thước đo của tiến độ. Nguyên tắc này giúp nhóm dám loại bỏ đi công việc dư thừa không trực tiếp mang lại giá trị cho sản phẩm. Để vận hành được cơ chế làm việc dựa trên giá trị, nhóm Agile thường làm việc trực tiếp và thường xuyên với khách hàng, cộng tác trực tiếp với họ để biết yêu cầu nào có độ ưu tiên cao hơn, mang lại giá trị hơn hơn sớm nhất có thể cho dự án.
Nhờ đó các dự án Agile thường giúp khách hàng tối ưu hóa được giá trị của dự án.
Vào tháng 2 năm 2001, 17 nhà phát triển đã đưa ra bản tuyên ngôn Agile cho phát triển phần mềm linh hoạt. Tuyên ngôn Agile đã tổng kết ra một số giá trị và nguyên tắc chung, phổ quát cho tất cả các phương pháp về linh hoạt đang tồn tại độc lập tại thời điểm đó. Tuyên ngôn này đưa ra bốn giá trị cốt lõi cho phép các nhóm đạt được hiệu suất cao. Nội dung của tuyên ngôn Agile bao gồm:
Cá nhân và sự tương tác hơn quy trình và công cụ: Đặt trọng tâm vào con người và sự tương hỗ giữa những thành viên trong team. Nếu dự án có những thành viên có năng lực, chịu làm việc cùng nhau thì sẽ mang đến thành côngcho dự án. Quy trình là các thủ tục cần thiết để phát triển dự án như thiết kế, sau đó đến lập trình, rồi kiểm tra QA/QC. Hay để đưa ra một chức năng nào đó cần phải có sự đồng ý của bộ phận QA/QC. Quy trình này do mỗi công ty quy định và bắt buộc các nhân viên khi tham gia vào dự án phải tuân thủ.
Công cụ là phần mềm được sử dụng trong dự án như: Phần mềm quản lý công việc, phần mềm quản lý source code, phần mềm quản lý lỗi. . . Có rất nhiều công cụ được sử dụng để hỗ trợ vận hành.
Sản phẩm xài được hơn là tài liệu đầy đủ: Trong quy trình phát triển phát triển phần mềm, việc tạo và cập nhật các tài liệu về sản phẩm là bắt buộc.
Nhóm Dev không thể hoặc không đồng ý tiến hành công việc nếu không có tài liệu đặc tả về yêu cầu, thiết kế hệ thống. Nhóm test thì yêu cầu tài liệu về sản phẩm đề có thể viết các trường hợp kiểm thử và kiểm thử hệ thống được.
Nhóm QA yêu cầu tất cả các tài liệu phải được viết trước khi sản phẩm được giao cho khách hàng nếu không thì không đủ điều kiện để giao sản phẩm cho khách hàng. Đứng dưới góc độ khách hàng thì khách hàng chỉ quan tâm đến sản phẩm có hoạt động tốt hay không. Trong khi việc tạo và cập nhật tài liệu mất nhiều thời gian. Vậy tại sao mình phải tập trung quá nhiều cho việc không cần thiết mà không dành thời gian đó dể trao đổi để hiểu thêm về công việc phải làm. Đừng hiểu lầm là làm Agile là không cần viết tài liệu mà ý tưởng ở đây là chỉ cần viết những tài liệu mà mọi người cần đọc.
Cộng tác với khách hàng hơn đàm phán hợp đồng: Các tuyên ngôn “khách hàng là thượng đế” hay “khách hàng luôn đúng”. Nhưng khách hàng cũng có rất nhiều loại khách hàng khác nhau. Có khách hàng am hiểu về công nghệ, có người không. Có người suy nghĩ nhất quán lại có người thay đổi liên tục, . . . và cách duy nhất để có thể làm việc tốt là phải cộng tác với khách hàng để hiểu được khách hàng muốn gì và cần gì để có thể tư vấn và điều chính thay vì chỉ dựa vào những điều đã quy định trong hợp đồng.
Phản hổi với các thay đổi quan trọng hơn bám theo kế hoạch: Có một điểm chung là hầu hết những dự án đều có sự thay đổi điều chỉnh khi triển khai.
Sự thay đổi có thể thay đổi về tài liệu, nhân sự, dead hay phương thức làm viêc, . . . mặc dù kế hoạch đã được định ra rõ từ đầu. Agile không khuyến khích cho sự thay đổi nhưng khuyến khích chúng ta tập thích nghi với thay đổi. Một trong các nguyên tắc cơ bản của Agile là phần mềm chạy tốt chính là thước đo của tiến độ. Nguyên tắc này giúp nhóm dám loại bỏ đi các công việc dư thừa không trực tiếp mang lại giá trị cho sản phẩm. Để vận hành cơ chế “làm việc dựa trên giá trị”, nhóm agile thường làm việc trực tiếp thường xuyên với khách hàng, cộng tác trực tiếp với họ để biết yêu cầu nào có độ ưutiên cao hơn, mang lai giá trị sớm nhất có thể cho dự án. Nhờ đó mà các dự án Agile thường giúp khách hàng tối ưu được giá trị của dự án. Một cách gần trực tiếp, Agile gia tăng đáng kể độ hài lòng của khách hàng.
Có nghĩa là các điều mục bên phải vẫn còn giá trị, nhưng trong Agile sẽ đánh giá cao hơn mục ở bên trái.
Từ bản tuyên ngôn Agile, các nhà phát triển đã đưa ra mười hai nguyên tắc nhằm hỗ trợ thực hành và vận dụng các nguyên tắc vào trong thực tiễn. Mở đầu của mười hai nguyên tắc là sự hài lòng của khách hàng được đặt lên hàng đầu thông qua việc phân phối sớm và liên tục. Nguyên tắc thứ hai là chào mừng các yêu cầu thay đồi, ngay cả trong giai đoạn cuối của dự án. Nguyên tắc thứ ba là phần mềm chạy được, được giao thường xuyên từ vài tuần đến vài tháng với ưu tiên khoảng thời gian ngắn hơn. Nguyên tắc thứ tư là dự án được xây dựng bởi các cá nhân có động lực và những người đáng tín cậy cung cấp cho họ môi trường với sự hỗ trợ cần thiết và những đãi ngộ cần thiết để hoàn thành công việc.Nguyên tắc thứ năm là người làm bên mảng kinh doanh và người phát triển phần mềm nên gần gũi và hợp tác hằng ngày. Nguyên tắc thứ sáu là trao đổi trực tiếp mặt đối mặt là phương pháp hiệu quả nhất để truyền đạt thông thông tin. Nguyên tắc thứ bảy là phần mềm chạy được là thước đo của tiến độ. Nguyên tắc thứ tám là phát triển bền vững, có thể duy trì một tốc độ không đổi. Nguyên tắc thứ chín là liên tục chú ý đến các kỹ thuật mới và thiết kế mới. Nguyên tắc thứ mười là đơn giản hóa - nghệ thuật việc tối đa hóa khối lượng công việc chưa hoàn thành là điều cần thiết. Nguyên tắc thứ mười một là kiến trúc, yêu cầu và thiết kế tốt tạo nên nhóm tự tổ chức tốt. Nguyên tắc cuối cùng là thường xuyên phản ảnh việc làm thế nào để nhóm làm việc hiệu quả hơn và điều chỉnh sao cho phù hợp. Thực hiện mười hai nguyên tắc này trong Agile sẽ giúp tổ chức của bạn linh hoạt để có thể thích ứng với những thay đổi trong quá trình xây dựng dự án, giảm lãng phí trong hệ thống của bạn để bạn có thể tiết kiệm chi phí hơn, cuối cùng là tạo một môi trường làm việc lành mạnh, nơi mọi người đều cảm thấy được đánh giá cao và do đó góp phần đáp ứng tốt hơn với các yêu cầu từ phía khách hàng.
Cùng với sự ra đời của bản Tuyên Ngôn Agile 2001 đánh dấu sự ra đời của Agile như một phương pháp luận. Kể từ đó, nhiều phương pháp phát triển phần mềm linh hoạt đã xuất hiện như Scrum, EXtreme Programming (XP), Kanban, ...Ở đây em sẽ giới thiệu một số phương pháp trong phát triển phần mềm linh hoạt:
Scrum Scrum là một phương pháp phát triển phần mềm linh hoạt (Agile) tập trung đặc biệt vào việc quản lý các công việc trong môi trường phát triển dựa theonhóm. Scrum dựa trên sự học hỏi liên tục và điều chỉnh đối với các yếu tố biến động. Nó thừa nhận rằng nhóm không biết mọi thứ khi bắt đầu dự án và sẽ phát triển nhờ kinh nghiệm. Scrum được cấu trúc để giúp các nhóm thích ứng một cách tự nhiên với các điều kiện thay đổi và yêu cầu của người dùng, với tính năng ưu tiên lại được tích hợp trong quy trình và chu kỳ phát hành ngắn để nhóm của bạn có thể liên tục học hỏi và cải tiến.
Scrum gồm ba vai trò bao gồm Product Owner (chủ sản phẩm), Scrum Master và Development Team (Đội sản xuất hay nhóm phát triển.
Xác định ba thành phần trong Scrum gồm Product Backlog, Sprint Backlog, Sprint giống như một công cụ để giải quyết một vấn đề.
Extreme Programming XP là một phương pháp phát triển phần mềm hướng đến việc năng cao chất lượng phần mềm và khả năng đáp ứng với thay đổi yêu cầu người dùng. XP chủ trương đưa ra các bản phát hành thường xuyên thông qua các chu trình phát triển ngắn. Việc này là để nâng cao năng suất và tạo ra những thời điểm để tiếp nhận những yêu cầu người dùng mới.
Các hoạt động trong XP bao gồm viết mã, kiểm thử, lắng nghe, thiết kế.
Các yêu cầu nghiệp vụ được thu nhập theo các story. Ở phương pháp này các bản phát hành sẽ dựa trên các vòng đời ngắn hơn được gọi là Iteration với mỗi lần lặp là 14 ngày. Mỗi lần lặp bao gồm các giai đoạn như lập trình, kiểm thử đơn và kiểm thử hệ thống.  Kanban Kanban là một khuôn khổ phổ biến được sử dụng để triển khai phát triển linh hoạt và DevOps. Nó yêu cầu giao tiếp thời gian thực hiện về năng lực và sự minh bạch hoàn toàn của công việc. Các hạng mục công việc được thể hiện trực quan trên bảng Kanban, cho phép các thành viên trong nhóm xem trạng thái của từng hạng mục công việc bất cứ lúc nào.
Công việc của tất cả các đội Kanban xoay quanh một bảng Kanban, một công cụ được sử dụng để hình dung công việc và tối ưu hóa quy trình công việc giữa các đội.
2.1.2 Vai trò của kiểm thử trong phát triển phần mềm linh hoạt Vai trò của kiểm thử trong phát triển phần mềm linh hoạt cũng giống như vai trò của kiểm thử trong phát triển phần mềm truyền thống là kiểm tra tìm kiếm các lỗi của phần mềm, ứng dụng hoặc xác minh, thẩm định liệu phần mềm đó đã đápứng được các yêu cầu kỹ thuật và yêu cầu nghiệp vụ hay không. Từ đó tạo nên một sản phẩm chất lượng mang tính thực tiễn và đạt hiệu quả cao.
Vai trò của giai đoạn kiểm thử giúp nhà phát triển:
Hiệu quả về chi phí: giúp nhanh chóng tìm kiếm phát hiện lỗi của phần mềm, giúp giảm chi phí sửa chữa Trách nhiệm về bảo mật: giúp sản phẩm hoàn thiện nhất, tránh những lỗ hổng bảo mật và tăng độ tin cậy cho người dùng.
Trách nhiệm về chất lượng sản phẩm: đảm bảo độ tin cậy, hiệu suất; đảm bảo được các yêu cầu, tính năng cần thiết của phần mềm. Khi sản phẩm được đưa đến khách hàng phải là một sản phẩm đạt đủ các yêu cầu của khách hàng về giao diện, cấu trúc, tính năng, ... và đảm bảo không có bất cứ lỗi nào trên sản phẩm.
Niềm tin của khách hàng: sản phẩm càng hoàn thiện sẽ tạo ra những trải nghiệm người dùng tốt, từ đó càng tạo được niềm tin và uy tín với khách hàng.
Ngoài ra, kiểm thử trong Agile là thực hành kiểm thử tuân theo các quy tắc và nguyên tắc của phát triển phần mềm linh hoạt. Cho nên, việc kiểm tra cần diễn ra sớm và thường xuyên, kiểm thử Agile có thể bắt đầu ngay khi bắt đầu dự án với sự tích hợp giữa giai đoạn phát triển và giai đoạn kiểm thử, thay vì đợi quá trình phát triển kết thúc mới bắt đầu quá trình kiểm thử, thì trong Agile kiểm thử được diễn ra liên tục khi các tính năng được thêm vào. Vậy nên, kiểm thử Agile mang lại được các lơi ích khác so với việc kiểm thử trong các phương pháp truyền thống khác là:
Kiểm thử trong Agile cải thiện chất lượng sản phẩm và cho phép phát triển phần mềm theo chu kỳ ngắn.
Việc tìm kiếm và sửa lỗi được xảy ra nhanh hơn. Vì vậy, giảm nguy cơ tìm thấy lỗi vào cuối quá trình kiểm thử.
Làm hài lòng khách hàng bằng các cung cấp các bản phát hành thường xuyên.
Vì vậy, sẽ cải thiện được tỷ lệ giữ chân khách hàng.
2.2 Xây dựng phương pháp kiểm thử hướng ngữ cảnh trong phát triển phần
mềm linh hoạt Kiểm thử hướng ngữ cảnh là sự kết hợp của các kỹ năng, kỹ thuật và khả năng phán đoán phù hợp với bối cảnh của dự án. Nó là tập hợp các tiêu chẩn về phươngpháp đánh giá. Nó được thực hiện dựa trên bảy nguyên tắc. Nguyên tắc đầu tiên là giá trị của bất kỳ hoạt động nào cũng phụ thuộc vào bối cảnh của nó. Thứ hai là có nhiều phương pháp tốt, nhưng không có phương pháp nào là tốt nhất. Thứ ba là mọi người làm việc cùng nhau là phần quan trọng nhất trong bối cảnh của bất kỳ dự án nào. Thứ tư là các dự án diễn ra theo thời gian theo những cách thường không thể đoán trước được. Thứ năm là sản phẩm là một giải pháp, nếu vấn đề không được giải quyết, sản phẩm sẽ không được hoạt động. Thứ sáu là kiểm thử phần mềm là một quá trình đầy thử thách đối với trí tuệ. Cuối cùng là chỉ thông qua sự phán đoán và kỹ năng, hợp tác thực hiện toàn bộ dự án, chúng ta có thể làm việc phù hợp vào đúng thời điểm để kiểm tra hiệu quả sản phẩm của mình. Kiểm thử hướng ngữ cảnh là một cách tiếp cận, không phải là một kỹ thuật.
Các dự án được xây dựng theo các nguyên tắc trong Agile với các yêu cầu, kế hoạch và kết quả được đánh giá liên tục được thực hiện trong các phân đoạn lặp đi lặp lại. Các dự án này cho phép sự thay đổi yêu cầu người dùng nên rất khó để lên kế hoạch cho dự án, chỉ có thể lên kế hoạch cho mỗi giai đoạn của dự án. Ngoài ra, các dự án này cũng gặp khó khăn trong việc thu thập tài liệu đầy đủ và chính xác các yêu cầu người dùng.
Kiểm thử Agile là một phương thức kiểm tra phần mềm theo các quy tắc và nguyên tắc trong phát triển phần mềm Agile. Trong Agile ủng hộ cách tiếp cận giảm thiểu lãng phí, đưa sản phẩm đến với khách hàng một cách nhanh nhất, và trong kiểm thử theo hướng ngữ cảnh cũng vậy. Kiểm thử Agile có thể thực hiện ngay từ thời điểm bắt đầu dự án với sự tích hợp giữa giai đoạn phát triển và giai đoạn kiểm thử. Kiểm thử trong Agile thường sử dụng các bài kiểm tra đơn vị. Trong Agile thường đề xuất phương pháp kiểm thử theo mô hình vòng đời tiến hóa hoặc xoắn ốc với tài liệu tối thiểu, hầu hết người kiểm thử theo hướng ngữ cảnh sẽ cảm thấy thoải mái khi làm việc với mô hình này. .
Hình 2.1: Phương pháp kiểm thử trong AgilePhương pháp kiểm thử hướng ngữ cảnh trong phát triển phần mềm linh hoạt sẽ được trải qua bốn giai đoạn bao gồm giai đoạn đầu tiên bước lặp là 0 là giai đoạn thiết lập các công việc, giai đoạn thứ hai là lặp lại xây dựng, giai đoạn thứ ba là giai đoạn chuyển tiếp và giai đoạn cuối cùng là giai đoạn hoàn thành sản phẩm.
1. Giai đoạn đầu tiên (Iteration 0) Ở giai đoạn đầu tiên là giai đoạn thiết lập các công việc đầu tiên sẽ được thực hiện bao gồm thu thập thông tin về dự án, xây dựng kế hoạch. Yêu cầu thu thập thông tin dự án chi tiết liên quan đến các công việc thu thập các câu chuyện người dùng, các công việc phát triển và kiểm thử của dự án.
Sử dùng công cụ biểu đồ Xmind Zen để phác thảo các yêu cầu chính của người dùng được môt tả tại hình dưới đây: .
Hình 2.2: Phác thảo các yêu cầu người dùng bằng Xmind Zen Từ biểu đồ yêu cầu người dùng sẽ phân tích chức năng của hệ thống sao cho phù hợp với các yêu cầu người dùng, theo theo thứ tự ưu tiên của các công việc. Ngoài ra, các chức năng liên quan đến nhau sẽ được tổ chức thành môt nhóm tương ứng với một vòng lặp ở giai đoạn lặp lại xây dựng. .
Hình 2.3: Phác thảo các chức năng của hệ thống bằng Xmind Zen2. Giai đoạn lặp lại xây dựng (Construction Iteration) Giai đoạn tiếp theo là lặp lại xây dựng, hầu hết quá trình kiểm tra phần mềm sẽ được thực hiện ở giai đoạn này. Trong giai đoạn này được cho tập hợp các lần lặp lại việc test để tìm ra giải pháp trong mỗi vòng lặp. Giai đoạn này được chia thành hai phần là confirmatory testing (kiểm thử xác nhận) và investigative testing (kiểm thử điều tra). Confirmatory testing tập trung vào việc xác minh rằng hệ thống đã đáp ứng mục đích của yêu cầu người dùng hay chưa. Trong khi Investigative testing phát hiện ra các vấn đề mà confirmatory testing đã bị bỏ sót.
Từ biểu đồ Xmind Zen phác thảo chức năng ở giai đoạn đầu tiên sẽ cho biết số vòng lăp và các chức năng của hệ thống cần thực hiện tại mỗi vòng lặp.
Sau đó dựa vào các tài liệu phân tích chức năng về yêu cầu người dùng để xây dựng kế hoạch kiểm thử.
3. Release Giai đoạn tiếp theo là giai đoạn phát hành hay giai đoạn chuyển phase. Giai đoạn này là giai đoạn kiểm thử toàn bộ hệ thống và kiểm thử chấp nhận hệ thống. Để hoàn thành giai đoạn thử nghiệm cuối cùng này không có bất kỳ trở trở ngại nào, thì các tester phải kiểm tra sản phẩm nghiêm ngặt khi nó đang trong giai đoạn thứ hai lặp lại xây dựng.
4. Production Giai đoạn cuối cùng là giai đoạn hoàn thành sản phẩm và đưa sản phẩm đến với khách hàng.
2.3 Khảo sát và xây dựng ví dụ
Với phương pháp kiểm thử được nếu ở trên, em sẽ xây dựng website để thử nghiệm phương pháp này. Dưới đây là biểu đồ Xmind Zen phác thảo các yêu cầu chính của website.
Hình 2.4: Biểu đồ Xmind Zen phác thảo yêu cầu chính của website.
Ở đây, em sẽ xây dựng một website là nơi có thể chia sẻ cảm nhận của bản thân về những cuốn sách từ đời sống, sách kinh doanh hay những cuốn tiểu thuyết.
Trang web này có hai tác nhân chính là guest (khách) và user (người dùng). Guest là người dùng chưa đăng nhập hệ thống, còn user là người dùng đã đăng nhập vào hệ thống có các quyền như tạo bài viết, ...
Đối với các yêu cầu dành cho khách: Khách là người dùng chưa đăng nhập vào hệ thống, khách có thể thực hiện các chức năng đăng ký tài khoản vào hệ thống hoặc đăng nhập vào hệ thống, có thể xem và tìm kiếm các bài viết.
Đối với các yêu cầu dành cho người dùng: Khi người dùng đã đăng nhập vào hệ thống có thể thực hiện các chức năng quản lý thông tin cá nhân của người dùng và quản lý bài viết. Đối với chức năng quản lý thông tin cá nhân, người dùng có thể xem và chỉnh sửa thông tin cá nhân. Còn đối với chức năng quản lý bài viết, người dùng có thể tạo, xem, chỉnh sửa và xóa bài viết, có thể bình luận ở mỗi bài viết.
Từ các yêu cầu người dùng được phác thảo ở biểu đồ 2.4. Dưới đây là sơ đồ Xmind Zen phác thảo những chức năng chính của website, cũng như cho biết số vòng lặp và công việc ở mỗi vòng lặp được thực hiện ở giai đoạn lặp lại xây dựng.
Hình 2.5: Biểu đồ Xmind Zen phác thảo các chức năng chính của website .2.4 Phân tích chức năng hệ thống Qua biểu đồ Xmind Zen phân tích các chức năng của website ở mục 2.3, tại giai đoạn lặp lại xây dựng trải qua 5 vòng lặp. Tại mỗi vòng lặp, các chức năng tương ứng cụ thể sau:
Vòng lặp 1: Chức năng đăng ký và chức năng đăng nhập tài khoản Vòng lặp 2: Chức năng tìm kiếm và xem chi tiết bài viết Vòng lặp 3: Chức năng xem thông tin và chỉnh sửa thông tin tài khoản Vòng lặp 4: Chức năng xem danh sách bài viết của tôi, tạo, chỉnh sửa và xóa bài viết Vòng lặp 5: Chức năng bình luận vào bài viết 1. Vòng lặp 1:
User story chức năng đăng nhập tài khoản Title: Đăng nhập vào hệ thống Priority Estimate User story:
Là người dùng chưa đăng nhập hệ thống tôi muốn có chức năng đăng nhập để có thể thực hiện các quyền dành cho người dùng 1. Acceptance Criteria 1:
Khi truy cập vào trang web, chọn chức năng đăng nhập tài khoản Khi đó, người dùng nhập đầy đủ thông tin đăng nhập hiện tại gồm tên đăng nhập và mật khẩu trước khi nhấn vào button Đăng nhập Sau đó, trả về trang chủ và hiển thị thông báo "Bạn đã đăng nhập tài khoản thành công" 2. Acceptance Criteria 2:
Khi truy cập vào trang web, chọn chức năng đăng nhập tài khoản Khi đó, người dùng nhập sai thông tin đăng nhập gồm tên đăng nhập và mật khẩu trước khi nhấn vào button Đăng nhập Sau đó, hiển thị thông báo lỗi " Tên đăng nhập và mật khẩu không chính xác" 3. Acceptance Criteria 3:
Khi truy cập vào trang web, chọn chức năng đăng nhập tài khoản Khi đó, người dùng bỏ nhập thông tin đăng nhập sau đó nhấn vào button Đăng nhập Sau đó, hiển thị thông báo lỗi " Vui lòng nhập lại tên đăng nhập và mật khẩu" Bảng 2.1: User story đăng nhập tài khoản2. Vòng lặp thứ 2:
User story chức năng tìm kiếm bài viết Title: Tìm kiếm bài viết Priority Estimate User story:
Là người dùng tôi muốn có chức năng tìm kiếm bài viết để có thể thực hiện tìm kiếm bài viết theo tên sách Acceptance Criteria:
Khi truy cập vào trang web, với thanh tìm kiếm nằm ở đầu Khi đó, người dùng nhập tên sách cần tìm kiếm, sau đó nhấn vào button Tìm kiếm Sau đó, trả về giao diện kết quả tìm kiếm và hiển thị bài biết theo tên mình đã nhập với các thông tin của bài bài viết bào gồm: hình ảnh, tên sách, tác giả sách và mô tả sách Bảng 2.2: User story tìm kiếm bài viết 3. Vòng lặp thứ 3 User story chức năng Cập nhật thông tin cá nhân Title: Cập nhật thông tin cá nhân Priority Estimate User story:
Là người dùng đã đăng nhập vào hệ thống tôi muốn có chức năng chỉnh sửa thông tin cá nhân để có thể thực hiện cập nhật thông tin cá nhân của mình 1. Acceptance Criteria 1:
Khi đã đăng nhập vào trang web, ở giao diện Thông tin cá nhân chọn chức năng Chỉnh sửa thông tin Khi đó, người dùng nhập đầy đủ thông tin Sau đó, trả về giao diện Thông tin người dùng và thông báo: "Thông tin cá nhân đã được cập nhật thành công" 2. Acceptance Criteria 2:
Khi đã đăng nhập vào trang web, ở giao diện Thông tin cá nhân chọn chức năng Chỉnh sửa thông tin cá nhân Khi đó, người dùng để trống trường Tên đăng nhập Sau đó, hiển thị thông báo lỗi "Tên đăng nhập không được để trống" Bảng 2.3: User story cập nhật tài khoản4. Vòng lặp 4:
User story chức năng tạo bài viết Title: Tạo bài viết Priority Estimate User story:
Là người dùng đã đăng nhập vào hệ thống tôi muốn có chức năng tạo bài viết để có thể thực hiện tạo bài viết 1. Acceptance Criteria 1:
Khi đã đăng nhập vào trang web, ở giao diện Bài viết của tôi, nhấn vào button Tạo bài viết Khi đó, người dùng nhập đầy đủ thông tin Sau đó, trả về giao diện Trang chủ và thông báo: "Bài viết đã được thêm thành công!!" 2. Acceptance Criteria 2:
Khi đã đăng nhập vào trang web, ở giao diện Bài viết của tối, nhấn vào button Tạo bài viết Khi đó, người dùng để trông trường Tên sách Sau đó, hiển thị thông báo lỗi "Vui lòng trường tên sách không được để trống" Bảng 2.4: User story chức năng tạo bài viết 5. Vòng lặp 5:
User story chứ năng bình luận vào bài viết Title: Bình luận vào bài viết Priority Estimate User story:
Là người dùng tôi muốn có chức năng bình luận vào bài viết để có thể thực hiện bình luận vào bài viết 1. Acceptance Criteria 1:
Khi đã đăng nhập vào trang web, ở cuối giao diện Thông tin bài viết Khi đó, người dùng nhập bình luận vào bài viết , nhấn button Thêm bình luận Sau đó, trả về giao diện Thông tin bài viết và hiển thị bình luận 2. Acceptance Criteria 2:
Khi chưa đăng nhập vào trang web, ở cuối giao diện Thông tin bài viết Khi đó, người dùng nhập bình luận vào bài viết, nhấn button Thêm bình luận Sau đó, hiển thị thông báo lỗi "Bạn cần đăng nhập vào hệ thống để thực hiện chức năng!!" Bảng 2.5: User story chức năng bình luận bài viếtĐối với user story của các chức năng đăng ký tài khoản, xem chi tiết bài viết, xem thông tin cá nhân, xem danh sách bài viết của tôi, chỉnh sửa bài viết và xóa bài viết cũng tương tự với các user story của các chức năng đăng nhập tài khoản, tìm kiếm bài viết, tạo bài viết được viết ở trên.
2.5 Yêu cầu phi chức năng
1. Chức năng Trong các user story có sự tham gia của người dùng như các chức năng đăng nhập hay đăng ký, thì cần có sự thông báo cho người dùng trong các trường hợp khi người dùng nhập sai.
Trong tất cả các chuỗi sự kiện của các user story, đối với các bước có thao tác với cơ sở dữ liệu, nếu lỗi trong quá trình kết nối hoặc thao tác, cần có thông báo lỗi tương ứng để người dùng nhận biết là lỗi liên quan đến cơ sở dữ liệu, chứ không liên quan tới người dùng.
2. Tính dễ dùng Các chức năng khi được thiết kế sao cho dễ sử dụng. Nếu xảy ra lỗi trong quá trình thao tác cần phải thông báo lỗi, để biết và sửa lỗi.
Giao diện được thiết kế đơn giản, dễ thao tác và dễ sử dụng với tất cả người dùng. Giao diện trực quan, dễ dàng thấy được các nút cũng như các vị trí nhập để người dùng thuận tiện hơn trong việc sử dung.
3. Tính dễ bảo trì Các chức năng, các thành phần được phân chia riêng biệt, độc lập với nhau để có thể dễ dàng bảo trì chức năng, thành phần mà không ảnh hưởng đến toàn bộ hệ thống.
Với chương 2 đã xây dựng phương pháp kiểm thử hướng ngữ cảnh trong phát triển phần mềm linh hoạt. Cùng với đó, khảo sát và phân tích các chức chính của website để thử nghiệm phương pháp kiểm thử này. Ở chương tiếp theo sẽ trình bày công nghệ em đã lựa chọn trong phương pháp kiểm thử cũng như trong xây dựng website.3.1 Tìm hiểu về công cụ biểu đồ tư duy Xmind Zen Hình 3.1: Logo công cụ biểu đô tư duy Xmind Zen .
Xmind Zen là công cụ cho phép phác thảo ý tưởng hoặc lập kế hoạch cho các dự án bằng cách vẽ biểu đồ tư duy và sơ đồ. Đây là công cụ lý tưởng để quản lý danh sách, tổ chức thông tin và ý tưởng, quản lý mục tiêu và nhiệm vụ.
3.2 Ngôn ngữ javascripts và môi trường Nodejs
Hình 3.2: Logo Nodejs . Nodej không phải là một ngôn ngữ, thư viện hay một framework, mà nodejs là mã nguồn được xây dựng trên nền tảng của ngôn ngữ V8 javascript Engine. Nhờ Nodejs mà việc xây dựng các ứng dụng Web trở nên đơn giản và dễ dàng hơn rất nhiều. Ngoài ra, Nodejs còn được biết tới là một mã nguồn mở và là một môi trường cho các máy chủ và ứng dụng mạng. Nodejs có khả năng xử lý nhiều kết nối đồng thời một cách dễ dàng. Ngoài ra, nodejs là mã nguồn mở có thể chạy trên nhiều nên tảng hệ điều hành khác nhau nên được rất nhiều lập trình viên sử dụng.
3.3 Hệ quản trị cơ sở dữ liệu MongoDB
Mongodb là một hệ quản trị cơ sở dữ liệu NoSQL mã nguồn mở đa nền tảng viết bằng C++. Bản ghi trong MongoDB được lưu trữ dưới dạng văn bản (document), là một cấu trúc dữ liệu bao gồm các cặp giá trị và trường tương tự như các đối tượng Json.
Hình 3.3: Logo hệ quản trị dữ liệu MongoDB .
Ưu điểm của MongoDB:
Lưu trữ dự liệu dưới dạng json, mỗi một collection sẽ có các kích cỡ và các document khác nhau nên sẽ rất linh hoạt cho việc lưu trữ dự liệu.
Khác với các hệ quản trị cơ sở dữ liệu quan hệ thì dữ liệu trong đây không có sự ràng buộc và không có yêu cầu tuân theo khuôn khổ nhất định nên các thao tác được thực hiện rất nhanh.
Tiếp đến cũng là về hiệu suất, khi có truy vấn dữ liệu thì các record được cached lên bộ nhớ ram, để lượt truy vấn sau diễn ra nhanh hơn mà không cần đọc từ ổ cứng.
Rất dễ mở rộng, MongoDB dễ dàng mở rộng hệ thống bằng cách thêm node vào cluster – cụm các node chứa dữ liệu giao tiếp với nhau.
Đối với những ưu điểm trên thì khi lựa chọn MongoDB thì các ứng dụng yêu cầu thời gian thực, phản hồi nhanh, tương tác thường xuyên thì MongoDB là lựa chọn rất phù hợp. Ngoài ra MongoDB còn là lựa chọn thích hợp cho một số hệ thống yêu cầu lưu trữ dữ liệu lớn, yêu cầu truy vấn nhanh như các hệ thống BigData. 3.4 Framework expressjs Expressjs là một framework được xây dựng trên nền tảng nodejs. Nó cung cấp các tính năng mạnh mẽ để phát triển web và mobile. Expressjs hỗ trợ các method HTTP và midleware tạo ra API vô cùng mạnh mẽ.
Hình 3.4: Framework Expressjs .
Express js là một Framework nhỏ, nhưng linh hoạt được xây dựng trên nền tảng của Nodejs. Nó cung cấp các tính năng mạnh mẽ để phát triển web hoặc mobile.Expressjs hỗ trợ các method HTTP và midleware tạo ra API vô cùng mạnh mẽ và dễ sử dụng.
Một số chức năng chính của Expressjs như: thiết lập các lớp trung gian để trả về các HTTP request, định nghĩa router cho phép sử dụng với các hành dộng khác nhau trên phương thức HTTP và url, cho phép trả về các trang HTML dựa vào các tham số Express.js có thể giúp làm giảm một nửa thời gian viết mã mà vẫn xây dựng lên các ứng dụng web hiệu quả. Không chỉ trợ giúp về mặt thời gian Expressjs còn làm giảm những áp lực cần thiết để xây dựng với sự trợ giúp của các tính năng khác nhau của nó.Express js còn cung cấp một phần mềm trung gian đảm nhận nhiệm vụ đưa ra các quyết định để phản hồi chính xác những yêu cầu của khách hàng.
Tính năng của expressjs:
Phát triển máy chủ nhanh chóng: Expressjs cung cấp nhiều tính năng dưới dạng các hàm để dễ dàng sử dụng ở bất kỳ đâu trong chương trình. Điều này đã loại bỏ nhu cầu viết mã từ đó tiết kiệm được thời gian.
Phần mềm trung gian Middleware: Đây là phần mềm trung gian có quyền truy cập vào cơ sở dữ liệu, yêu cầu của khách hàng và những phần mềm trung giankhác. Phần mềm Middleware này chịu trách nhiệm chính cho việc tổ chức có hệ thống các chức năng của Express.js.
Định tuyến - Routing: Express js cung cấp cơ chế định tuyến giúp duy trì trạng thái của website với sự trợ giúp của URL.
Tạo mẫu - Templating: Các công cụ tạo khuôn mẫu được Express.js cung cấp cho phép các nhà xây dựng nội dung động trên các website bằng cách tạo dựng các mẫu HTML ở phía máy chủ.
Gỡ lỗi - Debugging: Để phát triển thành công các ứng dụng web không thể thiết đi việc gỡ lỗi. Giờ đây với Expressjs việc gỡ lỗi đã trở nên dễ dàng hơn nhờ khả năng xác định chính xác các phần ứng dụng web có lỗi.
Trong khi phát triển và xây dựng chức năng, em còn sử dụng template của ex press là handlebar để xây dựng giao diện người dùng và sử dụng thư viện mongoose của javascript để định nghĩa các đối tượng.
Hình 3.5: Template engine Handlebars .
Handlebars là một trong nhũng thư viện template engine được kế thừa và phát huy tính năng của Mustache. Ưu điểm của nó giúp kết hợp với các thành phần HTML một cách dễ dàng, tạo điều kiện thuận lợi để thực hiện một số phép toán logic như loop với each, điều kiện if, ...
.
Mongoose là một Object Document Mapper (ODM). Mongoose cho phép định nghĩa các Object với một scheme được định nghĩa rõ ràng, được ánh xạ tới một MongoDB document. Mongoose cung cấp một số lượng đáng kinh ngạc các chức năng cho việc tạo ra và làm việc với các schema.
Mongoose là một thư viện của Javascript cho phép bạn định nghĩa các schemaHình 3.6: Thư viện Mongoose với dữ liệu được định kiểu rõ ràng. Khi một schema được định nghĩa, Mongoose cho phép bạn tạo ra một Model dựa trên một schema cụ thể. Khi bạn đã xác định các schema và model của mình, mongoose chứa nhiều hàm khác nhau cho phép bạn xác thực tính hợp lệ, xóa, lưu và truy vấn dữ liệu bằng các hàm mongoDB phổ biến.
Tại chương 3, em đã trình bày các công nghệ em sử dụng cho phương pháp kiểm thử và trong việc xây dựng website. Ở chương tiếp theo, em sẽ trình bày chi tiết về xây dựng website gồm thiết kế kiến trúc, thiết kế cơ sở dữ liệu và kiểm thử.4.1 Thiết kế kiến trúc 4.1.1 Lựa chọn kiến trúc phần mềm Hình 4.1: Mô hình mvc .
Trong xây dựng website này, website này phát triển trên framework expressjs với kiến trúc theo mô hình MVC gồm ba phần chính là model, view và controller.
Expressjs giúp cho việc tổ chức các ứng dụng web thành một kiến trúc MVC có tổ chức hơn. Ở phần View là phần giao diện dành cho người dùng. Phần model là phần chứa toàn bộ dữ liệu của ứng dụng. Phần controller là bộ phận có nhiệm vụ xử lý các yêu cầu người dùng đưa đến thông qua view, từ đó đưa ra dữ liệu phù hợp cho người dùng.
Luồng xử lý trong mô hình mvc: khi yêu cầu từ máy khách (client) gửi đến server, controller sẽ thực hiện nhiệm vụ đó là tiếp nhận và xử lý yêu cầu hay sự kiện. Controller giao tiếp với model trong mvc, sau đó model làm việc với database đễ hỗ trợ chuẩn bị dữ liệu và gửi lại cho controller. Cuối cùng, khi xử lý xong yêu cầu thì controller gửi dữ liệu trở lại view và hiển thị cho người dùng trên trình duyệt.
Lập trình MVC trong Nodejs tức là sẽ tạo các chức năng cho website quy ước theo mô hình MVC. Theo đó, các việc xử lý request, hiển thị dữ liệu, xử lý dữ liệu phải tách bạch theo quy định.
Module express-generator đã giúp tạo dự án gần giống với mô hình mvc. Như folder view chứa các file view để hiển thị dữ liệu giúp người dùng tương tác với hệ thống. Thành phần model để cung cấp dữ liệu, thực hiện kết nối và thao tácvới dữ liệu trong cơ sở dữ liệu. Controller gồm hai thư mực routers và controller, trong đó routers đảm nhận việc định nghĩa các đường dẫn và các function xử lý; còn controller đảm nhận việc thực thi chứa code các function tương ứng được định nghĩa ở các routers.
4.1.2 Thiết kế tổng quan Hình 4.2: Biểu đồ tổng quan Website của em được xây dựng trên framework expressjs, vì vậy biểu đồ gói UML gồm ba thành phần chính là view, model và controller.
4.1.3 Thiết kế chi tiết gói Thiết kế chi tiết gói bao gồm các gói Model, Controller và View Hình 4.3: Biểu đồ gói Model Gói model thì gồm ba class model là book, user, comment phục vụ việc kết nối và định dạng kiểu dữ liệu cho đối tượng trong cơ sở dữ liệu tương ứng thông qua schema.Hình 4.4: Biểu đồ gói Controller Gói controller chứa các class controller phục vụ xử lý dữ liệu và trả về dữ liệu cho người dùng thông qua view. Trong đó NewsController xử lý những hành động liên quan đến chức năng tìm kiếm và trả về các dữ liệu ở trang view home. Còn UserController xử lý các chức năng liên quan đến người dùng như đăng nhập, đăng ký, chỉnh sửa thông tin cá nhân. Cuối cùng là BookController xử lý các chức năng liên quan đến tạo bài viết, xem bài viết, chỉnh sửa viết, xóa bài viết và bình luận vào bài viết.
Hình 4.5: Biểu đồ gói View Gói view có chức năng là trả dữ liệu từ controller về màn hình của người dùng và gửi các yêu cầu người dùng đến controller để xử lý.4.2 Thiết kế cơ sở dữ liệu Từ những phân tích dữ liệu yêu cầu của website, em xây dựng mô hình cở sở dữ liệu gồm hai bảng là bảng Users và bảng Books được thiết kế như mô hình dưới đây:
Hình 4.6: Thiết kế cơ sở dữ liệu .
4.3 Giao diện người dùng
Giao diện người dùng bao gồm:
Hình 4.7: Giao diện trang chủ .
.
.
.Hình 4.8: Giao diện trang đăng nhập Hình 4.9: Giao diện trang xem chi tiết Hình 4.10: Giao diện trang kết quả tìm kiếmHình 4.11: Giao diện trang danh sách bài viết của tôi .
Hình 4.12: Giao diện trang tạo bài viết .
Hình 4.13: Giao diện trang xóa bài viết .
4.4 Kiểm thử
4.4.1 Kiểm thử chức năng 1. Vòng lặp 1: Kiểm thử chức năng đăng nhập tài khoản Keyword Table:
Step Description Keyword Object Acciton Step 1 Click ’linkNavbardropdown’ link Click Click Step 2 Click ’Đăng nhập’ link Click Login button Click Step 3Waits until the browser loads the page and is ready to accept user inputWaits result form Step 4 Enter username Input dataLogin usernameset Step 5 Enter password Input dataLogin passwordset Step 6 Click button Đăng nhâp ClickButton Đăng nhâpClick Step 7Waits until the bowser loads the page and is ready to accept user inputWaits result text Bảng 4.4: Bảng kiểm tra chức năng đăng nhập tài khoản Bảng dữ liệu:
Test 1 Test 2 Test 3 Test 4 Test 5 username " " test 1 test 1 test 1 password " " 123 123 123456 Bảng 4.5: Bảng dữ liệu của chức năng đăng nhập tài khoản Màn hình kết quả:Hình 4.15: Giao diện trang kết quả chức năng đăng nhâp tài khoản với test 1 .
Hình 4.16: Giao diện trang kết quả chức năng đăng nhâp tài khoản với test 2 .
Hình 4.17: Giao diện trang kết quả chức năng đăng nhâp tài khoản với test 3. .
Hình 4.18: Giao diện trang kết quả chức năng đăng nhâp tài khoản với test 4 Hình 4.19: Giao diện trang kết quả chức năng đăng nhâp tài khoản với test 5 .
2. Vòng lặp 2: Kiểm tra chức năng tìm kiếm bài viết Keyword Table:
Step Description Keyword Object Data Step 1 click searchBoxSearch Click input search Step 2 Enter data Set input search ’tôi’ Step 3 Click button Tìm kiếm Click button Search Step 4Waits until the browser loads the pageand is ready to accept input dataWaits result text Bảng 4.6: Bảng kiểm thử chức năng tìm kiếm bài viếtMàn hình kết quả: .
Hình 4.20: Giao diện kết quả trang tìm kiếm 3. Vòng lặp 3: Kiểm tra chức năng cập nhật thông tin cá nhân Keyword Table:
Step Description Keyword Object Acciton Step 1 Click ’linkNavbardropdown’ link Click Click Step 2 Click ’Thông tin tài khoản’ link Click View button Click Step 3Waits until the browser loads the page and is ready to accept user inputWaits result Step 4 Click ’Chỉnh sửa thông tin cá nhân’link Click result form Click Step 5 Enter username Input datainput usenameset Step 6 Enter phone number Input datainput phone numberset Step 7 Enter address Input datainput addressset Step 8 Enter history Input datainput historyset Step 9 Click button ’Lưu lại’ Clickbutton Lưu lạiClick Step 7Waits until the bowser loads the page and is ready to accept user inputWaits result text Bảng 4.7: Bảng kiểm thử chức năng cập nhật thông tin cá nhânBảng dữ liệu:
Test 1 Test 2 Test 3 usename Test1 Test1 password 097 0987654321 address Hà Nội Hà Nội history Bảng 4.8: Bảng dữ liệu của chức năng chỉnh sửa thông tin cá nhân Màn hình kết quả:
Hình 4.21: Giao diện kết quả chức năng cập nhật thông tin tài khoản với test 1 Hình 4.22: Giao diện kết quả chức năng cập nhật thông tin tài khoản với test 2 .Hình 4.23: Giao diện kết quả chức năng cập nhật thông tin tài khoản với test 3 .
4. Vòng lặp 4: Kiểm tra chức năng tạo bài viết Keyword Table:
Step Description Keyword Object Acciton Step 1 Click ’Bài viết của tôi’ link Click Click Step 2 Click ’Thêm bài viết’ link Click Button Click Step 3Waits until the browser loads the page and is ready to accept user inputWaits result form Step 4 Enter name Input data Input name set Step 5 Enter author Input dataInput authorset Step 6 Enter introduce Input dataInput introduceset Step 7 Enter description Input dataInput descriptionset Step 8 Click ’Hình ảnh’ control Click button Step 6 Click button Thêm bài viết ClickButton Thêm bài viếtClick Step 7Waits until the bowser loads the page and is ready to accept post inputWaits result text Bảng 4.9: Bảng kiểm thử chức năng tạo bài viếtBảng dữ liệu:
Test 1 Test 2 name Giận author Thích Nhất Hạnh Thích Nhất Hạnh introduceMột cuốn sách hay của thầy Thích Nhất HạnhMột cuốn sách hay của thầy Thích Nhất Hạnh descriptionMở ra cho ta những khả năng kỳ diệu giúp ta thoát khỏi cơn giận và sống đẹp với xã hội xung quanh mìnhMở ra cho ta những khả năng kỳ diệu giúp ta thoát khỏi cơn giận và sống đẹp với xã hội xung quanh mình image url url Bảng 4.10: Bảng dữ liệu chức năng tạo bài viết Màn hình kết quả: . .
Hình 4.24: Giao diện kết quả chức năng tạo bài viết với test 1 Hình 4.25: Giao diện kết quả chức năng tạo bài viết với test 25. Vòng lặp 5: Kiểm tra chức năng bình luận Keyword Table:
Step Description Keyword Object Acciton Step 1 Click ’Xem chi tiết’ Bài viết Click Click Step 3Waits until the browser loads the page and is ready to accept user inputWaits result form Step 4 Click ’textareaContent’ control Input data Step 5 Enter comment Input dataInput commentset Step 6 Click button Thêm bình luận ClickButton Thêm bình luậnClick Step 7Waits until the bowser loads the page and is ready to accept user inputWaits result text Bảng 4.11: Bảng kiểm thử chức năng tạo bài viết Bảng dữ liệu: Màn hình kết quả: .
Test 1 Test 2 user Chưa đăng nhâp Đã đăng nhâp comment Rất hay Rất hay Bảng 4.12: Bảng dữ liệu của chức năng bình luận Hình 4.26: Giao diện kết quả chức năng bình luận bài viết với test 1Hình 4.27: Giao diện kết quả chức năng bình luận bài viết với test 2 .
Đối với kiểm thử các chức năng đăng ký tài khoản, xem chi tiết bài viết, chỉnh sửa bài viết, xóa bài viết,... cũng tương tự với kiểm thử các chức năng đăng nhập tài khoản, tìm kiếm bài viết, tạo bài viết và bình luận vào bài viết được trình bày ở trên.
4.4.2 Kiểm thử phi chức năng Kiểm thử hiểu suất của chức năng tìm kiếm bài viết .
Hình 4.28: Kiểm tra hiệu suất của chức năng tìm kiếm bài viết Hình 4.29: Kiểm tra hiệu suất của chức năng tìm kiếm bài viết. Với các yêu cầu phi chức năng khác sẽ được thực hiện kiểm thử tương tư như trên.
Tại chương 4, em đã thực hiện công việc xây dựng website và kiểm thử website dựa theo phương pháp em đã xây dựng ở chương 2. Ở chương tiếp theo, em sẽ đánh giá về ưu và nhược điểm của phương pháp cũng như trình bày về những đóng góp của em.5.1 Đánh giá phương pháp 5.1.1 Ưu điểm Vì phương pháp này tuân thủ theo các quy tắc và nguyên tắc trong phát triển phần mềm linh hoạt nên phương pháp này sẽ hạn chế tối đa việc sử dụng các tài liệu đặc tả hệ thống, phân tích yêu cầu, tài liệu thiết kế, ...Vì vậy, ở phương pháp này sẽ không tốn quá nhiều thời gian vào việc thu thập thông tin, chuẩn bị và xây dụng các tài liệu.
Ở phương pháp, với mỗi vòng lặp trong giai đoạn lặp lại xây dựng của phương pháp, việc kiểm thử sẽ được diễn ra thường xuyên ngay sau khi code xong. Cho nên sẽ sớm phát hiện các lỗi xảy ra, thông báo và sửa lỗi ngay trong mỗi vòng lặp (khác với các phương pháp khác như mô hình thác nước là giai đoạn kiểm thử là giai đoạn cuối dự án khi đó mới tìm kiếm và sửa lỗi) do đó sẽ tiết kiệm được thời gian, tiết kiệm được chi phí.
Việc sử dụng công cụ kiểm thử tự động TestComplete có thể thực hiện công việc test một cách liên tục và lặp lại do đó rút ngắn được thời gian thực hiện kiểm thử và tăng độ tin cậy. Ngoài ra, nó còn giúp tái hiện lại các test và đặc biệt là các lỗi của hệ thống.
Với việc sử dụng công cụ biểu đồ tư duy Xmind Zen trong việc xây dựng phương pháp sẽ hạn chế được việc sử dụng tài liệu và việc sử dụng biểu đồ này có thể phác thảo yêu cầu người dùng và phân tích mức độ ưu tiên của yêu cầu người dùng.
Ngoài ra, có thể sử dụng biểu đồ này để thực hiện việc phân chia công việc trong mỗi vòng lặp. Hơn thế nữa, việc sử dụng biểu đồ này, đối với các kiểm thử viên sẽ biết được trong giai đoạn này sẽ thực hiện yêu cầu nào của người dùng và chức năng nào cần kiểm tra trong mỗi vòng lặp.
Đối với phương pháp này sẽ phù hợp với những dự án nhỏ hoặc những dự án thường xuyên cần thay đổi những yêu cầu người dùng ở bất kỳ giai đoạn nào của dự án thậm chí là các giai đoạn cuối của dự án. Vì ở mỗi vòng lặp của giai đoạn lặp lại xây dựng sẽ phát triển để cho ra một phần nhỏ của dự án, theo thời gian phân đoạn này tiếp nối phân đoạn kia, các phần chạy được sẽ được tiếp nối, lớn dần khi toàn bộ yêu cầu của khách hàng được đáp ứng. Cho nên có thể điều chỉnh liên tục nên các thay đổi đều có thể được đáp ứng.5.1.2 Nhược điểm Vì làm việc dựa trên giá trị của sản phẩm nên các công việc liên quan đến các công việc dư thừa không trực tiếp mang lại giá trị cho sản phẩm như tài liệu đặc tả hệ thống, tài liệu thiết kế, ...có thể được loại bỏ.Vì vậy mà các công việc liên quan đến phát triển và kiểm thử sẽ trở nên khó khăn.
Nhược điểm khi sử dụng công cụ biểu đồ tư duy Xmind Zen trong phương pháp này là công cụ chỉ hỗ trợ việc tạo biểu đồ trên một máy và với một người dùng. Tại giai đoạn đầu tiên của phương pháp, việc phác thảo yêu cầu người dùng sẽ trở nên khó khăn khi mà làm việc theo nhóm vì việc phác thảo các yêu cầu người dùng có thể không được đồng nhất.
Trong giai đoạn lặp lại xây dựng, các vòng lặp được xảy ra liên tục và liên tiếp nhau, và sẽ phát triển tịnh tiến nên sẽ có rất ít thời gian để chuẩn bị các kế hoạch kiểm thử, tài liệu kiểm thử.
5.2 Các giải pháp và đóng góp
5.2.1 Khó khăn khi chuẩn bị các kế hoạch kiểm thử tại mỗi vòng lặp ở giai đoạn lặp lại xây dựng 1. Vấn đề gặp phải Gặp khó khăn việc phân tích yêu cầu, thiết lập các phạm vi và xác định các tiêu chí đầu ra khi xây dựng các kế hoạch kiểm thử tại mỗi giai đoạn.
2. Giải pháp đưa ra Sử dụng biểu đồ Xmind Zen để phác thảo phân tích yêu cầu, xác định các tiêu chí đầu ra với mỗi chức năng cần test ở mỗi vòng lặp.
3. Kết quả đạt được Giải pháp này đã giải quyết được vấn đề gặp phải, thực hiện công việc kiểm thử diễn ra nhanh hơn và chính xác hơn.
5.2.2 Khó khăn khi phác thảo yêu cầu người dùng 1. Vấn đề gặp phải Khi phác thảo các yêu người dùng, sẽ phác thảo phân tích yêu cầu người dùngquá nhiều sẽ dẫn đến gây khó khăn cho việc phân tích phác thảo các chức năng cho hệ thống.
2. Giải pháp đưa ra Khi phác thảo các yêu cầu chính của người dùng hay phác thảo các chức năng chính của hệ thống, nên phác thảo theo các tác nhân của hệ thống.
3. Kết quả đạt được Giải pháp này đã giải quyết được vấn đề đã gặp phải, giúp tổ chức các yêu cầu hệ thông rõ ràng dễ hiểu hơn. Cùng với đó việc phân tích, phác thảo chức năng của hệ thống cũng dễ dàng hơn.
Tại chương 5, em đã đánh giá ưu điểm và nhược điểm của phương pháp kiểm thử cũng như đưa ra các khó khăn cũng như hướng giải quyết trong khi thực hiện đồ án tốt nghiệp. Ở chương 6, em sẽ trình bày về kết luận và hướng phát triển trog tương lai.6.1 Kết luận Trong quá trình thực hiện đồ án với mục tiêu xây dựng phương pháp kiểm thử hướng ngữ cảnh trong phát triển phần mềm linh hoạt. Phương pháp giúp việc thực hiện giai đoạn kiểm thử tiết kiệm thời gian và việc phát hiện, thông báo và sửa lỗi diễn ra sớm hơn. Cùng với mục tiêu trên, việc tìm hiểu tổng quan về phát triển phần mềm linh hoạt cũng như tìm hiểu về biểu đồ tư duy Xmind Zen và áp dụng công cụ biểu đồ này để xây dựng phương pháp kiểm thử.
Phương pháp kiểm thử này so với phương pháp kiểm thử Agile đã hạn chế nhiều việc chuẩn bị tài liệu về các chức năng cần test, phạm vi test, ... trước mỗi vòng lặp tại giai đoạn lặp lại xây dựng. Thay vì xác định các chức cần test tại mỗi vòng lặp, ở đây phác thảo phân tích các chức năng cần test ở mỗi vòng lặp tại giai đoạn đầu tiên của dự án. Nhưng bên canh đó, phương pháp kiểm thử này vẫn chưa xây dựng hoàn chỉnh.
Ngoài ra trong đồ án này, việc khảo sát, triển khai, áp dụng phương pháp kiểm thử để xây dựng website là nơi mà người dùng chia sẻ cảm nhận của bản thân về những cuốn sách từng đọc. Từ đó, đưa ra các đánh giá về ưu điểm và nhược điểm của phương pháp này.
6.2 Hướng phát triển
Đối với những nhược điểm của phương pháp kiểm thử em đã nêu ở chương 5, trong tương lai sẽ đặt mục tiêu để hoàn thiện thêm các thiếu sót đó. Và tìm hiểu thêm các công cụ kiểm thử tự động phần mềm.
Xây dựng các kế hoạch kiểm thử ở mỗi vòng lặp có thể tái sử dụng ở các vòng lặp tiếp theo, để việc chuẩn bị kế hoạch kiểm thử ở mỗi vòng lặp sẽ tốn ít thời gian hơn.
Ngoài việc sử dụng công cụ biểu đồ tư duy Xmind Zen có thẻ sử dụng thêm công cụ bảng Kanban để có thể quản lý các công việc ở mỗi vòng lặp tại giai đoạn lặp lại xây dựng.
Đối với sản phẩm website em đã xây dựng để thử nghiệm phương pháp, trong tương lai em sẽ đặt mục tiêu hoàn thiện các tính năng và thêm những tính năng mới như sau:
Ngoài chia sẻ những bài cảm nhận về sách, người dùng có thể ghi lại nhật ký hoặc viết sách.•Tạo thêm trang admin để quản lý người dùng, quản lý các bài viết và quản lý các bình luận vào bài viết.
Xây dựng giao diện mới dễ sử dụng, hiện đại hơn, thân thiện hơn so với giao diện của website này.
Chương 6 là chương cuối cùng cũng là chương kết thúc nội dung chính của toàn bộ quyển đồ án của em. Em đã trình bày kết luận về đô án này, đưa ra những vệc mình đã làm được cũng như đưa ra các điểm thiếu sót và hướng phát triển trong tương lai. D. Cohen, M. Lindvall, and P. Costa, “Agile software development,” DACS SOAR Report , vol. 11, p. 2003, 2003.
Lovy Chaudhary, Agile characteristics . [On]. Available: https : / / www.educba.com/agile-characteristics/ (visited on 07/06/2022).
kanbanize, What are the 12 principles of agile project management? [On]. Available: https : / / kanbanize . com / agile / project  management/principles (visited on 07/11/2022).
atlassian, The atlassian coach . [On]. Available:  com/agile (visited on 07/11/2022).
Mike Cohn, Differences between scrum and extreme programming . [On].
Available:  differences-between-scrum-and-extreme-programming (visited on 07/06/2022).
Nhung Nguyen, Vai trò của kiểm thử phần mềm . [On]. Available: https:
//xlink.vn/xvjjyacn (visited on 07/06/2022).
Nico Kr ¨uger, Agile testing methodology — 5 examples for the agile tester .
[Online]. Available:  (visited on 07/06/2022).
James Bach, Context driven testing . [On]. Available:  driven-testing.com/ (visited on 07/11/2022).
Thomas Hamilton, What is agile testing? methodology, process life cycle .
[Online]. Available:  a-beginner-s-guide.html (visited on 07/10/2022).
Xmind, Xmind . [Online]. Available:  en/xmind (visited on 07/06/2022).
Ryan Lienhart Dahl, Nodejs . [Online]. Available:  org/en/ (visited on 07/06/2022).
MongoDB Inc., Mongdb . [Online]. Available:  com/ (visited on 07/06/2022).
TJ Holowaychuk, StrongLoop and others, Expressjs . [On]. Available:
(visited on 07/06/2022).