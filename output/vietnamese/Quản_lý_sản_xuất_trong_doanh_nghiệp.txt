1.1 Đặt vấn đề
Việc ứng dụng công nghệ thông tin thay cho các hoạt động quản lý truyền thống đang được thực hiện tại rất nhiều các doanh nghiệp. Theo báo cáo "Chỉ số phát triển kỹ thuật số của doanh nghiệp vừa và nhỏ khu vực châu Á - Thái Bình Dương" 1của Cisco thực hiện trên 1340 doanh nghiệp trong khu vực nói chung và 50 doanh nghiệp Việt Nam nói riêng, các doanh nghiệp Việt Nam đang đầu tư vào các lĩnh vực công nghệ thông tin như công nghệ đám mây (18%), an ninh mạng (12,7%), nâng cấp phần mềm, phần cứng để chuyển đổi số (10,7%).
Ứng dụng công nghệ thông tin đem lại nhiều lợi ích cho doanh nghiệp. Thứ nhất, nó công nghệ giúp các doanh nghiệp tăng năng suất lao động. Theo nghiên cứu “Giải mã những ảnh hưởng kinh tế của Chuyển Đổi Số tại khu vực Châu Á Thái Bình Dương”2do Microsoft và IDC Châu Á/Thái Bình Dương thực hiện, trong năm 2017 các doanh nghiệp được khảo sát tăng năng suất lao động 15% trong khi chi phí giảm 13% và sẽ còn gia tăng hiệu quả nhờ ứng dụng công nghệ thông tin.
Ngoài ra việc ứng dụng công nghệ thông tin còn có khả năng lưu trữ thông tin lâu dài, dễ dàng tìm kiếm thông tin trong quá khứ, gia tăng tính bảo mật vốn là vấn đề nan giải với các doanh nghiệp sử dụng các phương pháp quản lý truyền thống.
Việc ứng dụng CNTT còn đặc biệt cấp thiết với các doanh nghiệp sản xuất. Các doanh nghiệp này chịu tác động lớn do dịch bệnh Covid-19. Nhiều cơ hội bán hàng bị bỏ lỡ, thiệt hại uy tín đến từ việc không đáp ứng được nhu cầu dịch vụ, ... Những khó khăn này buộc các doanh nghiệp sản xuất phải có các biện pháp thay đổi trong việc quản lý doanh nghiệp. Trong đó ứng dụng CNTT chuyển đổi số doanh nghiệp là giải pháp vững bền và hiệu quả.
Doanh nghiệp sản xuất luôn quan tâm đến bài toán tối ưu lượng hàng hoá cần sản xuất nhằm duy trì chuỗi cung ứng không bị gián đoạn, đáp ứng nhu cầu đa dạng của khách hàng. Phần mềm Quản lý sản xuất giúp doanh nghiệp giải quyết bài toán tối ưu lượng hàng hoá cần sản xuất nhờ các chức năng (i) Tạo và quản lý kế hoạch sản xuất theo quy trình khép kín từ đặt hàng đến sản xuất, lưu kho, giao hàng, (ii) Dự báo nhu cầu tiêu thụ sản phẩm của khách hàng, (iii) Gợi ý số lượng sản phẩm cần sản xuất, (iv) Liên kết với các bộ phận bán hàng và bộ phận kho.
11.2 Mục tiêu và phạm vi đề tài
Hiện nay trên thị trường có rất nhiều phần mềm hỗ trợ quản lý sản xuất như:
SmartBiz3, FOSO.ERP4, FaceWorks5, . . . Những phần mềm này hướng tới xây dựng và quản lý kế hoạch sản xuất theo 2 chiến lược cơ bản : Sản xuất để tồn kho (MTS - Make to stock) và Sản xuất theo đơn đặt hàng (MTO - Make to order).
MTS là phương thức sản xuất truyền thống được doanh nghiệp sử dụng để sản xuất hàng tồn kho phù hợp với dự báo về cầu sản phẩm của người tiêu dùng. Một công ty sử dụng MTS sẽ ước tính sản phẩm của họ có thể thu hút được bao nhiêu đơn đặt hàng, và sau đó cung cấp đủ hàng tồn kho để đáp ứng số đơn đặt hàng đó.
MTO là phương thức sản xuất cho phép người tiêu dùng mua những sản phẩm được tùy chỉnh theo thông số kỹ thuật mà họ mong muốn. Trong quy trình sản xuất này, việc sản xuất một mặt hàng chỉ bắt đầu được tiến hành sau khi nhận được đơn đặt hàng của khách hàng.
Các phần mềm hiện nay hỗ trợ cả MTS và MTO, nhưng còn nhiều hạn chế.
Công việc lập kế hoạch sản xuất xử lý tách riêng giữa hai phương pháp MTS và MTO mà không có sự kết hợp giữa hai phương pháp, dẫn đến kế hoạch sản xuất chưa được tối ưu và linh hoạt. Các phần mềm cũng chưa hỗ trợ gợi ý số lượng sản phẩm cần sản xuất nên doanh nghiệp phải dựa hoàn toàn vào kinh nghiệm bản thần để lên kế hoạch sản xuất sản phẩm để lưu kho. Ngoài ra việc liên thông với các bộ phận bán hàng và bộ phận kho cũng chưa được các phần mềm chú trọng nhiều.
1.3 Định hướng giải pháp
ĐATN đã khảo sát các phần mềm quản lý sản xuất trên thị trường. Để xây dựng kế hoạch sản xuất linh hoạt ĐATN xây dựng quy trình tạo kế hoạch sản xuất kết hợp giữa hai phương pháp MTS và MTO.
Để giải quyết vấn đề tối ưu lượng hàng hoá sản xuất để tồn kho. ĐATN sử dụng mô hình Holt-Winter để dự báo nhu cầu tiêu thụ hàng hoá của từng sản phẩm trong tương lai. Dựa vào dự báo nhu cầu tiêu thụ hàng hoá, số lượng hàng hoá đang sản xuất, và số lượng hàng hoá tồn kho, phần mềm phát triển trong ĐATN sẽ tính toán và đưa ra gợi ý số lượng sản phẩm cần sản xuất cho người sử dụng.
ĐATN thực hiện liên thông với hai bộ phận quản lý đơn hàng, quản lý kho để tạo thành quy trình sản xuất khép kín từ quá trình đặt hàng, sản xuất, và nhập kho thành phẩm. Việc cung cấp các thông tin cần thiết giữa các bộ phận giúp quá trình sản xuất giảm thiểu các rủi ro như thiếu nguyên vật liệu hay sản xuất dư thừa. Ngoài 3 4 5 2ra ĐATN còn xây dựng thêm hai chức năng chung giữa các bộ phận (i) Quản lý đơn mua nguyên vật liệu, (ii) Tạo phiếu nhập kho thành phẩm.
Phần mềm được xây dựng theo mô hình client-server giao tiếp với nhau thông qua Restful API. Client sử dụng công nghệ ReactJS và Redux giúp xây dựng Single Page Application nhằm gia tăng tốc độ tải trang web, gia tăng trải nghiệm người dùng. Server sử dụng công nghệ NodeJS kết hợp ExpressJS có khả năng xử lý dữ liệu mạnh mẽ do xử lý bất đồng bộ. Cơ sở dữ liệu sử dụng là MongoDB đem lại hiệu suất và khả năng mở rộng cao.
ĐATN được tích hợp vào modue Quản lý sản xuất của hệ thống DXClan6- Giải pháp không gian làm việc số cho doanh nghiệp của Công ty Cổ phần Công nghệ An toàn thông tin và truyền thông Việt Nam (VNIST). Đóng góp chính của đồ án là (i) Xây dựng quy trình sản xuất tối ưu cho phương thức sản xuất theo đơn đặt hàng, (ii) Dự báo nhu cầu tiêu thụ sản phẩm, gợi ý số lượng sản phẩm cần sản xuất cho phương thức sản xuất để tồn kho, (iii) Liên thông bộ phận sản xuất với bộ phận bán hàng và bộ phận kho.
1.4 Bố cục đồ án
Phần còn lại của báo cáo đồ án tốt nghiệp này được tổ chức như sau.
Chương 2: Khảo sát nhu cầu chuyển đổi số của các doanh nghiệp và khảo sát các phần mềm hỗ trợ quản lý sản xuất trên thị trường. Từ đó đưa ra hạn chế của các phần mềm và cải thiện trong ĐATN.
Chương 3: Giới thiệu về các công nghệ sử dụng để xây dựng phần mềm quản lý sản xuất, đồng thời đưa ra các ưu điểm khi sử dụng các công nghệ này.
Chương 4: Trình bày về cách thức phát triển và triển khai phần mềm. Phần mềm được phát triển theo quy trình tuần tự: (i) Thiết kế kiến trúc, (ii) Thiết kế chi tiết, (iii) Xây dựng ứng dụng, (iv) Kiểm thử, (v) Triển khai.
Chương 5: Trình bày các giải pháp và đóng góp nổi bật trong ĐATN. Các giải pháp này giúp giải quyết các vấn đề tồn tại trên các phần mềm quản lý sản xuất đã khảo sát. Từ đó thể hiện được lợi ích của các giải pháp khi sử dụng phần mềm trong thực tế.
Chương 6: Tổng hợp kết quả đã đạt được và những điểm còn thiếu sót cũng như hướng phát triển ĐATN trong tương lai.
32.1 Khảo sát hiện trạng
Trên thị trường hiện nay có rất nhiều phần mềm hỗ trợ doanh nghiệp trong quản lý sản xuất. ĐATN tập trung khảo sát và phân tích ưu nhược điểm của hai phần mềm ERP Odoo SmartBiz1của Công Ty TNHH Giải Pháp Và Dịch Vụ Cao Cấp và Faceworks2của Công ty Cổ phần Dịch vụ và Công nghệ TIT.
Cả hai phần mềm đều hỗ trợ tạo kế hoạch sản xuất theo phương pháp MTS và MTO nhưng chưa có sự kết hợp giữa hai phương pháp này dẫn đến việc tạo kế hoạch sản xuất chưa được linh hoạt. Chức năng hỗ trợ gợi ý số lượng hàng hoá cần sản xuất đều chưa được phát triển khiến người dùng phải dựa hoàn toàn vào kinh nghiệm bản thân khi lập kế hoạch sản xuất đế lưu kho. Ngoài ra các chức năng liên thông với bộ phận bán hàng và bộ phận kho cũng chưa được chú ý. Bảng 2.1 so sánh chi tiết chức năng của ERP Odoo SmartBiz và Faceworks với sản phầm ĐATN dự kiến.
42.2 Tổng quan chức năng
2.2.1 Biểu đồ use case tổng quát Hình 2.1: Biểu đồ use case tổng quát phần mềm Quản lý sản xuất Hình 2.1 là biểu đồ use case tổng quát phần mềm Quản lý sản xuất, các tác nhân tham gia bao gồm:
(i) Nhân viên bộ phận sản xuất: có thể quản lý kế hoạch sản xuất, lệnh sản xuất, lô hàng sản xuất, phiếu đề nghị mua nguyên vật liệu, lịch sản xuất, đơn hàng sản xuất và có thể xem bảng tin gợi ý sản xuất để tồn kho.
(ii) Giám đốc sản xuất: có tất cả các chức năng của nhân viên bộ phận sản xuất và 5có thế quản lý xưởng sản xuất, nhà máy sản xuất.
2.2.2 Biểu đồ use case phân rã Quản lý kế hoạch sản xuất Hình 2.2: Biểu đồ use case phân rã Quản lý kế hoạch sản xuất Hình 2.2 là biểu đồ use case phân rã Quản lý kế hoạch sản xuất. Nhân viên bộ phận sản xuất có thể xem danh sách kế hoạch sản xuất, xem chi tiết kế hoạch sản xuất, tạo kế hoạch sản xuất, sửa kế hoạch sản xuất, huỷ kế hoạch sản xuất. Trưởng phòng sản xuất có thêm chức năng phê duyệt kế hoạch sản xuất.
62.2.3 Biểu đồ use case phân rã Quản lý đơn hàng sản xuất Hình 2.3: Biểu đồ use case phân rã Quản lý đơn hàng sản xuất Hình 2.3 là biểu đồ use case phân rã Quản lý đơn hàng sản xuất. Nhân viên bộ phận sản xuất có thể xem danh sách đơn hàng sản xuất, xem chi tiết đơn hàng sản xuất, tạo kế hoạch sản xuất cho đơn hàn. Trưởng phòng sản xuất có thêm chức năng phê duyệt kế hoạch sản xuất cho đơn hàng.
72.2.4 Biểu đồ use case phân rã Quản lý lô hàng sản xuất Hình 2.4: Biểu đồ use case phân rã Quản lý lô hàng sản xuất Hình 2.4 là biểu đồ use case phân rã Quản lý lô hàng sản xuất. Nhân viên bộ phận sản xuất có thể xem danh sách lô hàng sản xuất, xem chi tiết lô hàng sản xuất, chỉnh sửa và tạo phiếu nhập kho cho lô hàng sản xuất.
82.2.5 Biểu đồ use case phân rã Quản lý đề nghị mua nguyên vật liệu Hình 2.5: Biểu đồ use case phân rã Quản lý đề nghị mua nguyên vật liệu Hình 2.5 là biểu đồ use case phân rã Quản lý đề nghị mua nguyên vật liệu. Nhân viên bộ phận sản xuất có thể xem danh sách đơn đề nghị mua nguyên vật liệu, xem chi tiết đơn đề nghị mua nguyên vật liệu, thêm, sửa, xoá đơn đề nghị mua nguyên vật liệu.
2.3 Đặc tả chức năng
1.1 Tác nhân Chọn chức năng quản lý kế hoạch
1.2 Hệ thống Hiển thị danh sách kế hoạch sản
2.1 Tác nhân Chọn nút tạo kế hoạch sản xuất
2.2 Hệ thống Hiển thị form tạo kế hoạch sản
2.3 Tác nhân Điền thông tin kế hoạch sản xuất
2.4 Hệ thống Kiểm tra tính hợp lệ của các
2.5 Tác nhân Chọn nút lưu kế hoạch
2.6 Hệ thống Tạo kế hoạch sản xuất mới
2.7 Hệ thống Thông báo tạo kế hoạch sản xuất
3.1 Tác nhân Chọn nút phê duyệt kế hoạch sản
3.2 Hệ thống Hiển thị cảnh báo xác nhận phê
3.3 Tác nhân Chọn nút xác nhận
3.4 Hệ thống Thông báo phê duyệt kế hoạch
4.1 Tác nhân Chọn nút xem chi tiết kế hoạch
4.2 Hệ thống Hiển thị form chi tiết kế hoạch
5.1 Tác nhân Chọn nút huỷ kế hoạch sản xuất
5.2 Hệ thống Hiển thị cảnh báo xác nhận huỷ
5.3 Tác nhân Chọn nút xác nhận
5.4 Hệ thống Thông báo hủy kế hoạch sản xuất
1.1 Tác nhân Chọn chức năng quản lý đơn
1.2 Hệ thống Hiển thị danh sách đơn hàng sản
2.1 Tác nhân Chọn nút tạo kế hoạch sản xuất
2.2 Hệ thống Hiển thị form tạo kế hoạch sản
2.3 Tác nhân Điền thông tin kế hoạch sản xuất
2.4 Hệ thống Kiểm tra tính hợp lệ của các
2.5 Tác nhân Chọn nút lưu kế hoạch
2.6 Hệ thống Tạo kế hoạch sản xuất mới
2.7 Hệ thống Thông báo tạo kế hoạch sản xuất
3.1 Tác nhân Chọn nút xem chi tiết đơn hàng
3.2 Hệ thống Hiển thị form chi tiết đơn hàng
4.1 Tác nhân Chọn nút xem chi tiết kế hoạch
4.2 Hệ thống Hiển thị form chi tiết kế hoạch
1.1 Tác nhân Chọn chức năng quản lý lô sản
1.2 Hệ thống Hiển thị danh sách lô sản xuất
2.1 Tác nhân Chọn nút xem chi tiết lô sản xuất
2.2 Hệ thống Hiển thị form chi tiết lô sản xuất
3.1 Tác nhân Chọn nút chỉnh sửa lô sản xuất
3.2 Hệ thống Hiển thị form chỉnh sửa lô sản
3.3 Tác nhân Điền thông tin chỉnh sửa
3.4 Hệ thống Kiểm tra tính hợp lệ của các
3.5 Tác nhân Chọn nút lưu chỉnh sửa lô sản
3.6 Hệ thống Thông báo chỉnh sửa lô sản xuất
4.1 Tác nhân Chọn nút nhập kho lô sản xuất
4.2 Hệ thống Hiển thị form tạo phiếu nhập kho
4.3 Tác nhân Điền thông tin phiếu nhập kho
4.4 Hệ thống Kiểm tra tính hợp lệ của các
4.5 Tác nhân Chọn nút lưu phiếu nhập kho
4.6 Hệ thống Thông báo tạo phiếu nhập kho
1.1 Tác nhân Chọn chức năng quản lý phiếu đề
1.2 Hệ thống Hiển thị danh sách phiếu đề nghị
2.1 Tác nhân Chọn nút xem chi tiết phiếu đề
2.2 Hệ thống Hiển thị form chi tiết phiếu đề
3.1 Tác nhân Chọn nút tạo phiếu đề nghị mua
3.2 Hệ thống Hiển thị form tạo phiếu đề nghị
3.3 Tác nhân Điền thông tin tạo phiếu đề nghị
3.4 Hệ thống Kiểm tra tính hợp lệ của các
3.5 Tác nhân Chọn nút lưu phiếu đề nghị
3.6 Hệ thống Thông báo tạo phiếu đề nghị
4.1 Tác nhân Chọn nút chỉnh sửa phiếu đề nghị
4.2 Hệ thống Hiển thị form chỉnh sửa phiếu đề
4.3 Tác nhân Điền thông tin chỉnh sửa phiếu
4.4 Hệ thống Kiểm tra tính hợp lệ của các
4.5 Tác nhân Chọn nút lưu phiếu đề nghị
4.6 Hệ thống Thông báo chỉnh sửa phiếu đề
5.1 Tác nhân Chọn nút huỷ phiếu đề nghị mua
5.2 Hệ thống Hiển thị cảnh báo xác nhận huỷ
5.3 Tác nhân Chọn nút xác nhận
5.4 Hệ thống Thông báo huỷ phiếu đề nghị
2.4 Yêu cầu phi chức năng
2.4.1 Yêu cầu chung Phần mềm cần hiển thị đầy đủ thông tin cần thiết với người sử dụng trong khi vẫn cần đảm bảo tốc độ tải trang cao. Cần có phân quyền cho người sử dụng đề đảm bảo chỉ được truy cập các tài nguyên cho phép. Mã nguồn cần xây dựng để có tính tái sử dụng và khả năng mở rộng cao.
2.4.2 Yêu cầu về giao diện Giao diện thân thiện với người dùng nhờ sử dụng nhiều icon thông dụng và màu sắc đơn có tính đồng bộ cao. Hiển thị tốt trên nhiều thiết bị với độ phân giải khác nhau. Ngoài ra còn hỗ trợ đa ngôn ngữ để phục vụ nhu cầu đa dạng của người dùng.
143.1 Công nghệ xây dựng Frontend
3.1.1 ReactJS ReactJS hay React là một thư viện Javascript mã nguồn mở được phát triển bới Facebook nhằm hỗ trợ các lập trình viên tạo giao diện người dùng. ReactJS hướng tới việc xây dựng giao diện từ các thành phần thành phần riêng lẻ. Việc tập trung xây dựng các thành phần này giúp lập trình viên dễ dàng xây dựng một giao diện phức tạp từ những thành phần nhỏ, đồng thời tăng tính tái sử dụng cho mã nguồn.
ReactJS xây dựng trang web theo Single page application, sản phẩm chỉ sử dụng một trang duy nhất được cấu tạo từ nhiều thành phần. Khi sử dụng các chức năng khác nhau chỉ có thành phần trong trang thay đổi còn trang web không cần tải lại.
Kiến trúc này giúp tốc độ duyệt web nhanh hơn, trải nghiệm mượt mà hơn.
ReactJS cho phép lập trình viên sử dụng cú pháp JSX để xây dựng giao diện sản phẩm. JSX là một cú pháp mở rộng kết hợp của XML và JavaScript. JSX giúp lập trình viên xây dựng các thành phần giao diện ngay trong các tệp JavaScript. Điều này khiến việc lập trình trở nên nhanh chóng và trực quan.
Ngoài ra ReactJS còn kết hợp được với rất nhiều các thư viện hiện đại khác giúp việc xây dựng giao diện trở nên linh hoạt, đơn giản.
3.1.2 Redux Redux là một thư viện JavaScript mã nguồn mở giúp quản lý các state cục bộ cho các ứng dụng JavaScript. Redux ra đời lấy cảm hứng từ tư tưởng của ngôn ngữ Elm và kiến trúc Flux của Facebook nên các ứng dụng xây dựng bởi ReactJS coi Redux như một lựa chọn hàng đầu để quản lý các state cục bộ.
Các thành phần trong một ứng dụng được xây dựng bởi ReactJS chỉ có thể trao đổi dữ liệu tuần tự từ thành phần cha xuống thành phần con. Khi ứng dụng được mở rộng, số lượng thành phần ngày càng nhiều, việc trao đổi dữ liệu giữa các thành phần tuần tự như vậy sẽ rất phức tạp. Redux giúp giải quyết vấn đề này bằng cách lưu trữ toàn bộ dữ liệu cục bộ vào một kho lưu trữ gọi là store. Các thành phần trong ứng dụng sẽ tương tác với dữ liệu thông qua store. Hình 3.1 so sánh quá trình trao đổi dữ liệu giữa các thành phần trong ứng dụng khi sử dụng và không sử dụng Redux.
3.2 Công nghệ xây dựng Backend
3.2.1 Node.js Node.js hay Nodejs là một môi trường runtime chạy JavaScript đa nền tảng và có mã nguồn mở, được sử dụng để chạy các ứng dụng web bên ngoài trình duyệt của client.
Node.js được xây dựng dựa vào nền tảng V8 JavaScript Engine - một trình thông dịch thực thi mã JavaScript viết bởi C++ nên việc thực thi chương trình rất nhanh.
Node.js có khả năng xử lý hàng nghìn yêu cầu đồng thời nhờ cơ chế xử lý quy trình bất đồng bộ. Các yêu cầu tiếp theo được xử lý cùng với yêu cầu đầu tiên.
Không có quy trình nào chặn một quy trình khác.
Ngoài ra, Node.js còn có một kho thư viện khổng lồ được quản lý bới một công cụ tạo và quản lý các thư viện đi cùng Node.js là NPM (Node package manager).
NPM quản lý chia sẻ hàng trăm nghìn các thư viện được chia sẻ bởi cộng đồng lập trình viên JavaScript. Nó giúp cho các dự án mới tránh phải viết lại các thành phần cơ bản, các thư viện lập trình hay thậm chí cả các framework.
3.2.2 Expressjs Expressjs hay Express là một framework mã nguồn mở miễn phí cho Node.js.
Express giúp xây dựng một máy chủ web hoạt động trên Node.js một cách đơn giản và nhanh chóng. Expressjs cung cấp các phương thức giúp lập trình viên xây dựng các API dễ dàng động thời có tính mở rộng cao, dễ bảo trì.Ngoài ra, Expressjs còn rất nhỏ gọn không làm phình to dung lượng của mã nguồn sản phẩm.
163.2.3 Hệ quản trị cơ sở dữ liệu MongoDB MongoDB là một cơ sở dữ liệu mã nguồn mở và là cơ sở dữ liệu NoSQL được viết bằng C++. Do là cơ sở dữ liệu NoSQL nên MongoDB sử dụng nhiều mô hình dữ liệu để truy cập và quản lý dữ liệu. MongoDB được tối ưu hóa dành riêng cho các ứng dụng yêu cầu mô hình dữ liệu linh hoạt có lượng dữ liệu lớn và độ trễ thấp, có thể đạt được bằng cách giảm bớt một số hạn chế về tính nhất quán của dữ liệu của các cơ sở dữ liệu khác.
MongoDB chia các nhóm các dữ liệu thuộc cùng loại thành các collection. Sự khác nhau giữa collection với table trong các loại cơ sở dữ liệu quan hệ đó là collection không có ràng buộc, quan hệ với collection khác. Mỗi dữ liệu trong collection không cố định về số trường như row trong table. Do đó MongoDB có tính sẵn sàng cao, hiệu suất lớn và dễ dàng mở rộng lưu trữ.
Phẩn mềm quản lý sản xuất sử dụng Hệ quản trị cơ sở dữ liệu MongoDB do các ưu điểm phù hợp như tốc độ truy vấn cao, các kiểu dữ liệu đa dạng cũng như dễ dàng mở rộng cơ sở dữ liệu.
3.2.4 Tích hợp các công nghệ ĐATN sử dụng kết hợp các công nghệ ReactJS xây dựng Frontend, Node.js, Expressjs xây dựng Backend và MongoDB là hệ quản trị cơ sở dữ liệu. Tập hợp các công nghệ xây dựng ứng dụng web này được gọi là MERN stack. Hình 3.2 mô tả cấu trúc của một ứng dụng web được xây dựng bởi MERN stack.
Hình 3.2: Cấu trúc của một ứng dụng web được xây dựng bởi MERN stack Ưu điểm của việc sử dụng MERN stack để phát triển một ứng dụng web hoàn chỉnh là việc phát triển phân chia tách biệt frontend và backend. Việc phát triển tách biệt hai phần này giúp việc viết mã nguồn tường minh, đơn giản hơn. Ngoài ra lập trình viên chỉ cần dùng duy nhất một ngôn ngữ lập trình là JavaScript để xây 17dựng ứng dụng, giúp việc học tập cách sử dụng công nghệ cũng như phát triển, bảo trì và mở rộng ứng dụng đơn giản hơn.
184.1 Thiết kế kiến trúc
4.1.1 Lựa chọn kiến trúc phần mềm Phần mềm được xây dựng theo mô hình web client-server. Client cung cấp giao diện của phần mềm cho người dùng. Server cung cấp và điều khiển các tiến trình truy cập vào tài nguyên của hệ thống. Client giao tiếp với server bằng giao thức truyền thông HTTP. Khi cần truy cập tài nguyên hệ thống client sẽ gửi yêu cầu đến server thông qua các Restful API mà server cung cấp, server sẽ xử lý các yêu cầu và trả về dữ liệu dạng json cho client. Hình 4.1 mô tả quá trình giao tiếp giữa client và server.
Hình 4.1: Mô hình web client-server 4.1.2 Thiết kế tổng quan Hình 4.2 mô tả thiết kế tổng quan client của phần mềm thông qua biểu đồ phụ thuộc gói.
Hình 4.2: Biểu đồ gói tổng quan phần client của phần mềm Quản lý sản xuất 19Thư mục node_modules chứa các thư viện JavaScript cần dùng trong phần mềm.
Thư mục public chứa file HTML cơ sở và các hình ảnh. Thư mục src chứa cácchức năng chính của ứng dụng. Trong thư mục src có các thư mục (i) common components - chứa các giao diện sử dụng thường xuyên nhằm mục đích tái sửdụng, (ii) helpers - chứa các hàm xử lý dữ liệu sử dụng thường xuyên, (iii) lang  chứa file ngôn ngữ nhằm mục đích chuyển đổi ngôn ngữ hiển thị trên giao diện, (iv) layouts - chứa các file định hình bố cục của trang web, (v) react-routes - chứa các file định tuyến trang web, (vii) redux - kho lưu trữ các state dùng trong toàn phần mềm, (vii) modules - chứa các chức năng chính của phần mềm. Trong modules có các thư mục (i) manufacturing - chứa giao diện quản lý sản xuất, (ii) order - chứa giao diện quản lý các đơn hàng.
Hình 4.3 mô tả thiết kế tổng quan server của phần mềm thông qua biểu đồ phụ thuộc gói.
Hình 4.3: Biểu đồ gói tổng quan phần server của phần mềm Quản lý sản xuất Phần server bao gồm các thư mục (i) helpers - chứa các hàm xử lý dữ liệu sử dụng thường xuyên, (ii) logs - chứa thông tin về các request đã nhận từ client, (iii) middleware - chứa các phương thức trung gian nhằm xác thực các request gửi đến server, (iv) node-modules - chứa các thư viện JavaScript cần dùng trong phần mềm, (v) seed - chứa dữ liệu khởi tạo của phần mềm, (vi) models - chứa cấu trúc dữ liệu của các thành phần trong phần mềm, (vii) modules - chứa các chức năng chính của phần mềm. Trong modules có (i) manufacturing - chức năng quản lý sản xuất, (ii) order - chức năng quản lý kho.
4.1.3 Thiết kế chi tiết gói Hình 4.4 là biểu đồ thiết kế gói chi tiết cho chức năng Quản lý kế hoạch sản xuất phía client. Gói manufacturing-plan gồm 2 gói (i) components và (ii) redux. Gói components chứa các giao diện (i) PlanManagementTable - danh sách các kế hoạch 20sản xuất, (ii) PlanCreateForm - giao diện tạo kế hoạch, (iii) PlanDetailForm - giao diện xem chi tiết kế hoạch, (iv) PlanEditForm - giao diện chỉnh sửa kế hoạch. Gói redux quản lý các state cục bộ dùng trong chức năng quản lý kế hoạch sản xuất.
Hình 4.4: Biểu đồ gói chi tiết chức năng Quản lý kế hoạch sản xuất phía client Hình 4.5: Biểu đồ gói chi tiết chức năng Quản lý kế hoạch sản xuất phía server Hình 4.5 là biểu đồ thiết kế gói chi tiết cho chức năng Quản lý kế hoạch sản xuất phía server. Gói manufacturing-plan gồm (i) manufacturingPlanRoute - định tuyến các API CRUD kế hoạch sản xuất, (ii) manufacturingPlanController - xử lýcác request từ client và quy định cấu trúc của dữ liệu trả về client, (iii) manufactur ingPlanService - xử lý các nghiệp vụ logic, tương tác với model. Gói models gồm manufacturingModel - định nghĩa cấu trúc dữ liệu của đối tượng kế hoạch sản xuất.
214.2 Thiết kế chi tiết
4.2.1 Thiết kế giao diện Phần mềm được thiết kế để hiển thị tối ưu giao diện trên màn hình của laptop và máy tính để bàn. Bên cạnh đó giao diện cũng đáp ứng hiển thị đầy đủ thông tin trên các màn hình nhỏ hơn như tablet hay điện thoại di động.
Màu sắc sử dụng được chuẩn hoá để thể hiện rõ ràng chức năng của từng phần.
Màu xanh lá cây được dùng cho các chức năng thêm mới, màu vàng dùng cho các chức năng chỉnh sửa và màu đỏ dùng cho các chức năng xoá, báo lỗi. Giao diện có sự tương tác với người dùng. Các biểu tượng thông dụng giúp người dùng dễ dàng nhận biết các chức năng. Khi người dùng thực hiện xong các công việc sẽ có thông báo phản hồi.
Hình 4.6: Giao diện chung của tất cả màn hình Giao diện chung của tất cả các màn hình sẽ bao gồm 4 phần (i) header - tiêu đề trang, (ii) footer - thông tin cuối trang, (iii) sidebar - danh sách các trang chức năng, (iv) content - phần nội dung riêng của mỗi trang. Hình 4.6 mô tả thiết kế chung của tất cả các màn hình. Hình 4.7 mô tả thiết kế giao diện của màn hình quản lý kế hoạch sản xuất.
22Hình 4.7: Giao diện quản lý kế hoạch sản xuất 4.2.2 Thiết kế lớp Dưới đây ĐATN xin trình bày thiết kế chi tiết các thuộc tính và phương thức cho hai lớp chủ đạo là (i) manufacturingPlanCreateForm - tạo kế hoạch sản xuất và (ii) goodReceiptCreateForm - tạo phiếu nhập kho theo lô sản xuất. Hình 4.8 và 4.9 lần lượt là thiết kế chi tiết lớp cho 2 lớp manufacturingPlanCreateForm, goodReceiptCreateForm.
Hình 4.8: Thiết kế chi tiết lớp manufacturingPlanCreateForm 23Bảng 4.1 dưới đây là bảng đặc tả chi tiết thuộc tính và phương thức của lớp manufacturingPlanCreateForm.
Bảng 4.1: Đặc tả chi tiết thuộc tính và phương thức của lớp manufacturingPlanCreateForm Tên lớp: manufactuingPlanCreateForm Danh sách thuộc tính Tên thuộc tính Kiểu dữ liệu Ý nghĩa code String Mã kế hoạch sản xuất startDate Date Thời gian bắt đầu sản xuất dự kiến endDate Date Thời gian kết thúc sản xuất dự kiến description String Mô tả kế hoạch sản xuất saleOrder String Mã đơn kinh doanh khi tạo kế hoạch sản xuất theo đơn hàng goods Array Danh sách sản phẩm cần sản xuất approver String Id của người phê duyệt kế hoạch sản xuất manufactringCommands Array Danh sách các lệnh sản xuất trong kế hoạch step int Bước tạo kế hoạch hiện tại ( có ba bước thêm sản phẩm, tạo lệnh sản xuất, phân chia công việc ) Danh sách phương thức Tên phương thức Đầu vào Đầu ra Ý nghĩa useEffect void void React hook để kiểmsoát re-render compo nent mỗi khi có state thay đổi 24handleStartDateChange Date void Thay đổi thời gian bắt đầu sản xuất dự kiến handleEndDateChange Date void Thay đổi thời gian kết thúc sản xuất dự kiến handleDescriptionChange String void Thay đổi mô tả kế hoạch sản xuất handleAddGood Object void Thêm sản phẩm mới vào danh sách sản phẩm cần sản xuất handleEditGood Object void Chỉnh sửa sản phẩm trong danh sách sản phẩm cần sản xuất handleDeleteGood int void Xoá sản phẩm trong danh sách sản phẩm cần sản xuất handleManufacturingCommandChange void void Thay đổi danh sách lệnh sản xuất setCurrentStep int void Thay đổi bước tạo kế hoạch hiện tại isStepValid void void Kiểm tra bước tạo kế hoạch hiện tại đã hoàn thành chưa isFormValid void void Kiểm tra form tạo kế hoạch sản xuất đã hoàn thành chưa save void void Gửi yêu cầu tạo kế hoạch sản xuất mới đến server 25Hình 4.9: Thiết kế chi tiết lớp goodReceiptCreateForm Bảng 4.3 dưới đây là bảng đặc tả chi tiết thuộc tính và phương thức của lớp goodReceiptCreateForm.
Bảng 4.3: Đặc tả chi tiết thuộc tính và phương thức của lớp goodReceiptCreateForm Tên lớp: goodReceiptCreateForm Danh sách thuộc tính Tên thuộc tính Kiểu dữ liệu Ý nghĩa code String Mã phiếu nhập kho stock String Id kho nhập sản phẩm approvers Array Danh sách người phê duyệt phiếu accountables Array Danh sách người giám sát nhập kho 26responsibles Array Danh sách người thực hiện nhập kho description String Mô tả của phiếu goods Arrays Danh sách sản phẩm trong phiếu nhập kho status int Trạng thái phiếu receiver Object Thông tin người giao hàng manufacturingLot String Id của lô hàng cần nhập kho Danh sách phương thức Tên phương thức Đầu vào Đầu ra Ý nghĩa useEffect void void React hook để kiểmsoát re-render compo nent mỗi khi có state thay đổi handleStockChange String void Thay đổi kho nhập sản phẩm handleApproverChange Array void Thay đổi danh sách người phê duyệt handleAccountableChange Array void Thay đổi danh sách người giám sát handleResponsibleChange Array void Thay đổi danh sách người thực hiện handleDescriptionChange String void Thay đổi mô tả phiếu handleGoodChange Array void Thay đổi danh sách sản phẩm nhập kho handleReceiverChange Object void Thay đổi thông tin người giao hàng isFormValid void void Kiểm tra form tạo đơn nhập kho đã hoàn thành chưa save void void Gửi yêu cầu tạo đơn nhập kho mới đến server 274.2.3 Thiết kế cơ sở dữ liệu a, Thực thể liên kết Hình 4.10: Sơ đồ thực thể liên kết của phần mềm Quản lý kế hoạch sản xuất Hình 4.10 là sơ đồ thực thể liên kết của phần mềm Quản lý kế hoạch sản xuất. Màu sắc của các thực thể trên sơ đồ có ý nghĩa như sau (i) màu cam biểu diễn các thực thể mà phần mềm xây dựng cùng module khác, (ii) màu xanh lục biểu diễn các thực thể mà mềm xây dựng, và (iii) màu xanh da trời biểu diễn các thực thể của module khác mà phần mềm liên kết đến.
Ý nghĩa của từng thực thể được mô tả trong Bảng 4.5.
4.3 Xây dựng ứng dụng
4.3.1 Thư viện và công cụ sử dụng Bảng 4.6 liệt kê danh sách thư viện và công cụ sử dụng trong quá trình xây dựng phần mềm Quản lý sản xuất Mục đích Công cụ Địa chỉ URL IDE lập trình Visual Studio Code  Thư viện xây dựng UI phía client ReactJS  Quản lý state phía client Redux  Môi trường runtime phía server Node.js  Framework xây dựng server cho Node,js Expressjs  Hệ quản trị cơ sở dữ liệu MongoDB  Bảng 4.6: Danh sách thư viện và công cụ sử dụng 4.3.2 Kết quả đạt được Sau khi tìm hiểu, khảo sát, thiết kế và phát triển ĐATN đã xây dựng phần mềm Quản lý sản xuất và tích hợp vào hệ thống không gian làm việc số DXClan của công ty Vnist. Các chức năng chính của ứng dụng là (i) Quản lý kế hoạch sản xuất, (ii) Quản lý lệnh sản xuất, (iii) Quản lý đơn hàng sản xuất, (iv) Gợi ý sản xuất lưu kho, (v) Quản lý lô hàng sản xuất, (vi) Quản lý đơn yêu cầu mua nguyên vật liệu, (vii) Quản lý lịch sản xuất. Thống kê thông tin chi tiết ứng dụng được trình bày ở Bảng 4.7.
Thông tin Thống kê Số lớp trong mã nguồn (file jsx và file js) 74 lớp Số gói trong mã nguồn 42 gói Số bảng CSDL được sử dụng trong hệ thống 11 bảng Số bảng CSDL thiết kế cho ứng dụng 6 bảng Bảng 4.7: Thống kê thông tin chi tiết ứng dụng Quản lý sản xuất 394.3.3 Minh họa các chức năng chính Chức năng tạo kế hoạch sản xuất được chia thành 3 bước được thực hiện lần lượt (i) Thêm các sản phẩm vào kế hoạch sản xuất, (ii) Chia kế hoạch sản xuất thành các lệnh sản xuất, (iii) Phân lịch thực hiện cho từng lệnh sản xuất. Hình 4.11 là bước thêm sản phẩm vào kế hoạch sản xuất Hình 4.11: Thêm sản phẩm vào kế hoạch sản xuất Hình 4.12 là bước chia kế hoạch sản suất thành các lệnh sản xuất. Mỗi lệnh sản xuất sẽ sản xuất một loại sản phẩm. Mỗi lệnh sản xuất có người phụ trách nguyên vật liệu, người giám sát thực hiện và người kiểm định chất lượng.
40Hình 4.12: Phân chia lệnh sản xuất Hình 4.13 là bước phân lịch thực hiện cho lệnh sản xuất. Mỗi lệnh sản xuất sẽ được phân lịch thực hiện một xưởng sản xuất và các công nhân trong xưởng đó.
Hình 4.13: Phân lịch thực hiện Hình 4.14 mô tả chức năng thống kê danh sách các lô sản xuất. Mỗi khi thực hiện xong một lệnh sản xuất sẽ tạo ra lô hàng sản xuất tương ứng.
41Hình 4.14: Thống kê danh sách lô sản xuất Mỗi lô hàng sản xuất cần được vận chuyển đến kho hàng để hoàn thành thủ tục nhập kho. Hình 4.15 mô tả chức năng thêm phiếu nhập kho cho lô hàng.
424.4 Kiểm thử
4.5 Triển khai
Người dùng có thể triển khai phần mềm ngay trên môi trường localhost của máy tính cá nhân. Các bước thực hiện như sau:
445.1 Xây dựng quy trình lập kế hoạch sản xuất khi có đơn đặt hàng linh hoạt
5.1.1 Đặt vấn đề Các doanh nghiệp sản xuất luôn mong muốn hoàn thành số lượng đơn đặt hàng nhiều nhất có thể. Ngoài đem lại lợi nhuận cho doanh nghiệp hoàn thành nhiều đơn đặt hàng còn giúp gia tăng uy tín của doanh nghiệp với khách hàng.
Để cung cấp đủ số lượng hàng hóa trong đơn hàng doanh nghiệp thường lập kế hoạch sản xuất theo hai phương pháp cơ bản là MTS: Make To Stock – Sản Xuất Để Tồn Kho và MTO: Make To Order – Sản Xuất Theo Đơn Đặt Hàng. MTS là phương thức sản xuất mà doanh nghiệp sản xuất sản phẩm trước khi khách hàng có nhu cầu. Sản phẩm được lưu kho, sau đó được đem phân phối và bán cho khách hàng. MTO là phương thức sản xuất mà doanh nghiệp chỉ sản xuất ra sản phẩm khi khách hàng có đơn đặt hàng cho doanh nghiệp. Sản phẩm MTO thường mang giá trị cao, thời gian làm ra sản phẩm dài hơn, sản phẩm có thể bị lỗi thời theo thời gian.
Các phần mềm hỗ trợ quản lý sản xuất hiện nay đang tách riêng chức năng tạo kế hoạch sản xuất theo MTS và MTO. Trong trường hợp tồn kho không đáp ứng đủ nhu cầu đơn hàng, doanh nghiệp sẽ sản xuất theo phương thức MTO( sản xuất mới toàn bộ số lượng hàng hoá trong đơn hàng). Nhược điểm của cách làm này là sẽ làm tăng thời gian chờ đợi hàng của khách hàng và không tối ưu số lượng hàng hoá tồn kho.
Để giải quyết vấn đề này, ĐATN sẽ xây dựng quy trình tạo kế hoạch sản xuất kết hợp giữa cả hai phương thức MTS và MTO nhằm giúp kế hoạch sản xuất linh hoạt, đáp ứng nhu cầu đa dạng của khách hàng 5.1.2 Giải pháp và kết quả đạt được Để giải quyết vấn đề số lượng sản phẩm cần sản xuất trong đơn hàng ĐATN cung cấp quy trình tạo kế hoạch sản xuất khi có đơn đặt hàng. Hình 5.1 mô tả quy trình tạo kế hoạch sản xuất khi có đơn đặt hàng 45Hình 5.1: Quy trình tạo kế hoạch sản xuất khi có đơn đặt hàng Mô tả các bước trong Quy trình tạo kế hoạch sản xuất khi có đơn đặt hàng như sau:
Bước 1: Tạo đơn hàng kinh doanh. Khi thêm sản phẩm vào đơn hàng kinh doanh, nhân viên bán hàng sẽ cung cấp số lượng bán và số lượng xuất từ tồn kho cho từng sản phẩm. Số lượng xuất từ tồn kho là số lượng sản phẩm có thể giao cho khách hàng ngay lập tức từ kho mà không cần sản xuất mới. Trong trường hợp tồn kho không đủ cung cấp cho đơn hàng khách hàng vẫn có thể nhận được một số lượng hàng hoá trước giúp giảm thời gian chờ đợi của khách hàng. Hình 5.2 là giao diện thêm sản phẩm vào đơn bán hàng.
46Hình 5.2: Thêm sản phẩm vào đơn hàng kinh doanh Bước 2: Yêu cầu tạo kế hoạch sản xuất cho đơn hàng. Với đơn hàng chưa xuất kho đủ số lượng hàng hoá, nhân viên bán hàng có thể yêu cầu bộ phận sản xuất lên kế hoạch sản xuất cho số lượng hàng hoá còn thiếu. Hình 5.3 là giao diện yêu cầu tạo kế hoạch sản xuất cho đơn hàng.
5.4 là giao diện tạo kế hoạch sản xuất cho đơn hàng.
5.5 là giao diện yêu cầu sản xuất.
5.2 Gợi ý số lượng sản phẩm sản xuất để tồn kho
5.2.1 Đặt vấn đề Với các sản phẩm có nhu cầu tiêu thụ ổn định các nhà sản xuất thường sản xuất theo phương thức MTS. Sản phẩm được sản xuất trong một giai đoạn sản xuất sẽ được nhập kho để phục vụ các đơn hàng trong giai đoạn sản xuất tiếp theo. Phương pháp này giúp các nhà sản xuất có thể đáp ứng các đơn hàng ngay lập tức, cung ứng liên tục và tạo thiện cảm với khách hàng.
Bài toán đặt ra cho phương pháp này là cần sản xuất thêm bao nhiêu sản phẩm để đáp ứng nhu cầu của khách hàng. Nếu số lượng sản phẩm tồn kho quá nhiều so với nhu cầu của khách hàng sẽ tiêu tốn nhiều chi phí bảo quản lưu kho cho sản phẩm. Nếu số lượng sản phẩm tồn kho quá ít so với nhu cầu của khách hàng sẽ tốn thời gian chờ đợi sản xuất thêm sản phẩm của khách hàng.
Để có thể gợi ý số lượng sản phẩm sản xuất để tồn kho trước tiên phải dự báo được nhu cầu tiêu thụ sản phẩm của khách hàng trong giai đoạn tới. Từ dự báo tính được kết hợp với các thông tin số lượng hàng tồn kho, số lượng sản phẩm đang sản xuất,... ĐATN sẽ tính toán số lượng sản phẩm cần sản xuất thêm trong giai đoạn 49hiện tại.
5.2.2 Giải pháp và kết quả đạt được Đặc điểm của các sản phẩm sản xuất tồn kho là thời gian sản xuất sản phẩm không lớn nên chu kỳ sản xuất cũng không quá dài. Chu kỳ sản xuất cũng phải đủ dài có thể nhận thấy số lượng sản phẩm sản xuất biến động qua các giai đoạn.
ĐATN chia giai đoạn sản xuất theo từng tháng, sản phẩm sản xuất tồn kho trong tháng hiện tại sẽ được phục vụ cho nhu cầu đặt hàng trong tháng kế tiếp.
ĐATN sử dụng mô hình Holt-Winters để dự báo nhu cầu tiêu thụ cho từng sản phẩm trong tháng kế tiếp với thông qua dữ liệu tiêu thụ thực tế trong quá khứ. Từ dự báo đó, ĐATN đưa ra công thức và tính toán gợi ý số lượng sản phẩm cần sản xuất thêm trong tháng hiện tại.
a, Mô hình Holt-Winters Mô hình Holt-Winters là một mô hình dự báo theo chuỗi thời gian. Dự báo chuỗi thời gian là dự báo giá trị tương lai của một biến nào đó bằng cách phân tích số liệu quá khứ và hiện tại của chính biến số đó. Áp dụng vào ĐATN, thông qua mô hình Holt-Winters hệ thống có thể dự báo nhu cầu tiêu thụ của sản phẩm trong tháng tới với đầu vào là lịch sử tiêu thụ của sản phẩm đó trong quá khứ.
Ưu điểm của Mô hình Holt-Winters là cần ít dữ liệu trong quá khứ và có thể áp dụng cho chuỗi dữ liệu có tính xu hướng và mùa vụ.
Mô hình dựa trên phương pháp làm mịn cho 3 yếu tố cơ bản: mức độ E, xu của mô hình trong :
dYt+n= (Et+nTt)St+n−p (5.1) Trong đó:
dYt+n- Giá trị dự báo tại giai đoạn t+n Yt- Giá trị thực tế tại giai đoạn t Et- Mức độ của đối tượng dự báo tại giai đoạn t Bt- Tính xu hướng đối tượng dự báo tại giai đoạn t SS- Tính mùa vụ đối tượng dự báo tại giai đoạn t p - Chu kỳ của mùa vụ (p=12 với dự báo theo tháng) 50n - 1,2,3,...p b, Ứng dụng mô hình Holt-Winters trong ĐATN Hệ thống ứng dụng mô hình Holt-Winters dự báo nhu cầu tiêu thụ của sản phẩm trong các tháng kế tiếp như sau:
Input : Dữ liệu tiêu thụ sản phẩm thực tế trong quá khứ theo từng tháng được tổng hợp qua các đơn hàng.
Ouput : Dự báo nhu cầu tiêu thụ của sản phẩm trong các tháng kế tiếp Bước 1 : Xác định hệ số làm mịn của mô hình Sai số bình phương trung bình MSE là một tiêu chí đánh giá sai số dự báo, là chênh lệch giữa giá trị thực (dữ liệu) và giá trị dự báo nhằm đánh giá chất lượng hay sự phù hợp của mô hình dự báo tại cùng một thời điểm.
báo càng cho ra kết quả chính xác.
Công thức tính MSE:
MSE =1 nnX i=1(Yi−bYi)2(5.5) Trong đó:
bYi- Giá trị dự báo tại giai đoạn i Yi- Giá trị thực tế tại giai đoạn i n - Số giai đoạn trong dữ liệu quá khứ Yt,Et,Bt,dYt+ntheo công thức (2) ,(3), (4), (1) Hình 5.6 mô tả kết quả dự báo nhu cầu tiêu thụ tháng 8 của các sản phẩm bằng mô hình Holt Winter với dữ liệu đầu vào là số lượng tiêu thụ thực tế của sản phẩm trong quá khứ.
Hình 5.6: Dự báo nhu cầu tiêu thụ của sản phẩm trong tháng 8 5.2.3 Gợi ý số lượng cần sản xuất thêm trong tháng theo từng sản phẩm Từ kết quả dự báo nhu cầu tiêu thụ sản phẩm của tháng tiếp theo, em đưa ra công thức gợi ý số lượng cần sản xuất thêm trong tháng với từng sản phẩm.
51Công thức tính số lượng cần sản xuất thêm trong tháng với từng sản phẩm:
Số lượng cần sản xuất thêm = Số lượng dự báo tiêu thụ trong tháng tới - ( Số lượng tồn kho - Số lượng tồn kho để kinh doanh trong tháng hiện tại) - Số lượng đang sản xuất Hình 5.7 mô tả gợi ý số lượng cần sản xuất thêm của một sản phẩm trong tháng 7.
5.3 Liên thông với module quản lý kho và quản lý đơn hàng
5.3.1 Đặt vấn đề Với mỗi doanh nghiệp sản xuất, bộ phận sản xuất, bộ phận kinh doanh và bộ phận kho cũng là 3 thành phần cốt lõi tạo thành một quy trình sản xuất khép kín từ lên đơn hàng đến sản xuất và nhập kho. Bộ phận bán hàng nắm vai trò quản lý các đơn bán hàng, mua hàng, đề nghị sản xuất cho các đơn hàng. Bộ phận sản xuất nhận yêu cầu từ bộ phận bán hàng lên kế hoạch, thực hiện sản xuất và đề nghị nhập kho sản phẩm đã hoàn thành sản xuất. Bộ phận kho quản lý số lượng và nơi lưu trữ các nguyên vật liệu và thành phẩm.
Trong một quy trình sản xuất phải có liên thông giữa ba bộ phận để giải quyết các vấn đề (i) trao đổi thông tin giữa ba bộ phận và (ii) xây dựng chức năng chung giữa ba bộ phận.
5.3.2 Giải pháp và kết quả đạt được a, Trao đổi thông tin cần thiết giữa các bô phận Ba bộ phận sản xuất, kinh doanh, kho luôn phải trao đổi các thông tin cần thiết với nghiệp vụ của mỗi module để đảm bảo tính nhất quán trong dữ liệu và hạn chế rủi ro. Bộ phận kinh doanh cần biết thông tin về số lượng hàng tồn kho để xác định có cần thiết lập kế hoạch sản xuất cho đơn hàng không. Hình 5.8 là giao diện thêm sản phẩm vào đơn hàng kinh doanh trong đó có thông tin về số lượng tồn kho của sản phẩm.
52Hình 5.8: Giao diện thêm sản phẩm vào đơn hàng Bộ phận sản xuất cần biết danh sách số lượng đơn hàng yêu cầu sản xuất để nhanh chóng tạo kế hoạch sản xuất cho đơn hàng, giảm khả năng lỡ đơn hàng.
Hình 5.9 là giao diện liệt kê danh sách đơn hàng sản xuất ở bộ phận sản xuất, các đơn hàng được sắp xếp theo thứ tự ưu tiên giảm dần.
Hình 5.9: Giao diện danh sách đơn hàng sản xuất b, Xây dựng các chức năng tạo phiếu đề nghị đến các bộ phận kinh doanh và bộ phận kho Với chức năng mua sắm nguyên vật liệu, bộ phận sản xuất có thể xác định cần mua bao nhiêu nguyên vật liệu để phục vụ sản xuất, bộ phận kinh doanh sẽ liên hệ với nhà phân phối đề nhập nguyên liệu về. ĐATN xây dựng chức năng tạo phiếu đề nghị mua nguyên vật liệu được tạo bộ phận sản xuất. Bộ phận kinh doanh sẽ lên đơn mua sắm nguyên vật liệu từ đề nghị của bộ phận sản xuất. Hình 5.10 là giao diện thêm phiếu đề nghị mua nguyên vật liệu.
53Hình 5.10: Giao diện thêm phiếu đề nghị mua nguyên vật liệu Trước khi thực hiện lệnh sản xuất, bộ phận sản xuất cần nhận nguyên vật liệu từ bộ phận kho. Sau khi hoàn lệnh sản xuất bộ phận sản xuất cần vận chuyển sản phẩm đến kho để lưu trữ. ĐATN xây dựng các chức năng tạo phiếu xuất kho nguyên vật liệu và tạo phiếu nhập kho sản phẩm cho lô hàng sản xuất.Hình 5.10 là giao diện thêm phiếu đề nghị xuất kho nguyên vật liệu và hình 5.12 là giao diện thêm phiếu đề nghị nhập kho cho lô hàng sản xuất.
556.1 Kết luận
ĐATN đã khắc phục được hạn chế của các phần mềm Quản lý sản xuất trên thị trường. ĐATN đã được tích hợp vào modue Quản lý sản xuất của hệ thống DXClan 1- Giải pháp không gian làm việc số cho doanh nghiệp của Công ty Cổ phần Công nghệ An toàn thông tin và truyền thông Việt Nam (VNIST). Các chức năng chính là (i) Quản lý kế hoạch sản xuất, (ii) Quản lý đơn hàng sản xuất, (iii) Quản lý lệnh sản xuất, (iv) Quản lý lô hàng sản xuât, (v) Quản lý đơn mua nguyên vật liệu, (vi) Gợi ý số lượng sản phẩm cần sản xuất.
Tuy nhiên, ĐATN vẫn còn có hạn chế là chưa có chức năng tạo kế hoạch sản xuất tự động. Thuật toán dự báo được áp dụng chưa đa dạng, chưa có chức năng cái thiện độ chính xác của dự báo.
Trong quá trình làm đồ án, em có học hỏi được cách sử dụng các công nghệ mới như MERN Stack. Việc phát triển và tích hợp ĐATN vào hệ thống DXClan cũng giúp em học hỏi được cách xây dựng một sản phẩm thực tế.
6.2 Hướng phát triển
Trong tương lai phần mềm cần có chức năng phân tích các tài nguyên sản xuất hiện có để hỗ trợ tạo kế hoạch sản xuất tự động. ĐATN cũng cần thêm các mô hình dự báo nhu cầu tiêu thụ sản phẩm để có sự so sánh độ chính xác giữa các mô hình.
Đồng thời cũng cần thêm các tham số ảnh hưởng đến nhu cầu tiêu thụ và loại bỏ tính ngẫu nhiêu để dự báo chính xác hơn.
1 56 M. Navarro and B. Navarro, “Optimal short-term forecasting using ga-based holt-winters method,” Dec. 2019. DOI:10.1109/IEEM44572.2019.
8978638 .
S. Aggarwal, “Modern web-development using reactjs,” International Journal of Recent Research Aspects , vol. 5, no. 1, pp. 133–137, 2018.
D. B. Duldulao and R. J. L. Cabagnot, “Managing state using redux with redux toolkit,” in Practical Enterprise React , Springer, 2021, pp. 203–214.
M. Satheesh, B. J. D’mello, and J. Krol, Web development with MongoDB and NodeJs . Packt Publishing Ltd, 2015.
M. V. Shcherbakov, A. Brebels, N. L. Shcherbakova, A. P. Tyukov, T. A.
Janovsky, V. A. Kamaev, et al., “A survey of forecast error measures,” World applied sciences journal , vol. 24, no. 24, pp. 171–176, 2013.
57