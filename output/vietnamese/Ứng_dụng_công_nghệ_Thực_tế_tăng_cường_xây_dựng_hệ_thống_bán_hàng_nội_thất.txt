1.1 Đặt vấn đề
Trong 10 năm trở lại đây, sự bùng nổ của ngành thương mại điện tử dần dần hình thành nên thói quen mua hàng mới của người tiêu dùng. Rất nhiều cửa hàng, chuỗi cung ứng sản phẩm chuyển hình thức kinh doanh chủ đạo sang bán hàng on.
Tuy nhiên, việc mua bán trao đổi hàng hoá trực tuyến gặp phải một số vấn đề đối với các loại hàng cồng kềnh, cần tính cá nhân hoá cao và trên hết việc xem thửnhững mặt hàng này cực kỳ khó khăn, điển hình là các sản phẩm đồ gỗ, nội thất  cũng là một trong những mặt hàng cần thiết trong mỗi gia đình.
Thông thường, mỗi khi người dùng cần mua một món đồ nội thất, họ sẽ tham khảo hình ảnh trên mạng do nhà cung cấp đăng tải. Để cẩn thận hơn, họ sẽ xem trực tiếp sản phẩm, tuy nhiên sản phẩm khi đặt ở cửa hàng và khi đặt vào không gian thực tế sẽ có những cái nhìn khác nhau từ màu sắc, mức độ tương thích với các món đồ còn lại trong nhà. Việc này dẫn đến sẽ mất rất nhiều thời gian, chi phí vận chuyển để đổi trả hàng.
Bên cạnh đó, cùng với sự phát triển phần cứng đặc biệt là camera trên các thiết bị di động, công nghệ thực tế tăng cường (AR) ngày một hoàn thiện và càng có thêm nhiều ứng dụng trong thực tế. Ngay trong tháng 3 năm 2020, Apple có giới thiệu sản phẩm Ipad Pro mới,trên thiết bị này có tích hợp một phần cứng mới mà hãng gọi là máy quét Lidar cho phép kết hợp với camera để thực hiện các tính toán AR chẳng hạn như: đo kích thước, khoảng cách với tốc độ phản hồi rất nhanh (nano-giây). Sau đó, phần cứng này cũng được tích hợp trên một số dòng iPhone cao cấp và tương lai sẽ được trang bị trên hầu hết các thiết bị di động từ phần khúc thấp tới cao. Tuy nhiên, hiện nay trên thị trường vẫn chưa có nhiều các thiết bị đáp ứng được phần cứng, nhưng có thể chắc chắn rằng AR là một công nghệ sẽ rất thịnh hành trong tương lai. Do đó, việc tìm hiểu và phát triển công nghệ AR giúp chúng ta có cơ hội tiếp cận với một luồng kiến thức mới, mặt khác, do đây là một công nghệ còn non trẻ, được các gã khổng lồ công nghệ (Apple, Facebook, Google,...) săn đón nên ta có thể phát triển thêm nhiều ý tưởng xung quanh nó.
1.2 Mục tiêu và phạm vi đề tài
Chính vì những hạn chế nêu như bên trên, nên hiện tại ở Việt Nam chỉ có các website bán hàng nội thất của một cửa hàng hay một chuỗi cửa hàng, chưa có bất kì sàn thương mại điện tử nào cho các sản phẩm nội thất. Vì vậy việc tìm kiếm sản phẩm của người dùng cũng tốn nhiều thời gian và thiếu đi sự so sánh giữa các mặt hàng làm cho quyết định mua hàng của họ trở nên khó khăn hơn.Một số hệ thống lớn (điển hình là IKEA) có áp dụng công nghệ thực tế tăng cường cho các sàn thương mại điện tử của họ. Điều này giải quyết được rất nhiều vấn đề đã nêu bên trên. Tuy nhiên các ứng dụng của IKEA chỉ hỗ trợ một số quốc gia nhất định (Mỹ, Canada,...), chưa kể đến tính năng cho phép người dùng xem AR cũng chỉ khả dụng tại một số ít quốc gia.
Như đã phân tích bên trên, ta tổng quát được những hạn chế đối với một hệ thống bán đồ nội thất tại Việt Nam:
Chủ yếu kinh doanh trên hình thức trực tiếp (khách hàng tới cửa hàng xem sản phẩm) Quy mô nhỏ, chưa có sự đa dạng sản phẩm Gặp nhiều rủi ro, chi phí phát sinh trong quá trình vận chuyển, lắp đặt và đổi trả Vì vậy, đề tài này nhằm mục đích xây dựng ra một hệ thống bán đồ nội thất, có chức năng đặt sản phẩm vào một môi trường bất kì, đem lại cái nhìn trực quan cho người dùng, rút ngắn thời gian lựa chọn và mua hàng.
Hệ thống ở đây gồm có một website để các nhà bán hàng quản lý các sản phẩm, đơn hàng của họ và một ứng dụng di động để người dùng thực hiện việc xem và đặt mua các sản phẩm.
Các chức năng chính gồm có:
1.3 Định hướng giải pháp
Từ nhiệm vụ giúp cho khách hàng có thể tìm kiếm được đa dạng sản phẩm đồ nội thất, lưu giữ lại lịch sử mua hàng, thông tin đơn đặt hàng nên giải pháp ở đây là cần xây dựng một hệ thống bán đồ nội thất, các sản phẩm được đăng tải từ nhiều cửa hàng, nhà cung cấp có thể quản lý các sản phẩm và đơn đặt hàng của họ.
Một nhiệm vụ quan trọng hơn đó là người dùng có thể xem thử được đồ vật khiđặt tại một không gian thực tế có phù hợp hay không ?. Vì vây, hệ thống sẽ được ứng dụng công nghệ thực tế tăng cường giúp nâng cao trải nghiệm của người dùng.
Hệ thống này dự kiến có những tính năng sau:
1.4 Bố cục đồ án
Phần còn lại của báo cáo đồ án tốt nghiệp này được tổ chức như sau.
Chương 2 trình bày về việc khảo sát hiện trạng các hệ thống có cùng mô hình kinh doanh và những ưu điểm, nhược điểm của từng hệ thông đó. Sau đó, có phân tích đặc tả cụ thể những chức năng chính và yêu cầu của phần mềm.
Chương 3 giới thiệu các công nghệ sẽ sử dụng trong phần mềm và lý do sử dụng những công nghệ này.
Trong chương 4, sẽ trình bày về chi tiết thiết kế, phát triển và triển khai của hệ thống, tại đây sẽ chỉ ra giải pháp thiết kế phần mềm, các biểu đồ và thiết kế tổng quan, thiết kế cơ sở dữ liệu, giao diện,...
Chương 5 trình bày về các đóng góp nổi bật trong quá trình thực hiện đề tài, một vài vấn đề khó khăn và cách thức xử lý, kèm theo đó là một số giải pháp có thể thực hiện được trong tương lai sau khi các thiết bị di động đã được hoàn thiện và đầy đủ phần cứng cần thiết cho thực tế tăng cường.
Chương cuối cùng sẽ là phần kết luận và hướng phát triển trong tương lai dành cho hệ thống này.2.1 Khảo sát hiện trạng Chương khảo sát hiện trạng sẽ trình bày về tình trạng và một số ưu điểm, nhược điểm của các hệ thống tương tự, từ đó đưa ra các chức năng và yêu cầu cần thiết cho hệ thống cần xây dựng.
Qua việc tham khảo các hệ thống liên quan gồm có:
Hệ thống Nội Thất Nhà Xinh (  ): đây là một chuỗi hệ thống bán đồ nội thất tương đối đa dạng, có khá nhiều cửa hàng tại các thành phố lớn. Tuy nhiên, hệ thống này chỉ có một website, trong thời buổi mỗi người đều có ít nhất một thiết bị di động thì việc có một ứng dụng trên di động là một lợi thế. Chưa kể đến việc hệ thống này cũng chỉ đăng tải các sản phẩm đi kèm thông số kĩ thuật và hình ảnh. Người mua hàng muốn xem thực tế sản phẩm sẽ phải tới trực tiếp các cửa hàng của Nhà Xinh để trải nghiệm.
Sàn thương mại điện tử Shopee (  ): một sàn thương mại điện tử nổi tiếng và phát triển nhất tại thị trường Việt Nam. Trên sàn này cũng được bày bán nhiều sản phẩm nội thất từ rất nhiều nhà bán lẻ. Tuy nhiên, các sản phẩm trên này đi theo một vài thiết kế chung, thường là các nhà bán lẻ nhập từ cùng một nguồn cung cấp nên các sản phẩm kém đa dạng về mẫu mã thiết kế, để tìm được món đồ theo đúng sở thích từng người sẽ cực kỳ mất thời gian. Chưa kể các sản phẩm cần được nhìn nhận thực tế nhưng ở đây chỉ cung cấp thông tin và hình ảnh, người dùng gặp phải khó khăn khi muốn xem thử đồ vật trước khi mua.
IKEA (  ): đây là một tập đoàn bán lẻ đồ nội thất lớn nhất thế giới, quy mô của tập đoàn này phủ sóng tại rất nhiều quốc gia trên toàn cầu. Họ cũng có một trang web và một ứng dụng di động. Ưu điểm của hệ thống này là họ rất đa dạng sản phẩm, cập nhập mẫu mã sản phẩm thường xuyên, bắt kịp xu hướng của thế giới hiện đại. Các sản phẩm công nghệ của họ được dầu tư rất chuyên nghiệp, có tính năng quan sát thực tế tăng cường. Tuy nhiên, các tính năng bị cắt giảm tại mỗi quốc gia khác nhau. Hiện tại ở Việt Nam, người dùng muốn trải nghiệm mua hàng sẽ phải chuyển vùng sang các quốc gia hỗ trợ (Hoa Kỳ, Canada,..). Người dùng tại Việt Nam cũng có thể đặt hàng, do IKEA hỗ trợ vận chuyển toàn cầu. tuy nhiên chi phí vận chuyển rất lớn đang là một rào cản để hệ thống này tiếp cận và cạnh tranh được với các sản phẩm trong nước.2.2 Tổng quan chức năng 2.2.1 Biểu đồ use case tổng quát Hình 2.1: Biểu đồ use case tổng quát Hệ thống có 3 tác nhân bao gồm: khách hàng, người bán và quản trị viên Khách hàng: có thể đăng ký, đăng nhập vào hệ thống sau đó có thể tìm kiếm, xem các sản phẩm, thêm các sản phẩm vào giỏ hàng hoặc bộ sưu tập, xem thực tế các sản phẩm, chỉnh sửa thông tin cá nhân, tiến hành đặt hàng và theo dõi các đơn hàng của mình Người bán: có thể đăng ký, đăng nhập, chỉnh sửa thông tin cá nhân và có quyền quản lý các sản phẩm, đơn hàng do họ phụ tráchQuản trị viên: có quyền quản lý tất cả người dùng, sản phẩm và đơn hàng 2.2.2 Biểu đồ use case phân rã Khách hàng tìm kiếm, xem sản phẩm Hình 2.2: Biểu đồ use case Khách hàng tìm kiếm, xem sản phẩm Use case này áp dụng với tác nhân là khách hàng trong khi tìm và xem thông tin một sản phẩm. Khách có thể xem các thông tin về một sản phẩm như: loại sản phẩm, giá thành, hình ảnh sản phẩm, thông tin người bán, số lượng đã bán, số lượng hàng còn lại, đánh giá sản phẩm,... Khách hàng cũng có thể xem và đặt trực tiếp sản phẩm vào không gian hiện tại2.2.3 Biểu đồ use case phân rã Người dùng chỉnh sửa thông tin cá nhân Hình 2.3: Biểu đồ use case Người dùng chỉnh sửa thông tin cá nhân Use case này áp dụng với tác nhân là người dùng đã đăng nhập gồm có: khách hàng, người bán, quản trị viên. Người dùng có thể thay đổi các thông tin cơ bản:
họ và tên, địa chỉ, ngày tháng năm sinh, mật khẩu2.2.4 Biểu đồ use case phân rã Khách hàng quản lý giỏ hàng Hình 2.4: Biểu đồ use case Khách hàng quản lý giỏ hàng Use case này áp dụng với tác nhân là khách hàng. Khi khách hàng có nhu cầu muốn mua một sản phẩm, họ sẽ thêm các sản phẩm vào giỏ hàng để chờ đặt hàng.
Trong mục quản lý giỏ hàng, khách hàng có thể thay đổi số lượng sản phẩm hoặc loại bỏ sản phẩm khỏi giỏ hàng2.2.5 Biểu đồ use case phân rã Khách hàng quản lý bộ sưu tập Hình 2.5: Biểu đồ use case Khách hàng quản lý bộ sưu tập Use case này áp dụng với tác nhân là khách hàng đã đăng nhập. Khi khách hàng muốn xem thử một hoặc nhiều sản phẩm trong không gian thực tế, họ cần thêm các sản phẩm cần thiết vào bộ sưu tập. Việc quản lý bộ sưu tập gồm các nhiệm vụ:
thêm sản phẩm vào bộ sưu tập và loại bỏ sản phẩm khỏi bộ sưu tập 2.2.6 Biểu đồ use case phân rã Khách hàng đặt hàng Hình 2.6: Biểu đồ use case Khách hàng đặt hàngUse case này áp dụng với tác nhân là khách hàng đã đăng nhập. Khi muốn đặt mua một hoặc nhiều sản phẩm, khách hàng cần lựa chọn các mặt hàng từ giỏ hàng rồi tiến hành đặt hàng. Tiếp đó, khách hàng cần nhập thông tin về người nhận hàng, địa chỉ nhận hàng và các lưu ý cho người bán trước khi xác nhận đặt hàng.
2.2.7 Biểu đồ use case phân rã Khách hàng theo dõi đơn đặt hàng Hình 2.7: Biểu đồ use case Khách hàng theo dõi đơn đặt hàng Sau khi đã có ít nhất 1 đơn hàng, khách hàng có thể theo dõi đơn hàng hoặc xem lại lịch sử mua hàng của mình. Với các đơn hàng đang trong trạng thái chờ xử lý, khách hàng có thể huỷ hoặc chỉnh sửa thông tin đặt hàng. Còn đối với các đơn hàng đã hoàn thành, khách hàng có thể đánh giá chất lượng cho đơn hàng.2.2.8 Biểu đồ use case phân rã Khách hàng xem thực tế sản phẩm Hình 2.8: Biểu đồ use case Khách hàng xem thực tế sản phẩm Sau khi đã thêm các sản phẩm vào bộ sưu tập, khách hàng có thể đặt thử các sản phẩm ra không gian thực tế. Tại đây, khách hàng có thể chọn các sản phẩm để thêm hoặc loại bỏ khỏi không gian thực tế. Khách hàng cũng có thể di chuyển, hoặc xoay các sản phẩm đã đặt trên mặt phẳng.2.2.9 Biểu đồ use case phân rã Người bán quản lý sản phẩm Hình 2.9: Biểu đồ use case Người bán quản lý sản phẩm Use case này được áp dụng với người bán hàng. Họ có thể quản lý các sản phẩm do họ cung cấp gồm có: chỉnh sửa thông tin sản phẩm (giá bán, số lượng sản phẩm còn lại, mô tả...) hoặc xoá sản phẩm khỏi hệ thống2.2.10 Biểu đồ use case phân rã Người bán theo dõi đơn đặt hàng Hình 2.10: Biểu đồ use case Người bán theo dõi đơn đặt hàng Use case này được áp dụng với người bán hàng. Họ có thể quản lý các đơn đặt hàng mà các sản phẩm trong đơn hàng do họ cung cấp.2.2.11 Biểu đồ use case phân rã Quản trị viên quản lý người dùng Hình 2.11: Biểu đồ use case Quản trị viên quản lý người dùng Use case này được áp dụng với quản trị viên. Họ có thể quản lý tất cả thành viên trong hệ thống. Tại đây, quản trị viên được phép sửa một số thông tin của người dùng hoặc có thể loại bỏ tài khoản người dùng khỏi hệ thống.2.2.12 Biểu đồ use case phân rã Quản trị viên quản lý sản phẩm Hình 2.12: Biểu đồ use case Quản trị viên quản lý sản phẩm Cũng tương tự như use case người bán quản lý sản phẩm, nhưng quản trị viên có thể quản lý toàn bộ sản phẩm trong hệ thống, bên cạnh đó quản trị viên thực hiện phê duyệt các sản phẩm do người bán đăng tải2.2.13 Biểu đồ use case phân rã Quản trị viên quản lý đơn đặt hàng Hình 2.13: Biểu đồ use case Quản trị viên quản lý đơn đặt hàng Quản trị viên có thể quản lý toàn bộ đơn đặt hàng trên hệ thống. Tại đây, người quản trị có thể thay đổi trạng thái đơn hàng hoặc huỷ đơn hàng.
2.3 Đặc tả chức năng
2.4 Yêu cầu phi chức năng
Do đây là một hệ thống thương mại điện tử, nên sẽ có rất nhiều người dùng truy cập một lúc.
Trong giai đoạn đầu tiên, yêu cầu hệ thống đáp ứng được tối thiểu 1000 người dùng truy cập đồng thời. Hệ thống sẽ được bảo trì và nâng cấp theo thời gian khi số lượng người dùng và dữ liệu lưu trữ tăng lên để đáp đứng được trải nghiệm của người dùng.
Thời gian tối đa để gọi một truy vấn từ người dùng là 1s Hệ thống phải được xây dựng tuân thủ theo các nguyên lý thiết kế phần mềm SOLID, để dễ dàng bảo trì và nâng cấp trong tương lai Trên đây là các phân tích về những vấn đề gặp phải của một số hệ thống bán đồ nội thất hiện tại và các yêu cầu, chức năng cho hệ thống sắp xây dựng để giải quyết các vấn đề đó. Các công cụ để thực hiện việc xây dựng, phát triển hệ thống sẽ được trình bày trong chương tiếp theo.Chương này sẽ giới thiệu những thành phần cơ bản của hệ thống (Backend và Frontend) và những công nghệ sẽ xử dụng để xây dựng ra các thành phần đó.
3.1 Backend
Backend được xây dựng bằng ExpressJS. Đây là một framework giành cho NodeJS. Nó cung cấp cho chúng ta rất nhiều tính năng mạnh mẽ trên nền tảng web cũng như trên các ứng dụng di động. Vì ExpressJS chỉ yêu cầu ngôn ngữ lập trình là Javascript nên việc xây dựng các ứng dụng web và API trở nên đơn giản hơn với các lập trình viên và nhà phát triển. Có thể tổng hợp một số chức năng chính của ExpressJS như sau:
Thiết lập các lớp trung gian để trả về các HTTP request Định nghĩa router cho phép sử dụng với các hành động khác nhau dựa trên phương thức HTTP và URL Cho phép trả về các trang HTML dựa vào các tham số Cơ sở dữ liệu: sử dụng hệ quản trị cơ sở dữ liệu MySQL, đây là hệ quản trị cơ sở dữ liệu tự do nguồn mở phổ biến nhất thế giới và được các nhà phát triển rất ưa chuộng trong quá trình phát triển ứng dụng. Bên cạnh đó, kết hợp với ORM - là một kỹ thuật/cơ chế lập trình thực hiện ánh xạ CSDL sang các đối tượng trong các ngôn ngữ lập trình hướng đối tượng giúp việc lập trình trở nên đơn giản, dễ dàng.
3.2 Frontend
3.2.1 Web Framework được sử dụng là React kết hợp với công cụ quản lý trạng thái là Redux. Đây là một giải pháp rất phổ biến và hiệu quả. Cả hai đều được Facebook phát triển, hỗ trợ và cập nhật thường xuyên, áp dụng rất hiệu quả công nghệ Single Page Application - mục đích chính để tăng trải nghiệm tối ưu nhất cho người dùng 3.2.2 Mobile Framework được sử dụng là React Native kết hợp với công cụ quản lý trạng thái là Redux. Nó cũng có các ưu điểm tương tự như mục Web bên trên, bên cạnh đó đây là một framework đa nền tảng, giúp xây dựng nên những chương trình chạy được trên cả hệ điều hành Android và iOS nên rút ngắn thời gian cho việc phát triển sản phẩm.
Tuy nhiên, do hệ thống này sử dụng đến công nghệ thực tế tăng cường. Trong quá trình thiết bị thao tác với thực tế tăng cường, camera của thiết bị sẽ được sửdụng liên tục, nhiệt độ của thiết bị cũng vì thế mà tăng lên dẫn tới hiệu năng được giảm xuống, chính vì vậy sẽ cần tối ưu cho tốc độ phản hồi, độ mượt và chính xác khi sử dụng các màn hình có thao tác liên quan đến thực tế tăng cường. Bên cạnh đó, khi sử dụng các thư viện về thực tế tăng cường bên React Native gặp phải vấn đề về tốc độ phản hồi không được tốt và độ chính xác không cao. Giải pháp ở đây là kết hợp thêm với một số nội dung được lập trình đơn nền tảng (Android và iOS), cụ thể là có sử dụng đến thư viện SceneKit bên iOS và ARCore bên Android.4.1 Thiết kế kiến trúc 4.1.1 Lựa chọn kiến trúc phần mềm Kiến trúc phần mềm được sử dụng là kiến trúc MVC Trong kiến trúc MVC, mỗi bộ ba Model-View-Controller được thiết kế tương ứng cho các đối tượng mà người dùng có thể tương tác.
Model nắm giữ trạng thái, cấu trúc, các hành vi của dữ liệu được thể hiện và tương tác bởi người dùng. Model không phụ thuộc và tương tác trực tiếp lên các thành phần khác. Thay vì vậy, khi có thay đổi, nó sẽ thông báo cho những thành phần View tương ứng thông qua cơ chế là Observer pattern. Model còn cung cấp phương tiện để các thành phần khác tương tác lên nó.
View lấy các thông tin từ Model và trình bày đến người dùng. Trên cùng một Model, có thể có nhiều View cùng đăng ký. Khi có một thay đổi từ Model, tất cả các View đều được thông báo thông qua observer mà nó đã đăng ký.
Mỗi View khi được tạo ra sẽ có một Controller đi kèm với nó. Trong khi các View đảm nhận kết xuất dữ liệu thì các Controller đảm nhận việc xử lý dữ liệu từ người dùng. Với mỗi sự kiện nhận được, Controller có thể xử lý và tương tác trực tiếp lên thành phần View và Model tương ứng để đáp trả. View và Controller là hai thành phần cấu thành nên giao diện người dùng của ứng dụng. Chúng lưu giữ liên kết trực tiếp đến Model. Trong khi Controller có thể thay đổi dữ liệu theo yêu cầu của người dùng thì View tương tác để lấy dữ liệu cập nhật vào chính nó từ Model.
Phần Backend phía server sẽ được thiết kế một database lưu trữ kiểu chung cho các đối tượng như users, products, carts, collections,. . . các đối tượng sẽ có sự tham chiếu lẫn nhau. Và đây chính là phần Model trong kiến trúc MVC. Tiếp đến sẽ tạo một thư mục controller để xử lý mọi hành vi mà người dùng tương tác với hệ thống, thư mục này sẽ tương tác với Model để truy xuất cũng như cập nhật dữ liệu.
Vì ứng dụng phía Frontend làm theo hướng Single Page Application cho nên phần Backend sẽ tạo ra những route trả về dữ liệu tương ứng để khi nào người dùng tương tác với hệ thống sẽ chỉ gửi những XMLRequests giúp cho trang web không phải tải lại, làm cho trải nghiệm người dùng tốt hơn đáng kể. Tuy lần đầu tải trang sẽ mất nhiều thời gian hơn nhưng trong các lần truy cập sau, sẽ thấy được sự trải nghiệm tốt lên đáng kể.
Cho nên phần Frontend tuy là phần View nhưng nó cũng được tách ra thành baphần tương tự MVC để xử lý. View sẽ là những thứ hiện lên, Model lại là những dữ liệu được quản lý và Controller sẽ được xử lý logic tùy theo trường hợp 4.1.2 Thiết kế tổng quan Hình 4.1: Biểu đồ phụ thuộc gói4.1.3 Thiết kế chi tiết gói Hình 4.2: Thiết kế chi tiết gói Gói Frontend sẽ gồm 3 phần chính là View, Data và Business Logic Trong đó View sẽ gồm các thành phần được các Page sử dụng để gắn nó vào trong các thành phần của Page. Data được Business logic lấy từ gói Model của Backend. Sau đó, View sẽ lấy dữ liệu từ gói Data để hiển thị.
Tiếp theo, các Reducer trong Business Logic sẽ lấy các dữ liệu đó sử dụng tạo ra các dữ liệu mới rồi truyền lại về phía View. Trong trường hợp cần thiết thì sẽ lại gọi để lấy dữ liệu bên Model thông qua Controller.
Bên phía Backend, Controller sẽ tạo ra các API tương ứng như: API lấy danh sách sản phẩm, danh sách đơn hàng, danh sách người dùng,...
4.2 Thiết kế chi tiết
4.2.1 Thiết kế giao diện Giao diện ứng dụng di động của hệ thống có khoảng 14 màn hình chính, các màn hình và trình tự điều hướng giữa các màn hình được trình bày như sơ đồ bên dưới đây.Hình 4.3: Sơ đồ chuyển đổi màn hình Giao diện của ứng dụng sẽ được đặt theo hướng dọc do không có màn hình cần hiển thị quá chi tiết một thông tin nào đó và việc sử dụng hướng dọc cũng giúp các thao tác thực tế tăng cường trở nên thuận tiện hơn.Hình 4.4: Giao diện màn hình chi tiết sản phẩm và xem thực tế sản phẩmHình 4.5: Giao diện màn hình giỏ hàng và đặt hàngHình 4.6: Giao diện màn hình xem thực tế sản phẩm từ bộ sưu tậpHình 4.7: Giao diện màn hình tuỳ chọn sản phẩm trong quá trình xem thực tế4.2.2 Thiết kế lớp Hình 4.8: Biểu đồ tuần tự cho use case Người dùng đặt hàng sản phẩm Hình 4.9: Biểu đồ tuần tự cho use case Người bán cập nhật thông tin sản phẩm4.2.3 Thiết kế cơ sở dữ liệu Hệ thống bán hàng nội thất cũng tương tự như các hệ thống thương mại điện tử khác, gồm có các thực thể: khách hàng, người bán, sản phẩm, đơn hàng, ...
Các quan hệ giữa các thực thể được trình bày như bảng bên dưới đây:
4.3 Xây dựng ứng dụng
4.3.1 Thư viện và công cụ sử dụng Mục đích Công cụ Địa chỉ URL IDE lập trình WebStorm  webstorm IDE lập trình Android Studio  com/studio IDE lập trình XCode  m/xcode Phần mềm tạo máy chủ nội bộMAMP  ac Thiết kế giao diệnFigma  trữ mã nguồnGithub  Chỉnh sửa file 3DBlender  Chuyển đổi định dạng file 3DReality Converter  m/news/?id=01132020a Ngôn ngữ lập trìnhJavascript  Ngôn ngữ lập trìnhJava  Ngôn ngữ lập trìnhSwift  m/swift/ Framework lập trìnhReact  Framework lập trìnhReact Native  Thư viện thực tế tăng cường cho AndroidARCore  com/ar Thư viện thực tế tăng cường cho iOSSceneKit  m/documentation/scenekit/ Thư viện hỗ trợ quản lý trạng tháiRedux  Phần mềm kiểm thử APIPostman  Thư viện hỗ trợ dựng giao diệnBootstrap  Công cụ thiết kế iconIcon8  Kho dữ liệu mẫu mô hình 3DSketchfab  Bảng 4.11: Danh sách thư viện và công cụ sử dụng4.3.2 Kết quả đạt được Đối với server:
Hoàn thành các API như đã thiết kế, đảm bảo tốc độ truy vấn một API không quá 1 giây, có phân quyền dựa trên người sử dụng Đã lưu trữ được khoảng 40 mẫu sản phẩm, 10 người dùng trong cơ sở dữ liệu Đối với phần mềm trên di động:
Trên nền tảng iOS: hoàn thành hầu hết các chức năng như đã phân tích, chỉ cần trau chuốt thêm về giao diện là hoàn toàn có thể đưa vào sử dụng Trên nền tảng Android: còn thiếu chức năng xem thực tế các sản phẩm trong bộ sưu tập, các chức năng còn lại đã hoàn thiện ở mức cao Đối với website dành cho người bán và quản trị viên:
Đã hoàn thành đầy đủ các chức năng cần thiết: quản lý đơn hàng, quản lý sản phẩm, quản lý người dùng, đã có thể đi vào hoạt động ổn định Các thông số của hệ thống (dung lượng mã nguồn, dung lượng gói, số dòng code trong mã nguồn) được liệt kê trong bảng dưới đây:
STT Hạng mục Mô tả 1 Dung lượng mã nguồn backend 300 MB 2 Dung lượng mã nguồn website 800 MB 3 Dung lượng mã nguồn mobile app 900 MB 4 Dung lượng web app sau khi build 33 MB 5 Dung lượng mobile app sau khi build 150 MB 6 Số dòng code cho source backend 7130 7 Số dòng code cho source website 141261 8 Số dòng code cho source mobile app 2488285 Bảng 4.12: Thống kê các thông tin của hệ thống 4.3.3 Minh họa các chức năng chính Chức năng xem danh sách sản phẩm, chi tiết sản phẩmHình 4.12: Màn hình trang chủ Hình 4.13: Màn hình chi tiết sản phẩm Màn hình trang chủ hiển thị danh sách các sản phẩm nổi bật (sắp xếp theo lượt mua hàng và đánh giá của khách hàng) và các sản phẩm mới. Ở đây có các tuỳ chọn để di chuyển tới các màn hình: giỏ hàng, chi tiết sản phẩm, đơn hàng, bộ sưu tập, cá nhân và cài đạt.
Trong màn hình chi tiết sản phẩm bên cạnh hiển thị các thông tin của sản phẩm:
tên sản phẩm, loại sản phẩm, giá bán,... thì có thêm các tuỳ chọn để người dùng thuận tiện thao tác: thay đổi số lượng sản phẩm để thêm vào giỏ hàng, thêm sản phẩm vào bộ sưu tập và xem thực tế sản phẩm Chức năng xem sản phẩm trong bộ sưu tậpHình 4.14: Màn hình mô phỏng vật thể Hình 4.15: Màn hình vật thể trong thực tế Khi lựa chọn một vật thể từ bộ sưu tập, người dùng có thể xem mô phỏng vật thể hoặc đặt vật thể vào không gian hiện tại.
Màn hình vật thể trong thực tế có các tuỳ chọn: chọn một hoặc nhiều sản phẩm để đặt vào không gian thực tế, xoá toàn bộ vật thể và chụp màn hình. Các thao tác di chuyển, xoay vật thể trong mặt phẳng cũng tương tự như trong màn hình xem thực tế vật thể.
Trong quá trình xem thực tế sản phẩm người dùng có thể nhấn chọn một vật thể trên màn hình để hiện lên các nút thao tác với vật thể, ở đây người dùng có thể loại bỏ chỉ vật thể đó khỏi không gian hiện tại.
4.4 Kiểm thử
4.4.1 Các chức năng được kiểm thử Khách hàng đặt mua hàng Người bán thay đổi thông tin sản phẩm Quản trị viên thay đổi thông tin người dùng4.4.2 Phương pháp kiểm thử Kiểm thử bằng phương pháp kiểm thử hộp đen. Tổ chức kiểm thử theo từng chức năng như đã nêu bên trên, mỗi chức năng được kiểm thử với các kịch bản kiểm thử và ghi nhận kết quả kiểm thử 4.4.3 Kiểm thử chức năng khách hàng đặt mua hàng STT Test case Kết quả Lý do thất bại 1Sản phẩm: Bàn học sinh Số lượng: 10 Địa chỉ nhận hàng: số 1, Đại Cồ Việt, Hai Bà Trưng, Hà Nội SĐT người nhận: 0123456789 Người nhận: Nguyễn Văn AĐặt hàng thành công 2Sản phẩm: Bàn học sinh Số lượng: 100 Địa chỉ nhận hàng: số 1, Đại Cồ Việt, Hai Bà Trưng, Hà Nội SĐT người nhận: 0123456789 Người nhận: Nguyễn Văn AĐặt hàng thất bạiSố lượng sản phẩm còn lại không đủ 3Sản phẩm: Bàn học sinh Số lượng: 10 Địa chỉ nhận hàng:
SĐT người nhận: 0123456789 Người nhận: Nguyễn Văn AĐặt hàng thất bạiThiếu thông tin địa chỉ nhận hàng 4Sản phẩm: Bàn học sinh Số lượng: 10 Địa chỉ nhận hàng: số 1, Đại Cồ Việt, Hai Bà Trưng, Hà Nội SĐT người nhận:
Người nhận: Nguyễn Văn AĐặt hàng thất bạiThiếu thông tin số điện thoại người đặt hàng 5Sản phẩm: Bàn học sinh Số lượng: 10 Địa chỉ nhận hàng: số 1, Đại Cồ Việt, Hai Bà Trưng, Hà Nội SĐT người nhận: 0123456789 Người nhận: Nguyễn Văn AĐặt hàng thất bạiThiếu thông tin người nhận hàng Bảng 4.13: Kiểm thử chức năng khách hàng đặt mua hàng 4.4.4 Người bán thay đổi thông tin sản phẩm STT Test case Kết quả Lý do thất bại1Sản phẩm: Bàn học sinh Số lượng còn lại: 123 Giá bán: 600000 Hình ảnh: image_path File 3D: object_file_path Mô tả: Kích thước (DxRxC) 120cmx60cmx75cmCập nhập thông tin sản phẩm thành công 2Sản phẩm:
Số lượng còn lại: 123 Giá bán: 600000 Hình ảnh: image_path File 3D: object_file_path Mô tả: Kích thước (DxRxC) 120cmx60cmx75cmCập nhập thông tin sản phẩm thất bại, tên sản phẩm là trường bắt buộc phải cóThiếu tên sản phẩm 3Sản phẩm: Bàn học sinh Số lượng còn lại: 123 Giá bán:
Hình ảnh: image_path File 3D: object_file_path Mô tả: Kích thước (DxRxC) 120cmx60cmx75cmCập nhập thông tin sản phẩm thất bại, giá bán là trường bắt buộc phải cóThiếu giá bán 4Sản phẩm: Bàn học sinh Số lượng còn lại:
Giá bán: 600000 Hình ảnh: image_path File 3D: object_file_path Mô tả: Kích thước (DxRxC) 120cmx60cmx75cmCập nhập thông tin sản phẩm thất bại, số lượng sản phẩm còn lại là trường bắt buộc phải cóThiếu số lượng sản phẩm còn lại5Sản phẩm: Bàn học sinh Số lượng còn lại: 123 Giá bán: 600000 Hình ảnh:
File 3D: object_file_path Mô tả: Kích thước (DxRxC) 120cmx60cmx75cmCập nhập thông tin sản phẩm thất bại, hình ảnh là trường bắt buộc phải cóThiếu hình ảnh 6Sản phẩm: Bàn học sinh Số lượng còn lại: 123 Giá bán: 600000 Hình ảnh: image_path File 3D:
Mô tả: Kích thước (DxRxC) 120cmx60cmx75cmCập nhập thông tin sản phẩm thất bại, file 3D là trường bắt buộc phải cóThiếu file 3D 7Sản phẩm: Bàn giám đốc Số lượng còn lại: 123 Giá bán: 6000000 Hình ảnh: image_path File 3D: object_file_path Mô tả: Kích thước (DxRxC) 120cmx60cmx75cmCập nhập thông tin sản phẩm thất bại, sản phẩm này không thuộc quyền sở hữu của bạnCập nhật sản phẩm của người sở hữu khác Bảng 4.14: Người bán thay đổi thông tin sản phẩm 4.4.5 Quản trị viên thay đổi thông tin người dùng STT Test case Kết quả Lý do thất bại1Họ và tên: Nguyễn Văn A Số điện thoại: 012345678 Địa chỉ: số 7, Hồ Thiền Quang, Hai Bà Trưng, Hà Nội Email: anv@gmail.com Loại tài khoản: Người dùngThất bại, không thể thay đổi email người dùngTrường email không được phép thay đổi 2Họ và tên: Nguyễn Văn A Số điện thoại:
Địa chỉ: số 7, Hồ Thiền Quang, Hai Bà Trưng, Hà Nội Loại tài khoản: Người dùngThất bại, trường số điện thoại là bắt buộcThiếu giá trị số điện thoại 3Họ và tên:
Số điện thoại: 012345678 Địa chỉ: số 7, Hồ Thiền Quang, Hai Bà Trưng, Hà Nội Loại tài khoản: Người dùngThất bại, tên người dùng là bắt buộcThiếu tên người dùng 4Họ và tên: Nguyễn Văn A Số điện thoại: 012345678 Địa chỉ:
4.5 Triển khai
Do server được chạy trên localhost nên trong khuôn khổ đồ án này sẽ chỉ thử nghiệm trên các thiết bị trong cùng một hệ thống mạng nội bộ.Phần cứng server: CPU Apple M1 Pro, RAM 16GB, SSD 512GB Thử nghiệm website đối với trường hợp quản trị viên hoặc người bán hàng trên các trình duyệt Chrome, Safari, Edge đều hoạt động ổn định, không có hiện tượng quá tải, tiêu tốn phần cứng thiết bị.
Thử nghiệm ứng dụng di động trên thiết bị iPhone 12 Pro Max, cũng đem lại trải nghiệm mượt mà ở các màn hình trang chủ, chi tiết sản phẩm, giỏ hàng, bộ sưu tập, đặt hàng, xem thực tế sản phẩm. Tuy nhiên, khi sử dụng xem thực tế tăng cường trong khoảng thời gian dài, nhiệt độ thiết bị tăng lên cao dẫn đến quá trình hoạt động không được ổn định như ban đầu.
4.6 Các khó khăn gặp phải trong quá trình phát triển hệ thống
Trong quá trình thực hiện đề tài, có rất nhiều vấn đề phát sinh xảy ra làm kéo dài thời gian xây dựng hệ thống. Một vài khó khăn có thể kể đến:
Do các thư viện về thực tế tăng cường trên React Native hỗ trợ không thực sự tốt nên những phần sử dụng tính năng này đều được chuyển qua viết dưới những project native nhằm tối ưu hiệu năng cho sản phẩm Kho dữ liệu 3D miễn phí kém đa dạng về sản phẩm và giữa các file không được thống nhất về chất lượng và định dạng file. Chính vì vậy, phải tốn thêm rất nhiều thời gian để chuẩn hoá file, chuyển đổi định dạng, giảm dung lượng và chỉnh sửa tỷ lệ thu phóng của vật thể để có được trải nghiệm chân thực nhất khi sử dụng phần mềm.Chương này sẽ trình bày về một số giải pháp, đóng góp nổi bật trong quá trình thực hiện đề tài và những cách thức để có thể phát triển tiếp hệ thống này trong tương lai.
5.1 Cách thức tạo ra file 3D
Cho tới thời điểm hiện tại, có rất nhiều cách thức để có thể tạo được file 3D của một vật thể. Dưới đây sẽ trình bày 3 cách phổ biến nhất, phân tích các ưu điểm và nhược điểm của từng cách thức và áp dụng cách thức nào đối với hệ thống bán đồ nội thất này 5.1.1 Cách thứ nhất: Sử dụng camera trên điện thoại Hiện nay có rất nhiều công cụ cho phép tạo ra file 3D từ camera trên điện thoại.
Một ví dụ điển hình có thể kể đến là Object Capture - công cụ này do Apple phát triển, tương đối hiệu quả, có thể đánh giá là một trong các công cụ tốt nhất hiện nay. Tuy nhiên, file 3D được trích xuất ra ở định dạng USDZ, định dạng này chỉ sử dụng được trên các thiết bị của Apple (iOS, iPadOS, MacOS).
Ưu điểm có thể nhìn thấy trực tiếp của cách thức sử dụng camera để quét vật thể chính là tính tiện dụng. Hầu hết mọi người đều có thể tự thao tác được mà không cần thêm bất kỳ công cụ hỗ trợ nào.
Việc quét bằng điện thoại trước hết bắt buộc phải có một mẫu vật đã hoàn thành thực tế và yêu cầu người quét phải thực hiện chụp khá nhiều bức ảnh (tối thiểu 16 bức ảnh), số lượng ảnh chụp tăng dần đối với những mẫu vật có kích thước lớn hoặc có bề mặt cấu tạo phức tạp. Tuy nhiên, trong quá trình quét đôi khi sẽ gặp phải một vài vấn đề và người quét sẽ phải thực hiện lặp đi lặp lại một góc nhìn nhiều lần, đối với những vật thể có kích thước hoặc khối lượng lớn thì để quét được bề mặt bên dưới của vật là rất khó khăn và mất rất nhiều thời gian, kết quả file 3D xuất ra cũng không thể có được độ chính xác giống như vật thể thực tế.
Và sau khi có được file 3D, trong trường hợp muốn muốn thay đổi, chỉnh sửa thông tin của vật thể (bề mặt, hình dạng,...) thì cũng yêu cầu người thiết kế phải dùng đến một phần mềm chuyên dụng cho việc thiết kế 3D (AutoCAD, Blender, Autodesk 3DS Max,...).
5.1.2 Cách thứ hai: Sử dụng máy quét chuyên dụng Hiện nay trên thị trường có rất nhiều loại máy quét 3D, sử dụng tia laser để quét xung quanh bề mặt vật thể và trích xuất ra file.Ưu điểm của việc sử dụng máy quét 3D so với việc quét bằng camera là độ chính xác của vật thể gần như tuyệt đối.
Tuy nhiên, việc sử dụng máy quét vật thể cũng có một số nhược điểm:
Cần phải có vật thể đã hoàn thiện Khi quét bề mặt dưới của vật thể cồng kềnh, việc quét trở nên khó khăn, phức tạp hơn Các thiết bị quét không được phổ biến và giá thành cũng tương đối cao đối với các loại máy có độ quét chính xác cao Người sử dụng máy quét cần phải có kỹ năng và làm quen được với các thao tác trên máy quét để việc sử dụng thuận tiện, chính xác Và cũng tương tự như việc quét trên điện thoại, file 3D sau khi quét nếu muốn chỉnh sửa thì vẫn cần phải sử dụng các phần mềm thiết kế trên máy tính.
5.1.3 Cách tối ưu: Sử dụng bản thiết kế từ máy tính Hiện nay, hầu hết trước khi đi vào sản xuất một sản phẩm nội thất, các nhà thiết kế đều phác thảo nên một bản thiết kế 3D về sản phẩm, chưa kể đến trong trường hợp đối với những vật thể có bề mặt phức tạp, được đục khắc bằng các máy CNC thì việc tận dụng file thiết kế này là rất quan trọng. Trong những trường hợp này thì việc trích xuất file 3D từ camera hay máy quét sẽ bất tiện hơn đôi chút, do người sử dụng cần phải có một bước để chuyển các file này qua máy tính. Và hơn hết, việc thiết kế file 3D trên máy tính bằng các phần mềm chuyên dụng (AutoCAD, Blender, Autodesk 3DS Max,...) mang đến độ chính xác là tuyệt đối, và dễ dàng có thể tái sử dụng, chỉnh sửa khi cần thiết.
Chính vì vậy trong phạm vi hệ thống này, các mô hình vật thể đều được sử dụng từ các bản thiết kế trích xuất trên máy tính.
5.2 Chuẩn hoá định dạng file và lưu trữ
Do đặc thù riêng của từng hệ điều hành về việc hỗ trợ các định dạng file 3D khác nhau. Ví dụ, bên hệ điều hành iOS ( hoặc iPadOS), Apple chỉ hỗ trợ định dạng riêng của họ (.USD, .USDZ), và khi ta mang các file ở định dạng này lên các thiết bị, nền tảng khác (Android, Windows,...) thì không tương thích.
Chính vì lý do đó, ta sẽ lưu trữ đồng thời 2 định dạng đối với mỗi vật thể gồm có: định dạng .USDZ và định dạng .glb. Bảng products trong cơ sở dữ liệu vì vậy sẽ có 2 trường:
5.3 Tăng tốc độ tải xuống file của ứng dụng
Khi sử dụng tại các màn hình có thao tác thực tế tăng cường, ta sẽ cần tải file lưu trữ trên cơ sở dữ liệu về và lưu vào bộ nhớ đệm trong thiết bị, chính vì vậy việc giảm tải dung lượng của file mà ta lưu trữ sẽ rút ngắn thời gian tải xuống nhằm tăng trải nghiệm cho người dùng, giảm độ trễ của ứng dụng Công cụ sử dụng cho việc giảm thiểu dung lượng file .glb:  eport/ Các bước thực hiện để giảm thiểu dung lượng cho file như sau:
Đầu tiên, ta truy cập trang  , chọn file .glb cần giảm dung lượng Ở tab Export, mục compression ta chọn Meshopt Ở cửa sổ Meshot compression ta chọn level Medium(-c) Phương pháp nén này giúp cho dung lượng file .glb được giảm thiểu từ 10-20% đối với từng file khác nhau.
5.4 Nâng cao trải nghiệm thực tế bằng hoạt ảnh
Để tăng cảm giác chân thực cho người sử dụng, ta có thể bổ xung các hoạt ảnh cho vật thể, điều này yêu cầu đội ngũ thiết kế cần tạo ra các hoạt ảnh cho vật thể trong quá trình thiết kế. Hiện nay, các công cụ thiết kế chuyên dụng (Blender, 3DS Max,...) đã hỗ trợ rất tốt việc tạo ra hoạt ảnh. Tuy nhiên không nên lạm dụng, chỉ tập trung các hoạt ảnh chính nhằm tối ưu dung lượng file.
5.5 Cho phép người dùng tạo không gian ảo
Vì sử dụng thực tế tăng cường dựa trên phần cứng là camera nên tầm hoạt động hiệu quả phụ thuộc vào môi trường đủ sáng và không gian đủ rộng, ít vật cản để việc tracking mặt phẳng được dễ dàng. Tuy nhiên đối với trường hợp không gian thực tế hạn hẹp hoặc thiếu sáng, việc đặt thử một mô hình vật thể vào sẽ diễn ra khó khăn và độ chân thực không cao.
Chính vì vậy, ta có thể bổ xung thêm một tính năng cho ứng dụng đó là cho phép người dùng tạo ra một không gian ảo.
Các bước để người dùng thực hiện sẽ theo trình tự như sau:- Nhập kích thước không gian mà người dùng cần tạo, gồm có 3 giá trị: chiều dài, chiều rộng và chiều cao Hệ thống sẽ tạo ra một không gian rỗng có kích thước như người dùng vừa nhập Người dùng sẽ lựa chọn các sản phẩm trong bộ sưu tập để đặt vào không gian trống vừa được tạo Sau khi đặt xong các vật thể, người dùng có thể lưu lại, có tuỳ chọn cho phép người dùng thêm các sản phẩm vừa sử dụng vào giỏ hàng nhằm cho việc đặt hàng trở nên thuận tiện hơn.
Ta cũng hoàn toàn có thể cho phép người dùng kết hợp với các loại thiết bị thực tế ảo nhằm trải nghiệm không gian ảo trở nên chân thực hơn.
5.6 Đa dạng hoá sản phẩm
Hiện tại đối với mỗi vật thể ta chỉ có một một loại màu sắc, bề mặt. Trong các giai đoạn sau, ta có thể bổ xung thêm các texture đối với từng sản phảm, giúp cho người dùng có thể đa dạng sự lựa chọn khi mua hàng.
Việc này được thực hiện rất đơn giản, ta chỉ cần bổ xung thêm các texture, bổ xung thêm trường texture cho bảng products trên cơ sở dữ liệu. Và khi đem vật thể ra môi trường thực tế, người dùng có thể tuỳ chọn các mẫu texture khác nhau, các thư viện ARCore hay SceneKit đều đã hỗ trợ rất tốt tính năng này.
5.7 Tuỳ chỉnh kích thước thực tế của sản phẩm
Hiện tại, kích thước của vật thể lưu trữ trên cơ sở dữ liệu là cố định, và ứng dụng chưa cho phép người dùng thu phóng vật thể khi xem thực tế. Điều này dẫn đến việc người dùng lựa chọn được một sản phẩm ưng ý nhưng sản phẩm đó lại không phù hợp về kích thước với không gian sử dụng.
Bên cạnh đó, trên một vài thiết bị cao cấp của Apple (các dòng iPhone Pro và iPad Pro) một vài năm trở lại đây được tích hợp một cảm biến Lidar, giúp cho các tính toán về khoảng cách, độ sâu được chính xác hơn (sai số cỡ 1cm). Trong giai đoạn tới, khi các thiết bị di động dần dần được tích hợp phần cứng này, ta hoàn toàn có thể bổ xung tính năng cho phép người dùng thu phóng vật thể trong không gian rồi trích xuất ra kích thước của vật thể sau khi thu phóng, điều này giúp người dùng dễ dàng lựa chọn được sản phẩm vừa với kích thước không gian sử dụng.
5.8 Mở rộng mô hình đối với những sản phẩm khác
Hệ thống hiện tại chỉ áp dụng đối với các sản phẩm nội thất. Đặc điểm chung của loại mặt hàng này là các sản phẩm đều được người dùng đặt trên các bề mặtphẳng ví dụ: sàn, tường, mặt bàn,...
Ta hoàn toàn có thể mở rộng mô hình đối với các sản phẩm được đặt trên khuôn mặt người, điển hình là kính mắt. Hiện tại thư viện SceneKit của Apple đã hỗ trợ tracking và visualizing khuôn mặt rất tốt. Hoàn toàn trong tương lai, ta có thể nhân rộng mô hình này sang các loại hàng hoá cũng cực kỳ phổ biến như: quần áo, giày dép, các món đồ trang trí khác,...
5.9 Phân loại đơn hàng dựa theo nhà cung cấp
Trong quá trình đặt hàng, khách hàng có thể đặt nhiều sản phẩm từ nhiều nhà cung cấp. Tuy nhiên, nếu ta gộp tất cả những sản phẩm này vào cùng một đơn hàng thì sẽ gây khó khăn trong quá trình vận chuyển và người bán khó kiểm soát được đơn hàng.
Chính vì vậy, khi người dùng khởi tạo đơn hàng, bên backend đã phân loại tự động các sản phẩm theo nhà cung cấp và tạo ra số lượng đơn đặt hàng tương ứng với số lượng nhà cung cấp.
Trên đây là một số giải pháp và đóng góp, trong chương tiếp theo sẽ trình bày về kết quả thực hiện của đề tài này.6.1 Kết luận Đề tài "Ứng dụng công nghệ Thực tế tăng cường xây dựng hệ thống bán hàng nội thất" xuất phát từ một vài vấn đề trong thực tế. Việc tìm hiểu và phát triển hệ thống này nhằm tạo cơ sở ban đầu cho những hệ thống có ứng dụng công nghệ tương đối mới mẻ này tại thị trường Việt Nam.
Thông qua quá trình thực hiện đề tài, hiện tại đã có một hệ thống gồm đầy đủ các chức năng chính của một hệ thống thương mại điện tử với chức năng nổi bật là ứng dụng công nghệ thực tế tăng cường để quan sát các sản phẩm nội thất trong không gian thực tế.
Tuy nhiên hệ thống hiện tại vẫn chưa hoàn thiện ở một số phần như sau: chức năng quan sát thực tế tăng cường cho các thiết bị Android, tích hợp API thanh toán ngân hàng, gửi email để xác nhận đơn hàng, thay đổi mật khẩu và thông báo trong ứng dụng.
6.2 Hướng phát triển
Do sản phẩm được phát triển trong thời gian ngắn, chưa được kiểm tra và trau chuốt nên khó tránh khỏi một vài lỗi và sự bất hợp lý về giao diện ở một vài màn hình. Chính vì vậy, sản phẩm sẽ cần thêm thời gian để hoàn thiện trước khi đưa vào sử dụng thực tế.
Như đã phân tích các đóng góp nổi bật tại chương 5, hệ thống này hoàn toàn có thể mở rộng mặt hàng kinh doanh khác ngoài đồ nội thất, chẳng hạn: đồ trang trí, quần áo, giày dép,... Hệ thống có thể tích hợp thêm chức năng cho phép người dùng cá nhân hoá một căn phòng ảo, đa dạng các mẫu sản phẩm qua việc bổ xung thêm texture cho sản phẩm và tận dụng phần cứng Lidar để thực hiện việc truy xuất kích thước vật thể. Join Ryan Kopinsky, Creating Apple AR/VR Tutorials . [On]. Available:
(visited on 20/07/2022).
Don McCurdy, How to reduce gltf file size? . [On]. Available: https:
//blenderartists.org/t/how-to-reduce-gltf-file-size/13 44466 (visited on 30/06/2022).
Chris Language, Apple Augmented Reality by Tutorials Second Edition , Available:  gmented-reality-by-tutorials . E-book, 23/03/2022.
Anand Nigam, “How To Integrate Augmented Reality into Your iOS Appli cation," Medium , 30/08/2019. Available:  .com/how-to-implement-ar-quicklook-in-your-app-18d513a 13b9f