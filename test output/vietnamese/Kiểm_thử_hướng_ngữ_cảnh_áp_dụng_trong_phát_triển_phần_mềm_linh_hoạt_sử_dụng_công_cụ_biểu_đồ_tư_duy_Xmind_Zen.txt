
Lời đầu tiên, em xin được gửi lời cảm ơn chân thành nhất đến các thầy cô giảng
dạy tại Đại học Bách Khoa Hà Nội và đặc biệt là các thầy cô giảng dạy tại trường
Công nghệ thông tin và truyền thông đã giảng dạy, truyền đạt những kiến thức quý
Đặc biệt, em xin chân thành gửi lời cảm ơn đến giảng viên hướng dẫn Đồ án tốt
nghiệp PGS.TS.Huỳnh Quyết Thắng. Thầy đã tận tình giúp đỡ, hướng dẫn đưa ra
những lời khuyên bổ ích trong quá tình hoàn thành đồ án tốt nghiệp này.
Và lời cuối cùng, em xin được gửi lời cảm ơn đến gia đinh và bạn bè đã luôn gắn
bó, động viên và hỗ trợ em trong quá trình học tập tại trường.
TÓM TẮT NỘI DUNG ĐỒ ÁN
Hiện nay, các phương pháp phát triển phần mềm linh hoạt được sử dụng rộng
rãi trong ngành phát triển phần mềm để đưa sản phẩm đến khách hàng một cách
nhanh nhất. Một trong những giai đoạn quan trọng trong phát triển phần mềm là
kiểm thử cũng được quan tâm. Vì vậy, việc xây dựng một phương pháp kiểm thử
để tìm kiếm và đưa ra các lỗi phần mềm sao cho nhanh nhất là một điều cần thiết.
Điều này giúp Agile cải thiện chất lượng sản phẩm sớm hơn và việc tìm kiếm và
sửa lỗi cũng diễn ra nhanh hơn và giảm thiểu được nguy cơ tìm thấy lỗi ở giai đoạn
cuối của quá trình phát triển phần mềm.
Việc xây dựng phương pháp kiểm thử hướng ngữ cảnh trong phát triển phần
mềm linh hoạt được đặt ra. Kiểm thử hướng ngữ cảnh là sự kết hợp giữa các kỹ
năng, kỹ thuật và khả năng phán đoán phù hợp với bối cảnh, nó là một cách tiếp
cận chứ không phải là một kỹ năng. Còn trong phát triển phần mềm linh hoạt giảm
thiểu lãng phí, hạn chế tài liệu và đưa sản phẩm đến tay người dùng sớm. Vì vậy
việc sử dụng công cụ biểu đồ tư duy Xmind Zen giúp phác thảo những yêu cầu
người dùng và quản lý các công việc trong mỗi giai đoạn trong Agile. Cùng với đó,
việc xây dựng ví dụ thử nghiệm phương pháp kiểm thử này, đưa ra các đánh giá về
ưu điểm và nhược điểm của phương pháp.
Agile ra đời để phản ứng trong bối cảnh phát triển phần mềm gặp nhiều thử
thách với các phương pháp phát triển truyền thống theo mô hình thác nước hoặc
dựa theo kế hoạch. Agile là phương thức tiếp cận lặp đi lặp lại để quản lý dự án và
phương thức này khuyến khích sự thay đổi khi phát triển dự án và đưa sản phẩm
đến tay người dùng sao cho nhanh nhất. Trong khi các phương pháp truyền thống,
các công việc được thực hiện tuần tự theo các bước trong kế hoạch từ phân tích
yêu cầu chuẩn bị tài liệu, tiếp theo là thiết kế, phát triển và kiểm thử phần mềm.
Tuy nhiên, bắt đầu từ giữa những năm 90 các phương pháp truyền thống trên thực
tế xảy ra rất nhiều rủi ro mà không thể lường trước được, một trong những nguyên
nhân chính đến từ các yêu cầu thay đổi của khách hàng và khách hàng ngày càng
không thể xác định được nhu cầu của họ trước, và trong quá trình xây dựng phần
mềm. Khi yêu cầu thay đổi sẽ đối mặt với việc toàn bộ các bước trong kế hoạch
phải tiến hành lại, dẫn đến các kết quả là sản phẩm làm ra không đúng yêu cầu của
khách hàng, bị quá thời gian bàn giao hoặc vượt quá ngân sách.[1]
Vào tháng 2 năm 2001, mười bảy nhà phát triển phần mềm đã gặp gỡ và họp với
nhau tại bang Utah, Hoa Kỳ để thảo luận về các phương pháp phát triển phần mềm.
Họ đã cùng nhau cho ra đời bản Tuyên ngôn Agile để định nghĩa cách hiểu về phát
triển phần mềm linh hoạt.[1]
Cùng với việc ra đời của Tuyên ngôn Agile vào năm 2001, kể từ đó nhiều phương
pháp phát triển phần mềm linh hoạt đã xuất hiện như Scrum, Kanban, Extreme
programming, ...Mục tiêu của các phương pháp này giúp tổ chức trở nên linh hoạt
đáp ứng được các thay đổi yêu cầu từ phía khách hàng và giao sản phẩm nhanh
chóng đến khách hàng. Chính vì vậy, việc kiểm thử trong Agile cũng đóng góp một
vai trò quan trọng. Ngoài những vai trò là kiểm tra tìm kiếm các lỗi phần mềm, ứng
dụng hoặc thẩm định liệu phần mềm đã đáp ứng được các yêu cầu kĩ thuật và yêu
cầu nghiệp vụ không. Trong Agile, việc kiểm thử sẽ được diễn ra sớm và thường
xuyên, có thể bắt đầu khi bắt đầu dự án với sự tích hợp liên tục giữa giai đoạn phát
triển và kiểm thử. Điều này giúp Agile cải thiện chất lượng sản phẩm sớm hơn và
cho phép phát triển phần mềm theo chu kỳ ngắn, tìm kiếm và sửa lỗi nhanh hơn.Vì
vậy, việc xây dựng một phương pháp kiểm thử để đáp ứng được các yêu cầu trong
Mục tiêu của đề tài là xây dựng một phương pháp kiểm thử hướng ngữ cảnh
trong phát triển phần mềm linh hoạt. Ngoài ra, đề tài này còn tìm hiểu tổng quan
về phát triển phần mềm linh hoạt và tìm hiểu về công cụ biểu đồ tư duy Xmind
Zen. Sử dụng công cụ này để phát triển phương pháp kiểm thử hướng ngữ cảnh
trong Agile. Sau đó, triển khai, áp dụng phương pháp để xây dựng một website nơi
có thể chia sẻ các bài viết và đánh giá phương pháp này gồm những ưu điểm và
Vì những mục tiêu ở trên, để có thể xây dựng phương pháp kiểm thử hướng
ngữ cảnh trong phát triển phần mềm linh hoạt, đầu tiên ta sẽ tìm hiểu tổng quan
về phương pháp phát triển phần mềm linh hoạt. Sau đó, tìm hiểu về công cụ biểu
đồ tư duy Xmind Zen, những lợi ích và ứng dụng của công cụ để có thể áp dụng
vào phương pháp. Và sau đó, em xây dựng phương pháp kiểm thử hướng ngữ cảnh
trong phát triển phần mềm linh hoạt.
Tiếp theo là xây dựng một website chia sẻ các bài viết về những cuốn sách để
có thể thử nghiệm phương pháp kiểm thử đã xây dựng ở trên. Để xây dựng website
này, ta sẽ sử dụng nodejs với framework express và cở sở dữ liệu mongoDB.
Cuối cùng, từ những thử nghiệm về phương pháp ở trên, em sẽ đánh giá phương
pháp về những ưu điểm và nhược điểm của phương pháp, đưa ra các giải pháp cho
Ngoài phần tóm tắt nội dụng đồ án và giới thiệu đồ án thì các phần còn lại đồ
án tốt nghiệp sẽ được trình bày với bố cục như sau:
1. Chương 2: Trình bày tổng quan và vai trò của kiểm thử trong phát triển phần
mềm linh hoạt. Đặc biệt hơn là tìm hiểu và xây dựng phương pháp kiểm thử
hướng ngữ cảnh trong phát triển phần mềm linh hoạt, khảo sát và xây dựng
2. Chương 3: Trình bày các công nghệ sẽ sử dụng để trong phương pháp kiểm
thử và xây dựng website.
3. Chương 4: Trình bày về thiết kế kiến trúc, các thiết kế tổng quan và thiết kế
chi tiết gói. Cùng với đó, trình bày thiết kế chi tiết về cơ sở dữ liệu, thiết kê
giao diện và thực hiện công việc kiểm thử chức năng và kiểm thử phi chức
năng với website đã xây dựng.
4. Chương 5: Trình bày các đánh giá về những ưu điểm và nhược điểm của
phương pháp; đưa ra các giải pháp cho phương pháp kiểm thử này.
5. Chương 6: Đưa ra kết luận và hướng phát triển trong tương lai.
trong phát tiển phần mềm linh hoạt
Phát triển phần mềm linh hoạt là một phương thức thực hiện các dự án công
nghệ phần mềm, phương thức này khuyến khích sự thay đổi khi phát triển dự án và
đưa sản phẩm đến tay người dùng nhanh nhất. Trong Agile sẽ phân phối công việc
theo từng bước nhỏ, với cách tiếp cận lặp đi lặp lại để quản lý dự án. Các yêu cầu,
kế hoạch và kết quả được đánh giá liên tục nên các nhóm phát triển có cơ chế tự
nhiên để phản ứng với sự thay đổi một cách nhanh chóng.Với trọng tâm việc giao
tiếp cởi mở, hợp tác, thích ứng và tin tưởng giữa các thành viên trong nhóm.
Có rất nhiều phương pháp Agile với các hướng tiếp cận rất khác nhau. Bên cạnh
các cách thức tổ chức công việc, thiết lập quy trình, các phương pháp Agile còn
nghiên cứu và đưa vào sử dụng các công cụ và kỹ thuật như công cụ tích hợp, kiểm
thử đơn vị, mẫu thiết kế, tái cấu trúc,... để đảm bảo gia tăng tính linh hoạt. Các
phương pháp này chia sẻ nhiều đặc trưng giống nhau cộng tác nhóm chặt chẽ, tổ
chức các nhóm tự quản, liên chức năng, tính đáp ứng cao trong suốt vòng đời dự
Một số đặc điểm trong phát triển phần mềm linh hoạt Agile:
•Tính lặp: Dự án sẽ được thực hiện trong các phân đoạn lặp đi lặp lại. Các phân
đoạn này thường có khung thời gian ngắn (từ một đến bốn tuần). Trong mỗi
phân đoạn này, nhóm phát triển thực hiện đầy đủ các công việc cần thiết như
lập kế hoạch, phân tích yêu cầu, thiết kế, triển khai, kiểm thử để cho ra các
phần nhỏ của sản phẩm.
•Tính tăng dần: Cuối các phân đoạn, nhóm phát triển thường cho ra các phần
nhỏ của sản phẩm cuối cùng. Các phần nhỏ này thường là đẩy đủ, có khả năng
chạy tốt, được kiểm thử cẩn thận và có thể sử dụng ngay. Theo thời gian, phân
đoạn này tiếp nối phân đoạn kia, các phần chạy được này sẽ được tích lũy, lớn
dần lên cho tới khi toàn bộ yêu cầu khách hàng được thỏa mãn.
•Tính thích ứng: Do các phân đoạn chỉ kéo dài trong một khoảng thời gian ngắn
và việc lập kế hoạch cũng được điều chỉnh liên tục, nên các thay đổi trong quá
trình phát triển đều có thể được đáp ứng theo cách thích hợp.
•Nhóm tự tổ chức và liên chức năng: Cấu trúc nhóm Agile thường là liên chức
năng và tự tổ chức. Theo đó các nhóm này tự thực hiện lấy việc phân công
công việc mà không dựa trên các mô tả cứng về chức danh hay làm việc dựa
trên một sự phân cấp rõ ràng trong tổ chức. Các nhóm này cộng tác với nhau
để đề ra quyết định, theo dõi tiến độ, giải quyết các vấn đề mà không chờ
mệnh lệnh của các cấp quản lý. Nhóm tự tổ chức có nghĩa là nó đã đủ kĩ năng
cần thiết cho việc phát triển phần mềm, do vậy nó có thể được trao quyền tự
ra quyết định, tự quản lý và tổ chức lấy công việc của chính mình để đạt được
•Quản lý quy trình thực nghiệm: Các nhóm Agile ra các quyết định dựa trên
các dữ liệu thực tiễn thay vì tính toàn lý thuyết hay các tiền giả định. Việc
phân nhỏ dự án thành các phân đoạn ngắn góp phần gia tăng các điểm mốc
để nhóm phát triển thu thập dữ kiện cho phép điều chỉnh các chiến lược phát
•Giao tiếp trực diện: Một số mô hình phát triển phần mềm dựa trên rất nhiều
công việc giấy tờ, từ việc thu thập yêu cầu người dùng, viết đặc tả hệ thống,
các thiết kế hệ thống, . . . Agile không phản đối công dụng của công việc tài
liệu hóa nhưng đánh giá cao hơn giao tiếp trực diện thay vì gián tiếp thông
qua giấy tờ. Về yêu cầu của khách hàng, agile khuyến khích nhóm phát triển
trực tiếp nói chuyện với khách hàng để hiểu rõ hơn về cái khách hàng thực sự
cần, thay vì phụ thuộc nhiều vào các loại văn bản.
•Phát triển dựa trên giá trị: Một trong các nguyên tắc cơ bản của Agile là phần
mềm chạy tốt là thước đo của tiến độ. Nguyên tắc này giúp nhóm dám loại bỏ
đi công việc dư thừa không trực tiếp mang lại giá trị cho sản phẩm. Để vận
hành được cơ chế làm việc dựa trên giá trị, nhóm Agile thường làm việc trực
tiếp và thường xuyên với khách hàng, cộng tác trực tiếp với họ để biết yêu cầu
nào có độ ưu tiên cao hơn, mang lại giá trị hơn hơn sớm nhất có thể cho dự án.
Nhờ đó các dự án Agile thường giúp khách hàng tối ưu hóa được giá trị của
Vào tháng 2 năm 2001, 17 nhà phát triển đã đưa ra bản tuyên ngôn Agile cho
phát triển phần mềm linh hoạt. Tuyên ngôn Agile đã tổng kết ra một số giá trị và
nguyên tắc chung, phổ quát cho tất cả các phương pháp về linh hoạt đang tồn tại
độc lập tại thời điểm đó. Tuyên ngôn này đưa ra bốn giá trị cốt lõi cho phép các
nhóm đạt được hiệu suất cao. Nội dung của tuyên ngôn Agile bao gồm:
•Cá nhân và sự tương tác hơn quy trình và công cụ: Đặt trọng tâm vào con
người và sự tương hỗ giữa những thành viên trong team. Nếu dự án có những
thành viên có năng lực, chịu làm việc cùng nhau thì sẽ mang đến thành công
cho dự án. Quy trình là các thủ tục cần thiết để phát triển dự án như thiết kế,
sau đó đến lập trình, rồi kiểm tra QA/QC. Hay để đưa ra một chức năng nào
đó cần phải có sự đồng ý của bộ phận QA/QC. Quy trình này do mỗi công
ty quy định và bắt buộc các nhân viên khi tham gia vào dự án phải tuân thủ.
Công cụ là phần mềm được sử dụng trong dự án như: Phần mềm quản lý công
việc, phần mềm quản lý source code, phần mềm quản lý lỗi. . . Có rất nhiều
công cụ được sử dụng để hỗ trợ vận hành.
•Sản phẩm xài được hơn là tài liệu đầy đủ: Trong quy trình phát triển phát
triển phần mềm, việc tạo và cập nhật các tài liệu về sản phẩm là bắt buộc.
Nhóm Dev không thể hoặc không đồng ý tiến hành công việc nếu không có
tài liệu đặc tả về yêu cầu, thiết kế hệ thống. Nhóm test thì yêu cầu tài liệu về
sản phẩm đề có thể viết các trường hợp kiểm thử và kiểm thử hệ thống được.
Nhóm QA yêu cầu tất cả các tài liệu phải được viết trước khi sản phẩm được
giao cho khách hàng nếu không thì không đủ điều kiện để giao sản phẩm cho
khách hàng. Đứng dưới góc độ khách hàng thì khách hàng chỉ quan tâm đến
sản phẩm có hoạt động tốt hay không. Trong khi việc tạo và cập nhật tài liệu
mất nhiều thời gian. Vậy tại sao mình phải tập trung quá nhiều cho việc không
cần thiết mà không dành thời gian đó dể trao đổi để hiểu thêm về công việc
phải làm. Đừng hiểu lầm là làm Agile là không cần viết tài liệu mà ý tưởng ở
đây là chỉ cần viết những tài liệu mà mọi người cần đọc.
•Cộng tác với khách hàng hơn đàm phán hợp đồng: Các tuyên ngôn “khách
hàng là thượng đế” hay “khách hàng luôn đúng”. Nhưng khách hàng cũng có
rất nhiều loại khách hàng khác nhau. Có khách hàng am hiểu về công nghệ,
có người không. Có người suy nghĩ nhất quán lại có người thay đổi liên tục,
. . . và cách duy nhất để có thể làm việc tốt là phải cộng tác với khách hàng để
hiểu được khách hàng muốn gì và cần gì để có thể tư vấn và điều chính thay
vì chỉ dựa vào những điều đã quy định trong hợp đồng.
•Phản hổi với các thay đổi quan trọng hơn bám theo kế hoạch: Có một điểm
chung là hầu hết những dự án đều có sự thay đổi điều chỉnh khi triển khai.
Sự thay đổi có thể thay đổi về tài liệu, nhân sự, deadline hay phương thức
làm viêc, . . . mặc dù kế hoạch đã được định ra rõ từ đầu. Agile không khuyến
khích cho sự thay đổi nhưng khuyến khích chúng ta tập thích nghi với thay
đổi. Một trong các nguyên tắc cơ bản của Agile là phần mềm chạy tốt chính
là thước đo của tiến độ. Nguyên tắc này giúp nhóm dám loại bỏ đi các công
việc dư thừa không trực tiếp mang lại giá trị cho sản phẩm. Để vận hành cơ
chế “làm việc dựa trên giá trị”, nhóm agile thường làm việc trực tiếp thường
xuyên với khách hàng, cộng tác trực tiếp với họ để biết yêu cầu nào có độ ưu
tiên cao hơn, mang lai giá trị sớm nhất có thể cho dự án. Nhờ đó mà các dự
án Agile thường giúp khách hàng tối ưu được giá trị của dự án. Một cách gần
trực tiếp, Agile gia tăng đáng kể độ hài lòng của khách hàng.
Có nghĩa là các điều mục bên phải vẫn còn giá trị, nhưng trong Agile sẽ đánh giá
cao hơn mục ở bên trái.[1]
Từ bản tuyên ngôn Agile, các nhà phát triển đã đưa ra mười hai nguyên tắc nhằm
hỗ trợ thực hành và vận dụng các nguyên tắc vào trong thực tiễn. Mở đầu của mười
hai nguyên tắc là sự hài lòng của khách hàng được đặt lên hàng đầu thông qua việc
phân phối sớm và liên tục. Nguyên tắc thứ hai là chào mừng các yêu cầu thay đồi,
ngay cả trong giai đoạn cuối của dự án. Nguyên tắc thứ ba là phần mềm chạy được,
được giao thường xuyên từ vài tuần đến vài tháng với ưu tiên khoảng thời gian
ngắn hơn. Nguyên tắc thứ tư là dự án được xây dựng bởi các cá nhân có động lực
và những người đáng tín cậy cung cấp cho họ môi trường với sự hỗ trợ cần thiết và
những đãi ngộ cần thiết để hoàn thành công việc.Nguyên tắc thứ năm là người làm
bên mảng kinh doanh và người phát triển phần mềm nên gần gũi và hợp tác hằng
ngày. Nguyên tắc thứ sáu là trao đổi trực tiếp mặt đối mặt là phương pháp hiệu quả
nhất để truyền đạt thông thông tin. Nguyên tắc thứ bảy là phần mềm chạy được là
thước đo của tiến độ. Nguyên tắc thứ tám là phát triển bền vững, có thể duy trì một
tốc độ không đổi. Nguyên tắc thứ chín là liên tục chú ý đến các kỹ thuật mới và
thiết kế mới. Nguyên tắc thứ mười là đơn giản hóa - nghệ thuật việc tối đa hóa khối
lượng công việc chưa hoàn thành là điều cần thiết. Nguyên tắc thứ mười một là
kiến trúc, yêu cầu và thiết kế tốt tạo nên nhóm tự tổ chức tốt. Nguyên tắc cuối cùng
là thường xuyên phản ảnh việc làm thế nào để nhóm làm việc hiệu quả hơn và điều
chỉnh sao cho phù hợp. Thực hiện mười hai nguyên tắc này trong Agile sẽ giúp tổ
chức của bạn linh hoạt để có thể thích ứng với những thay đổi trong quá trình xây
dựng dự án, giảm lãng phí trong hệ thống của bạn để bạn có thể tiết kiệm chi phí
hơn, cuối cùng là tạo một môi trường làm việc lành mạnh, nơi mọi người đều cảm
thấy được đánh giá cao và do đó góp phần đáp ứng tốt hơn với các yêu cầu từ phía
Cùng với sự ra đời của bản Tuyên Ngôn Agile 2001 đánh dấu sự ra đời của Agile
như một phương pháp luận. Kể từ đó, nhiều phương pháp phát triển phần mềm linh
hoạt đã xuất hiện như Scrum, EXtreme Programming (XP), Kanban, ...Ở đây em
sẽ giới thiệu một số phương pháp trong phát triển phần mềm linh hoạt:
Scrum là một phương pháp phát triển phần mềm linh hoạt (Agile) tập trung
đặc biệt vào việc quản lý các công việc trong môi trường phát triển dựa theo
nhóm. Scrum dựa trên sự học hỏi liên tục và điều chỉnh đối với các yếu tố biến
động. Nó thừa nhận rằng nhóm không biết mọi thứ khi bắt đầu dự án và sẽ
phát triển nhờ kinh nghiệm. Scrum được cấu trúc để giúp các nhóm thích ứng
một cách tự nhiên với các điều kiện thay đổi và yêu cầu của người dùng, với
tính năng ưu tiên lại được tích hợp trong quy trình và chu kỳ phát hành ngắn
để nhóm của bạn có thể liên tục học hỏi và cải tiến.
Scrum gồm ba vai trò bao gồm Product Owner (chủ sản phẩm), Scrum Master
và Development Team (Đội sản xuất hay nhóm phát triển.
Xác định ba thành phần trong Scrum gồm Product Backlog, Sprint Backlog,
Sprint giống như một công cụ để giải quyết một vấn đề.[4]
XP là một phương pháp phát triển phần mềm hướng đến việc năng cao chất
lượng phần mềm và khả năng đáp ứng với thay đổi yêu cầu người dùng. XP
chủ trương đưa ra các bản phát hành thường xuyên thông qua các chu trình
phát triển ngắn. Việc này là để nâng cao năng suất và tạo ra những thời điểm
để tiếp nhận những yêu cầu người dùng mới.
Các hoạt động trong XP bao gồm viết mã, kiểm thử, lắng nghe, thiết kế.
Các yêu cầu nghiệp vụ được thu nhập theo các story. Ở phương pháp này các
bản phát hành sẽ dựa trên các vòng đời ngắn hơn được gọi là Iteration với mỗi
lần lặp là 14 ngày. Mỗi lần lặp bao gồm các giai đoạn như lập trình, kiểm thử
đơn và kiểm thử hệ thống. [5]
Kanban là một khuôn khổ phổ biến được sử dụng để triển khai phát triển linh
hoạt và DevOps. Nó yêu cầu giao tiếp thời gian thực hiện về năng lực và sự
minh bạch hoàn toàn của công việc. Các hạng mục công việc được thể hiện
trực quan trên bảng Kanban, cho phép các thành viên trong nhóm xem trạng
thái của từng hạng mục công việc bất cứ lúc nào.
Công việc của tất cả các đội Kanban xoay quanh một bảng Kanban, một công
cụ được sử dụng để hình dung công việc và tối ưu hóa quy trình công việc
Vai trò của kiểm thử trong phát triển phần mềm linh hoạt cũng giống như vai
trò của kiểm thử trong phát triển phần mềm truyền thống là kiểm tra tìm kiếm các
lỗi của phần mềm, ứng dụng hoặc xác minh, thẩm định liệu phần mềm đó đã đáp
ứng được các yêu cầu kỹ thuật và yêu cầu nghiệp vụ hay không. Từ đó tạo nên một
sản phẩm chất lượng mang tính thực tiễn và đạt hiệu quả cao.
Vai trò của giai đoạn kiểm thử giúp nhà phát triển:
•Hiệu quả về chi phí: giúp nhanh chóng tìm kiếm phát hiện lỗi của phần mềm,
giúp giảm chi phí sửa chữa
•Trách nhiệm về bảo mật: giúp sản phẩm hoàn thiện nhất, tránh những lỗ hổng
bảo mật và tăng độ tin cậy cho người dùng.
•Trách nhiệm về chất lượng sản phẩm: đảm bảo độ tin cậy, hiệu suất; đảm bảo
được các yêu cầu, tính năng cần thiết của phần mềm. Khi sản phẩm được đưa
đến khách hàng phải là một sản phẩm đạt đủ các yêu cầu của khách hàng về
giao diện, cấu trúc, tính năng, ... và đảm bảo không có bất cứ lỗi nào trên sản
•Niềm tin của khách hàng: sản phẩm càng hoàn thiện sẽ tạo ra những trải
nghiệm người dùng tốt, từ đó càng tạo được niềm tin và uy tín với khách
Ngoài ra, kiểm thử trong Agile là thực hành kiểm thử tuân theo các quy tắc và
nguyên tắc của phát triển phần mềm linh hoạt. Cho nên, việc kiểm tra cần diễn ra
sớm và thường xuyên, kiểm thử Agile có thể bắt đầu ngay khi bắt đầu dự án với sự
tích hợp giữa giai đoạn phát triển và giai đoạn kiểm thử, thay vì đợi quá trình phát
triển kết thúc mới bắt đầu quá trình kiểm thử, thì trong Agile kiểm thử được diễn ra
liên tục khi các tính năng được thêm vào. Vậy nên, kiểm thử Agile mang lại được
các lơi ích khác so với việc kiểm thử trong các phương pháp truyền thống khác là:
•Kiểm thử trong Agile cải thiện chất lượng sản phẩm và cho phép phát triển
phần mềm theo chu kỳ ngắn.
•Việc tìm kiếm và sửa lỗi được xảy ra nhanh hơn. Vì vậy, giảm nguy cơ tìm
thấy lỗi vào cuối quá trình kiểm thử.
•Làm hài lòng khách hàng bằng các cung cấp các bản phát hành thường xuyên.
Vì vậy, sẽ cải thiện được tỷ lệ giữ chân khách hàng.
•Quản lý phạm vi của mỗi bản phát hành, điều đó sẽ giúp ưu tiên các tính năng
cho mỗi lần lặp lại và phân phối các tính năng quan trọng nhất. [7]
Kiểm thử hướng ngữ cảnh là sự kết hợp của các kỹ năng, kỹ thuật và khả năng
phán đoán phù hợp với bối cảnh của dự án. Nó là tập hợp các tiêu chẩn về phương
pháp đánh giá. Nó được thực hiện dựa trên bảy nguyên tắc. Nguyên tắc đầu tiên là
giá trị của bất kỳ hoạt động nào cũng phụ thuộc vào bối cảnh của nó. Thứ hai là
có nhiều phương pháp tốt, nhưng không có phương pháp nào là tốt nhất. Thứ ba
là mọi người làm việc cùng nhau là phần quan trọng nhất trong bối cảnh của bất
kỳ dự án nào. Thứ tư là các dự án diễn ra theo thời gian theo những cách thường
không thể đoán trước được. Thứ năm là sản phẩm là một giải pháp, nếu vấn đề
không được giải quyết, sản phẩm sẽ không được hoạt động. Thứ sáu là kiểm thử
phần mềm là một quá trình đầy thử thách đối với trí tuệ. Cuối cùng là chỉ thông
qua sự phán đoán và kỹ năng, hợp tác thực hiện toàn bộ dự án, chúng ta có thể làm
việc phù hợp vào đúng thời điểm để kiểm tra hiệu quả sản phẩm của mình. Kiểm
thử hướng ngữ cảnh là một cách tiếp cận, không phải là một kỹ thuật.[8]
Các dự án được xây dựng theo các nguyên tắc trong Agile với các yêu cầu, kế
hoạch và kết quả được đánh giá liên tục được thực hiện trong các phân đoạn lặp đi
lặp lại. Các dự án này cho phép sự thay đổi yêu cầu người dùng nên rất khó để lên
kế hoạch cho dự án, chỉ có thể lên kế hoạch cho mỗi giai đoạn của dự án. Ngoài ra,
các dự án này cũng gặp khó khăn trong việc thu thập tài liệu đầy đủ và chính xác
các yêu cầu người dùng.
Kiểm thử Agile là một phương thức kiểm tra phần mềm theo các quy tắc và
nguyên tắc trong phát triển phần mềm Agile. Trong Agile ủng hộ cách tiếp cận
giảm thiểu lãng phí, đưa sản phẩm đến với khách hàng một cách nhanh nhất, và
trong kiểm thử theo hướng ngữ cảnh cũng vậy. Kiểm thử Agile có thể thực hiện
ngay từ thời điểm bắt đầu dự án với sự tích hợp giữa giai đoạn phát triển và giai
đoạn kiểm thử. Kiểm thử trong Agile thường sử dụng các bài kiểm tra đơn vị. Trong
Agile thường đề xuất phương pháp kiểm thử theo mô hình vòng đời tiến hóa hoặc
xoắn ốc với tài liệu tối thiểu, hầu hết người kiểm thử theo hướng ngữ cảnh sẽ cảm
thấy thoải mái khi làm việc với mô hình này. .
2. Giai đoạn lặp lại xây dựng (Construction Iteration)
Giai đoạn tiếp theo là lặp lại xây dựng, hầu hết quá trình kiểm tra phần mềm
sẽ được thực hiện ở giai đoạn này. Trong giai đoạn này được cho tập hợp
các lần lặp lại việc test để tìm ra giải pháp trong mỗi vòng lặp. Giai đoạn
này được chia thành hai phần là confirmatory testing (kiểm thử xác nhận) và
investigative testing (kiểm thử điều tra). Confirmatory testing tập trung vào
việc xác minh rằng hệ thống đã đáp ứng mục đích của yêu cầu người dùng hay
chưa. Trong khi Investigative testing phát hiện ra các vấn đề mà confirmatory
testing đã bị bỏ sót.
Từ biểu đồ Xmind Zen phác thảo chức năng ở giai đoạn đầu tiên sẽ cho biết
số vòng lăp và các chức năng của hệ thống cần thực hiện tại mỗi vòng lặp.
Sau đó dựa vào các tài liệu phân tích chức năng về yêu cầu người dùng để xây
dựng kế hoạch kiểm thử.
Giai đoạn tiếp theo là giai đoạn phát hành hay giai đoạn chuyển phase. Giai
đoạn này là giai đoạn kiểm thử toàn bộ hệ thống và kiểm thử chấp nhận hệ
thống. Để hoàn thành giai đoạn thử nghiệm cuối cùng này không có bất kỳ trở
trở ngại nào, thì các tester phải kiểm tra sản phẩm nghiêm ngặt khi nó đang
trong giai đoạn thứ hai lặp lại xây dựng.
Giai đoạn cuối cùng là giai đoạn hoàn thành sản phẩm và đưa sản phẩm đến
Với phương pháp kiểm thử được nếu ở trên, em sẽ xây dựng website để thử
nghiệm phương pháp này. Dưới đây là biểu đồ Xmind Zen phác thảo các yêu cầu
Ở đây, em sẽ xây dựng một website là nơi có thể chia sẻ cảm nhận của bản
thân về những cuốn sách từ đời sống, sách kinh doanh hay những cuốn tiểu thuyết.
Trang web này có hai tác nhân chính là guest (khách) và user (người dùng). Guest
là người dùng chưa đăng nhập hệ thống, còn user là người dùng đã đăng nhập vào
hệ thống có các quyền như tạo bài viết, ...
Đối với các yêu cầu dành cho khách: Khách là người dùng chưa đăng nhập vào
hệ thống, khách có thể thực hiện các chức năng đăng ký tài khoản vào hệ thống
hoặc đăng nhập vào hệ thống, có thể xem và tìm kiếm các bài viết.
Đối với các yêu cầu dành cho người dùng: Khi người dùng đã đăng nhập vào hệ
thống có thể thực hiện các chức năng quản lý thông tin cá nhân của người dùng và
quản lý bài viết. Đối với chức năng quản lý thông tin cá nhân, người dùng có thể
xem và chỉnh sửa thông tin cá nhân. Còn đối với chức năng quản lý bài viết, người
dùng có thể tạo, xem, chỉnh sửa và xóa bài viết, có thể bình luận ở mỗi bài viết.
Từ các yêu cầu người dùng được phác thảo ở biểu đồ 2.4. Dưới đây là sơ đồ
Xmind Zen phác thảo những chức năng chính của website, cũng như cho biết số
vòng lặp và công việc ở mỗi vòng lặp được thực hiện ở giai đoạn lặp lại xây dựng.
Đối với user story của các chức năng đăng ký tài khoản, xem chi tiết bài viết,
xem thông tin cá nhân, xem danh sách bài viết của tôi, chỉnh sửa bài viết và xóa bài
viết cũng tương tự với các user story của các chức năng đăng nhập tài khoản, tìm
kiếm bài viết, tạo bài viết được viết ở trên.
Trong các user story có sự tham gia của người dùng như các chức năng đăng
nhập hay đăng ký, thì cần có sự thông báo cho người dùng trong các trường
hợp khi người dùng nhập sai.
Trong tất cả các chuỗi sự kiện của các user story, đối với các bước có thao tác
với cơ sở dữ liệu, nếu lỗi trong quá trình kết nối hoặc thao tác, cần có thông
báo lỗi tương ứng để người dùng nhận biết là lỗi liên quan đến cơ sở dữ liệu,
chứ không liên quan tới người dùng.
Các chức năng khi được thiết kế sao cho dễ sử dụng. Nếu xảy ra lỗi trong quá
trình thao tác cần phải thông báo lỗi, để biết và sửa lỗi.
Giao diện được thiết kế đơn giản, dễ thao tác và dễ sử dụng với tất cả người
dùng. Giao diện trực quan, dễ dàng thấy được các nút cũng như các vị trí nhập
để người dùng thuận tiện hơn trong việc sử dung.
Các chức năng, các thành phần được phân chia riêng biệt, độc lập với nhau để
có thể dễ dàng bảo trì chức năng, thành phần mà không ảnh hưởng đến toàn
Với chương 2 đã xây dựng phương pháp kiểm thử hướng ngữ cảnh trong phát
triển phần mềm linh hoạt. Cùng với đó, khảo sát và phân tích các chức chính của
website để thử nghiệm phương pháp kiểm thử này. Ở chương tiếp theo sẽ trình bày
công nghệ em đã lựa chọn trong phương pháp kiểm thử cũng như trong xây dựng
Xmind Zen là công cụ cho phép phác thảo ý tưởng hoặc lập kế hoạch cho các
dự án bằng cách vẽ biểu đồ tư duy và sơ đồ. Đây là công cụ lý tưởng để quản lý
danh sách, tổ chức thông tin và ý tưởng, quản lý mục tiêu và nhiệm vụ.[10]
. Nodej không phải là một ngôn ngữ, thư viện hay một framework, mà nodejs là
mã nguồn được xây dựng trên nền tảng của ngôn ngữ V8 javascript Engine. Nhờ
Nodejs mà việc xây dựng các ứng dụng Web trở nên đơn giản và dễ dàng hơn rất
nhiều. Ngoài ra, Nodejs còn được biết tới là một mã nguồn mở và là một môi trường
cho các máy chủ và ứng dụng mạng. Nodejs có khả năng xử lý nhiều kết nối đồng
thời một cách dễ dàng. Ngoài ra, nodejs là mã nguồn mở có thể chạy trên nhiều
nên tảng hệ điều hành khác nhau nên được rất nhiều lập trình viên sử dụng.
Ưu điểm đầu tiên của nodejs về tốc độ thực thi và xử lý dữ liệu nhanh chóng,
khả năng tái tạo sử dụng mã cao và mã dễ đọc viết và bảo trì. Ưu điểm tiếp theo
của nodejs là khả năng mở rộng. [11]
Mongodb là một hệ quản trị cơ sở dữ liệu NoSQL mã nguồn mở đa nền tảng viết
bằng C++. Bản ghi trong MongoDB được lưu trữ dưới dạng văn bản (document), là
một cấu trúc dữ liệu bao gồm các cặp giá trị và trường tương tự như các đối tượng
•Lưu trữ dự liệu dưới dạng json, mỗi một collection sẽ có các kích cỡ và các
document khác nhau nên sẽ rất linh hoạt cho việc lưu trữ dự liệu.
•Khác với các hệ quản trị cơ sở dữ liệu quan hệ thì dữ liệu trong đây không có
sự ràng buộc và không có yêu cầu tuân theo khuôn khổ nhất định nên các thao
tác được thực hiện rất nhanh.
•Tiếp đến cũng là về hiệu suất, khi có truy vấn dữ liệu thì các record được
cached lên bộ nhớ ram, để lượt truy vấn sau diễn ra nhanh hơn mà không cần
•Rất dễ mở rộng, MongoDB dễ dàng mở rộng hệ thống bằng cách thêm node
vào cluster – cụm các node chứa dữ liệu giao tiếp với nhau.
Đối với những ưu điểm trên thì khi lựa chọn MongoDB thì các ứng dụng yêu cầu
thời gian thực, phản hồi nhanh, tương tác thường xuyên thì MongoDB là lựa chọn
rất phù hợp. Ngoài ra MongoDB còn là lựa chọn thích hợp cho một số hệ thống
yêu cầu lưu trữ dữ liệu lớn, yêu cầu truy vấn nhanh như các hệ thống BigData. [12]
Expressjs là một framework được xây dựng trên nền tảng nodejs. Nó cung cấp
các tính năng mạnh mẽ để phát triển web và mobile. Expressjs hỗ trợ các method
HTTP và midleware tạo ra API vô cùng mạnh mẽ.
Express js là một Framework nhỏ, nhưng linh hoạt được xây dựng trên nền
tảng của Nodejs. Nó cung cấp các tính năng mạnh mẽ để phát triển web hoặc
mobile.Expressjs hỗ trợ các method HTTP và midleware tạo ra API vô cùng mạnh
mẽ và dễ sử dụng.
Một số chức năng chính của Expressjs như: thiết lập các lớp trung gian để trả
về các HTTP request, định nghĩa router cho phép sử dụng với các hành dộng khác
nhau trên phương thức HTTP và url, cho phép trả về các trang HTML dựa vào các
Express.js có thể giúp làm giảm một nửa thời gian viết mã mà vẫn xây dựng lên
các ứng dụng web hiệu quả. Không chỉ trợ giúp về mặt thời gian Expressjs còn làm
giảm những áp lực cần thiết để xây dựng với sự trợ giúp của các tính năng khác
nhau của nó.Express js còn cung cấp một phần mềm trung gian đảm nhận nhiệm
vụ đưa ra các quyết định để phản hồi chính xác những yêu cầu của khách hàng.[13]
•Phát triển máy chủ nhanh chóng: Expressjs cung cấp nhiều tính năng dưới
dạng các hàm để dễ dàng sử dụng ở bất kỳ đâu trong chương trình. Điều này
đã loại bỏ nhu cầu viết mã từ đó tiết kiệm được thời gian.
•Phần mềm trung gian Middleware: Đây là phần mềm trung gian có quyền truy
cập vào cơ sở dữ liệu, yêu cầu của khách hàng và những phần mềm trung gian
khác. Phần mềm Middleware này chịu trách nhiệm chính cho việc tổ chức có
hệ thống các chức năng của Express.js.
•Định tuyến - Routing: Express js cung cấp cơ chế định tuyến giúp duy trì trạng
thái của website với sự trợ giúp của URL.
•Tạo mẫu - Templating: Các công cụ tạo khuôn mẫu được Express.js cung cấp
cho phép các nhà xây dựng nội dung động trên các website bằng cách tạo dựng
các mẫu HTML ở phía máy chủ.
•Gỡ lỗi - Debugging: Để phát triển thành công các ứng dụng web không thể
thiết đi việc gỡ lỗi. Giờ đây với Expressjs việc gỡ lỗi đã trở nên dễ dàng hơn
nhờ khả năng xác định chính xác các phần ứng dụng web có lỗi.
Trong khi phát triển và xây dựng chức năng, em còn sử dụng template của express là handlebar để xây dựng giao diện người dùng và sử dụng thư viện mongoose
của javascript để định nghĩa các đối tượng.
Handlebars là một trong nhũng thư viện template engine được kế thừa và phát
huy tính năng của Mustache. Ưu điểm của nó giúp kết hợp với các thành phần
HTML một cách dễ dàng, tạo điều kiện thuận lợi để thực hiện một số phép toán
logic như loop với each, điều kiện if, ...
Mongoose là một Object Document Mapper (ODM). Mongoose cho phép định
nghĩa các Object với một scheme được định nghĩa rõ ràng, được ánh xạ tới một
MongoDB document. Mongoose cung cấp một số lượng đáng kinh ngạc các chức
năng cho việc tạo ra và làm việc với các schema.
Mongoose là một thư viện của Javascript cho phép bạn định nghĩa các schema
với dữ liệu được định kiểu rõ ràng. Khi một schema được định nghĩa, Mongoose
cho phép bạn tạo ra một Model dựa trên một schema cụ thể. Khi bạn đã xác định
các schema và model của mình, mongoose chứa nhiều hàm khác nhau cho phép
bạn xác thực tính hợp lệ, xóa, lưu và truy vấn dữ liệu bằng các hàm mongoDB phổ
Tại chương 3, em đã trình bày các công nghệ em sử dụng cho phương pháp kiểm
thử và trong việc xây dựng website. Ở chương tiếp theo, em sẽ trình bày chi tiết về
xây dựng website gồm thiết kế kiến trúc, thiết kế cơ sở dữ liệu và kiểm thử.
Trong xây dựng website này, website này phát triển trên framework expressjs
với kiến trúc theo mô hình MVC gồm ba phần chính là model, view và controller.
Expressjs giúp cho việc tổ chức các ứng dụng web thành một kiến trúc MVC có
tổ chức hơn. Ở phần View là phần giao diện dành cho người dùng. Phần model là
phần chứa toàn bộ dữ liệu của ứng dụng. Phần controller là bộ phận có nhiệm vụ
xử lý các yêu cầu người dùng đưa đến thông qua view, từ đó đưa ra dữ liệu phù hợp
Luồng xử lý trong mô hình mvc: khi yêu cầu từ máy khách (client) gửi đến
server, controller sẽ thực hiện nhiệm vụ đó là tiếp nhận và xử lý yêu cầu hay sự
kiện. Controller giao tiếp với model trong mvc, sau đó model làm việc với database
đễ hỗ trợ chuẩn bị dữ liệu và gửi lại cho controller. Cuối cùng, khi xử lý xong yêu
cầu thì controller gửi dữ liệu trở lại view và hiển thị cho người dùng trên trình
Lập trình MVC trong Nodejs tức là sẽ tạo các chức năng cho website quy ước
theo mô hình MVC. Theo đó, các việc xử lý request, hiển thị dữ liệu, xử lý dữ liệu
phải tách bạch theo quy định.
Module express-generator đã giúp tạo dự án gần giống với mô hình mvc. Như
folder view chứa các file view để hiển thị dữ liệu giúp người dùng tương tác với
hệ thống. Thành phần model để cung cấp dữ liệu, thực hiện kết nối và thao tác
với dữ liệu trong cơ sở dữ liệu. Controller gồm hai thư mực routers và controller,
trong đó routers đảm nhận việc định nghĩa các đường dẫn và các function xử lý;
còn controller đảm nhận việc thực thi chứa code các function tương ứng được định
Website của em được xây dựng trên framework expressjs, vì vậy biểu đồ gói
UML gồm ba thành phần chính là view, model và controller.
Thiết kế chi tiết gói bao gồm các gói Model, Controller và View
Gói model thì gồm ba class model là book, user, comment phục vụ việc kết nối
và định dạng kiểu dữ liệu cho đối tượng trong cơ sở dữ liệu tương ứng thông qua
Gói controller chứa các class controller phục vụ xử lý dữ liệu và trả về dữ liệu
cho người dùng thông qua view. Trong đó NewsController xử lý những hành động
liên quan đến chức năng tìm kiếm và trả về các dữ liệu ở trang view home. Còn
UserController xử lý các chức năng liên quan đến người dùng như đăng nhập, đăng
ký, chỉnh sửa thông tin cá nhân. Cuối cùng là BookController xử lý các chức năng
liên quan đến tạo bài viết, xem bài viết, chỉnh sửa viết, xóa bài viết và bình luận
Gói view có chức năng là trả dữ liệu từ controller về màn hình của người dùng
và gửi các yêu cầu người dùng đến controller để xử lý.



Đối với kiểm thử các chức năng đăng ký tài khoản, xem chi tiết bài viết, chỉnh
sửa bài viết, xóa bài viết,... cũng tương tự với kiểm thử các chức năng đăng nhập
tài khoản, tìm kiếm bài viết, tạo bài viết và bình luận vào bài viết được trình bày ở
Kiểm thử hiểu suất của chức năng tìm kiếm bài viết .
. Với các yêu cầu phi chức năng khác sẽ được thực hiện kiểm thử tương tư như
Tại chương 4, em đã thực hiện công việc xây dựng website và kiểm thử website
dựa theo phương pháp em đã xây dựng ở chương 2. Ở chương tiếp theo, em sẽ đánh
giá về ưu và nhược điểm của phương pháp cũng như trình bày về những đóng góp
Vì phương pháp này tuân thủ theo các quy tắc và nguyên tắc trong phát triển
phần mềm linh hoạt nên phương pháp này sẽ hạn chế tối đa việc sử dụng các tài
liệu đặc tả hệ thống, phân tích yêu cầu, tài liệu thiết kế, ...Vì vậy, ở phương pháp
này sẽ không tốn quá nhiều thời gian vào việc thu thập thông tin, chuẩn bị và xây
Ở phương pháp, với mỗi vòng lặp trong giai đoạn lặp lại xây dựng của phương
pháp, việc kiểm thử sẽ được diễn ra thường xuyên ngay sau khi code xong. Cho
nên sẽ sớm phát hiện các lỗi xảy ra, thông báo và sửa lỗi ngay trong mỗi vòng lặp
(khác với các phương pháp khác như mô hình thác nước là giai đoạn kiểm thử là
giai đoạn cuối dự án khi đó mới tìm kiếm và sửa lỗi) do đó sẽ tiết kiệm được thời
gian, tiết kiệm được chi phí.
Việc sử dụng công cụ kiểm thử tự động TestComplete có thể thực hiện công việc
test một cách liên tục và lặp lại do đó rút ngắn được thời gian thực hiện kiểm thử
và tăng độ tin cậy. Ngoài ra, nó còn giúp tái hiện lại các test và đặc biệt là các lỗi
Với việc sử dụng công cụ biểu đồ tư duy Xmind Zen trong việc xây dựng phương
pháp sẽ hạn chế được việc sử dụng tài liệu và việc sử dụng biểu đồ này có thể phác
thảo yêu cầu người dùng và phân tích mức độ ưu tiên của yêu cầu người dùng.
Ngoài ra, có thể sử dụng biểu đồ này để thực hiện việc phân chia công việc trong
mỗi vòng lặp. Hơn thế nữa, việc sử dụng biểu đồ này, đối với các kiểm thử viên
sẽ biết được trong giai đoạn này sẽ thực hiện yêu cầu nào của người dùng và chức
năng nào cần kiểm tra trong mỗi vòng lặp.
Đối với phương pháp này sẽ phù hợp với những dự án nhỏ hoặc những dự án
thường xuyên cần thay đổi những yêu cầu người dùng ở bất kỳ giai đoạn nào của
dự án thậm chí là các giai đoạn cuối của dự án. Vì ở mỗi vòng lặp của giai đoạn lặp
lại xây dựng sẽ phát triển để cho ra một phần nhỏ của dự án, theo thời gian phân
đoạn này tiếp nối phân đoạn kia, các phần chạy được sẽ được tiếp nối, lớn dần khi
toàn bộ yêu cầu của khách hàng được đáp ứng. Cho nên có thể điều chỉnh liên tục
nên các thay đổi đều có thể được đáp ứng.
Vì làm việc dựa trên giá trị của sản phẩm nên các công việc liên quan đến các
công việc dư thừa không trực tiếp mang lại giá trị cho sản phẩm như tài liệu đặc tả
hệ thống, tài liệu thiết kế, ...có thể được loại bỏ.Vì vậy mà các công việc liên quan
đến phát triển và kiểm thử sẽ trở nên khó khăn.
Nhược điểm khi sử dụng công cụ biểu đồ tư duy Xmind Zen trong phương pháp
này là công cụ chỉ hỗ trợ việc tạo biểu đồ trên một máy và với một người dùng. Tại
giai đoạn đầu tiên của phương pháp, việc phác thảo yêu cầu người dùng sẽ trở nên
khó khăn khi mà làm việc theo nhóm vì việc phác thảo các yêu cầu người dùng có
thể không được đồng nhất.
Trong giai đoạn lặp lại xây dựng, các vòng lặp được xảy ra liên tục và liên tiếp
nhau, và sẽ phát triển tịnh tiến nên sẽ có rất ít thời gian để chuẩn bị các kế hoạch
kiểm thử, tài liệu kiểm thử.
Đối với phương pháp này, đòi hỏi kiểm thử viên phải có hiểu biết nhất định về
phát triển phần mềm linh hoạt, nắm chắc các kiến thức về kiểm thử và hiểu biết
về công cụ kiểm thử. Ngoài ra, các kiểm thử viên còn có đầy đủ các kĩ năng để tự
quyết định, tự quản lý và tổ chức tốt các công việc của chính mình để đạt hiệu quả
giai đoạn lặp lại xây dựng
Gặp khó khăn việc phân tích yêu cầu, thiết lập các phạm vi và xác định các
tiêu chí đầu ra khi xây dựng các kế hoạch kiểm thử tại mỗi giai đoạn.
Sử dụng biểu đồ Xmind Zen để phác thảo phân tích yêu cầu, xác định các tiêu
chí đầu ra với mỗi chức năng cần test ở mỗi vòng lặp.
Giải pháp này đã giải quyết được vấn đề gặp phải, thực hiện công việc kiểm
thử diễn ra nhanh hơn và chính xác hơn.
Khi phác thảo các yêu người dùng, sẽ phác thảo phân tích yêu cầu người dùng
quá nhiều sẽ dẫn đến gây khó khăn cho việc phân tích phác thảo các chức năng
Khi phác thảo các yêu cầu chính của người dùng hay phác thảo các chức năng
chính của hệ thống, nên phác thảo theo các tác nhân của hệ thống.
Giải pháp này đã giải quyết được vấn đề đã gặp phải, giúp tổ chức các yêu cầu
hệ thông rõ ràng dễ hiểu hơn. Cùng với đó việc phân tích, phác thảo chức năng
của hệ thống cũng dễ dàng hơn.
Tại chương 5, em đã đánh giá ưu điểm và nhược điểm của phương pháp kiểm
thử cũng như đưa ra các khó khăn cũng như hướng giải quyết trong khi thực hiện
đồ án tốt nghiệp. Ở chương 6, em sẽ trình bày về kết luận và hướng phát triển trog
Trong quá trình thực hiện đồ án với mục tiêu xây dựng phương pháp kiểm thử
hướng ngữ cảnh trong phát triển phần mềm linh hoạt. Phương pháp giúp việc thực
hiện giai đoạn kiểm thử tiết kiệm thời gian và việc phát hiện, thông báo và sửa lỗi
diễn ra sớm hơn. Cùng với mục tiêu trên, việc tìm hiểu tổng quan về phát triển phần
mềm linh hoạt cũng như tìm hiểu về biểu đồ tư duy Xmind Zen và áp dụng công
cụ biểu đồ này để xây dựng phương pháp kiểm thử.
Phương pháp kiểm thử này so với phương pháp kiểm thử Agile đã hạn chế nhiều
việc chuẩn bị tài liệu về các chức năng cần test, phạm vi test, ... trước mỗi vòng lặp
tại giai đoạn lặp lại xây dựng. Thay vì xác định các chức cần test tại mỗi vòng lặp,
ở đây phác thảo phân tích các chức năng cần test ở mỗi vòng lặp tại giai đoạn đầu
tiên của dự án. Nhưng bên canh đó, phương pháp kiểm thử này vẫn chưa xây dựng
Ngoài ra trong đồ án này, việc khảo sát, triển khai, áp dụng phương pháp kiểm
thử để xây dựng website là nơi mà người dùng chia sẻ cảm nhận của bản thân về
những cuốn sách từng đọc. Từ đó, đưa ra các đánh giá về ưu điểm và nhược điểm
Đối với những nhược điểm của phương pháp kiểm thử em đã nêu ở chương 5,
trong tương lai sẽ đặt mục tiêu để hoàn thiện thêm các thiếu sót đó. Và tìm hiểu
thêm các công cụ kiểm thử tự động phần mềm.
•Xây dựng các kế hoạch kiểm thử ở mỗi vòng lặp có thể tái sử dụng ở các vòng
lặp tiếp theo, để việc chuẩn bị kế hoạch kiểm thử ở mỗi vòng lặp sẽ tốn ít thời
•Ngoài việc sử dụng công cụ biểu đồ tư duy Xmind Zen có thẻ sử dụng thêm
công cụ bảng Kanban để có thể quản lý các công việc ở mỗi vòng lặp tại giai
đoạn lặp lại xây dựng.
Đối với sản phẩm website em đã xây dựng để thử nghiệm phương pháp, trong
tương lai em sẽ đặt mục tiêu hoàn thiện các tính năng và thêm những tính năng mới
•Ngoài chia sẻ những bài cảm nhận về sách, người dùng có thể ghi lại nhật ký
•Tạo thêm trang admin để quản lý người dùng, quản lý các bài viết và quản lý
các bình luận vào bài viết.
•Xây dựng giao diện mới dễ sử dụng, hiện đại hơn, thân thiện hơn so với giao
Chương 6 là chương cuối cùng cũng là chương kết thúc nội dung chính của toàn
bộ quyển đồ án của em. Em đã trình bày kết luận về đô án này, đưa ra những vệc
mình đã làm được cũng như đưa ra các điểm thiếu sót và hướng phát triển trong