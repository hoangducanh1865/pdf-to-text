1.1 Đặt vấn đề Trong bối cảnh giáo dục hiện đại, nhu cầu học tập trực tuyến ngày càng tăng cao. Sựphát triển của công nghệthông tin và internet đã mởra nhiều cơ hội mới cho việc học tập và giảng dạy. Tuy nhiên, nhiều nền tảng học tập trực tuyến hiện tại vẫn chưa đáp ứng đầy đủcác yêu cầu vềtính tương tác, quản lý học tập và hỗtrợ người dùng. Các hệthống hiện có thường gặp phải các hạn chếnhư giao diện phức tạp, thiếu tính năng hỗtrợtương tác giữa giáo viên và học sinh, và khó khăn trong việc quản lý tiến độhọc tập. Bởi vậy, việc đưa ra một hệthống học tập trực tuyến có tính tương tác giữa giữa giáo viên và người học là cần thiết. Điều này giúp cho việc áp dụng học trực tuyến vào các môi trường học tập trường học ởcác cấp một cách hiệu quảhơn. Giúp giảm thời gian học cốđịnh và tăng sựchủđộng trong việc học cho người học như học sinh hay sinh viên hay có thểvới người đang đi làm.
1.2 Mục tiêu và phạm vi đềtài Phát triển một hệthống học tập trực tuyến trên nền tảng website nhằm cung cấp một môi trường học tập linh hoạt, tiện lợi và hiệu quảcho người dùng. Hệthống này sẽgiúp cải thiện trải nghiệm học tập của người học và giáo viên, đồng thời nâng cao hiệu quảquản lý học tập. Hiện tại, có nhiều nền tảng học tập trực tuyến như Coursera, Udemy, và Edx đã được phát triển và sửdụng rộng rãi. Mỗi nền tảng đều có những ưu điểm và nhược điểm riêng:
Coursera: Cung cấp nhiều khóa học từcác trường đại học hàng đầu, nhưng giao diện phức tạp và một sốkhóa học với chi phí cao.
Udemy: Đa dạng vềnội dung khóa học, nhưng tính năng hỗtrợtương tác giữa giáo viên và người học còn hạn chế.
Edx: Cung cấp các khóa học chất lượng cao, nhưng khó khăn trong việc quản lý tiến độhọc tập.
Các hướng tiếp cận hiện tại chủyếu tập trung vào việc cung cấp nội dung học tập và quản lý khóa học, nhưng chưa chú trọng đến tính tương tác và hỗtrợngười dùng. Trước những vấn đềtrên, công việc của đồán là đưa ra được hệthống học tập trực tuyến giúp người học dễdàng hơn trong việc quản lí tiến độhọc tập, tăng sựtương tác giữa người học và giáo viên và chi phí được đưa ra với các khóa học là phù hợp và đảm bảo vềchất lượng khóa học luôn cải thiện.
1.3 Định hướng giải pháp Vềphần tìm hiểu bài toán, nghiên cứu vềcơ chếhoạt động và các thành phần liên quan đến lĩnh vực học tập trực tuyến. Tìm hiểu vềcác hệthống học tập trực tuyến hiện đang được sửdụng. Vềphần triển khai, tìm hiểu vềquy trình phát triển phần mềm và công nghệsửdụng cho đềtài và mô hình tổchức mã nguồn sao cho hiệu quả. Sau khi tìm hiểu em quyết định sửdụng ngôn ngữPHP đểphát triển website. Sửdụng Laravel framework đểlập trình PHP, Laravel là một framework được sửdụng phổbiến và hiệu quảtrong việc quản lí mã nguồn cũng như hỗtrợ tương tác với cơ sởdữliệu một cách dễdàng. Được xây dựng dựa trên mô hình MVC(Model-View-Controller). VềCSDL, em sửdụng SQL Server đểquản lí dữ liệu. Các đóng góp chính mà hệthống học tập trực tuyến mang tới như: quản lý tài khoản người dùng, quản lí khóa học, bài giảng, hỗtrợtương tác giữa người học và giáo viên, quản lí bài tập và theo dõi tiến độhọc tập 1.4 Bốcục đồán Chương 2: Khảo sát và phân tích yêu cầu của đềtài. Tìm hiểu và các nội dung liên quan đến đềtài từđó phân tích và đưa ra các biểu đồdạng phân tích, nhằm hiểu chi tiết hơn vềđềtài đang triển khai.
Chương 3: Trong chương này, em sẽgiới thiệu vềcông nghệvà nền tảng được sửdụng trong đồán, bao gồm vềngôn ngữlập trình, cơ sởdữliệu và các công cụ khác giúp phát triển hệthống.
Chương 4: Trong chương này, em trình bày chi tiết vềthiết kếcủa hệthống, thiết kếcác lớp và quá trình kiểm thửvà triển khai hệthống.
Chương 5: Ởchương cuối, em tổng kết lại toàn bộquá trình thực hiện đồán, những kết quảđạt được, những kinh nghiệm cũng bài học rút ra. Đồng thời đềxuất các hướng phát triển của hệthống trong tương lai.
2.1 Khảo sát hiện trạng 0.1.1 Đánh giá các phương pháp giảng dạy *Phương pháp giảng truyền thống Người học tham gia trực tiếp tại lớp học theo thời khóa biểu đã được sắp xếp để thực hiện hoạt động học tập. Ngoài ra người học có thểgiành thêm thời gian ởnhà đểhoàn thành bài tập vềnhà được giao hoặc tựhọc.
Ưu điểm: Duy trì sựgiao tiếp giữa người dạy và người học hoặc giữa những người học (bạn bè). Ngoài ra, phương pháp học tập truyền thống giúp nâng cao động lực học tập cho người học. Động lực là một yếu tốcốt lõi dẫn đến thành công của hoạt động học tập. Vì vậy đây vẫn là một phương pháp học có hiệu quảcao nên vẫn được áp dụng phổthông.
Nhược điểm: Một sốnhược điểm có thểkểđến như việc cá nhân hóa hoạt động học tập và chi phí tổchức môi trường học tập (trường học, trung tâm). Trong học tập truyền thống, người học phải tuân thủlịch học đã sắp xếp cũng như quy định tại môi trường học. Điều này có thểgây khó khăn khi áp dụng cho tất cảngười tham gia học tập.Vềvấn đềchi phí tổchức học tập cũng là yếu tốgây khó khăn khi triển khai các lớp học truyền thống. Một trong sốcác vấn đềchủyếu là do sốlượng người học trong một lớp. Nếu sốlượng người học quá đông thì sẽảnh hưởng đến hiệu quảhọc tập. Ngược lại, nếu sốlượng người học phù hợp (ít hơn) thì chi phí tổ chức lớp học sẽtăng lên. Dẫn đến học phí người học phải trảsẽcao hơn đểđến các lớp học. Thêm vào đó, khi chia nhỏngười học thì phải đáp ứng thêm cơ sởhạtầng (phòng học) cho người học.
Ởtrên là một sốnhược điểm cơ bản của phương pháp học tập truyền thống. Hiện nay với sựphát triển của khoa học công nghệthì việc sửdụng kết hợp phương pháp học tập trực tuyến là biện pháp hiệu quả.
*Phương pháp học tập trực tuyến Đối với phương pháp này, người học không phải di chuyển đến các lớp học mà thực hiện hoạt động học tập từxa thông qua các thiết bịgiao tiếp có kết nối Internet.
Ưu điểm: Người học có thểtựlựa chọn, tựsắp xếp lịch học một cách phù hợp nhất với điều kiện của mình. Và việc lựa chọn thời gian học tập phù hợp cũng là một yếu tốquan trọng giúp nâng cao hiệu quảhọc tập của người học. Một ưu điểm tiếp theo, phương pháp này giúp giảm thiểu chi phí tổchức học tập, đồng thời tiếp Nhược điểm: Việc duy trì động lực học tập cho người học trong môi trường trực tuyến là một vấn đềkhó khăn. Nếu việc thiết kếvà triển khai các khóa học chưa tốt hoặc tính năng theo dõi tiến độkhông hiệu quảthì có thểsẽảnh hưởng nhiều đến kết quảngười học hoặc nếu nghiêm trọng hơn sẽkhông thểhoàn thành khóa học.
Hệthống được triển khai sẽkhắc phục các nhược điểm trên giúp các khóa học sinh động và phong phú với các dạng tài liệu học khác nhau. Ngoài ra, hệthống theo dõi tiến độngười họcđược thiết kếsẽbám sát lộtrình học của người họcgiúp người học nắm bắt được quá trình rèn luyện học tập của mình một các chủđộng.
0.1.2. Tìm hiểu một sốnền tảng hỗtrợhọc tập trực tuyến *Google Classroom Hệthống tổchức lớp học thông qua việc hỗtrợba tính năng chính: thông báo, bài tập và lưu trữ.Thông báo và gửi phản hồi và tích hợp thêm email. Giáo viên đính kèm thêm tài liệu ởtrong các thông báo. Việc giao bài tập và nhận bài tập được thực hiện thông qua ứng dụng Google Drive chia sẻchung. Mỗi lớp học được tổchức vào trong một thư mục riêng, mỗi học sinh sẽđược tựđọng tạo một thư mục cho phần bài tập của mình.
Ưu điểm: Giao diện được thiết kếđơn giản, quen thuộc với những người đã sử dụng qua các sản phẩm khác trước đó của Google. Việc thiết kếkhóa hoc, đăng ký và vận hành diễn ra khá đơn giản và dễdàng.
Nhược điểm: Với việc thiết kếđơn giản, ít tính năng dẫn đến một sốhạn chế trong quá trình sửdụng. Sửdụng email thuộc gói Google Education đểđăng kí cũng là 1 rào cản khiến cho nền tảng không dễđược phổbiến.
*Coursera Coursera là một công ty công nghệgiáo dục cung cấp các khóa học trực tuyến mở. Coursera cộng tác với các trường đại học và một sốtổchức giáo dục khác đểxây dựng các khóa học vềnhiều lĩnh vực khác nhau Các khóa học trên Coursera được cung cấp dưới dạng miễn phí. Sau đó, người học có thểtảtiền để được cấp chứng chỉhoàn thành đối với khóa học đó. Các chứng chỉnày khá uy tín và có thểđược sửdụng vào mục đích nghềnghiệp.
Ưu điểm: Với sựcộng tác của các trường Đại học hàng đầu nên khóa học rất chất lượng và uy tín.
Nhược điểm: Chỉcó các đối tác của Coursera mới đưa được khóa học lên nền tảng này, do đó hiện tại chưa thểáp dụng phổbiến trong các tổchức giáo dục khác.
*Udemy Udemy là một nền tảng học trực tuyến rất phong phú vềchủng loại và đến từ nhiều ngành nghề, ngôn ngữkhác nhau dành cho nhiều đối tượng. Cơ chếhỗtrợ giáo viên xây dựng các khóa học của Udemy cũng được thực hiện rất tốt.
Từnhững phân tích trên, Các tính năng cơ bản cần được quan tâm như quản lí khóa học bao gồm tạo các tài liệu, bài tập, quản lí tiến độngười học, phần trao đổi, giải đáp liên quan đến khóa học, môn học và vềphía người quản lí bao gồm việc quản lí người dùng như người học giáo viên và các tính năng của hệthống.
2.2 Tổng quan chức năng 2.2.1 Biểu đồuse case tổng quát Hình 2.1: Usecase tổng quan hệthống Biểu đồuse case tổng quan xác định các tác nhân chính của hệthống là người học, giáo viên và quản trị. Người học có các hoạt động trên hệthống như xem thông tin khóa học, tìm kiếm khóa học. Khi người học đã đăng kí và đăng nhập thành công vào hệthống thì có thểchỉnh sửa thông tin cá nhân, tìm kiếm người dùng, nhận được các thông báo, theo dõi tiến độhọc tập. Khi đã đăng kí khóa học thì người học sẽphải thanh toán nếu khóa học có phí, có thểtrò chuyện, trao đổi trong khóa học. Giáo viên có thểquản lí khóa học, quản lí các học viên trong khóa học, trao đổi thông qua khung chat, tìm kiếm người dùng, tạo và quản lí bài tập, câu hỏi và điểm của học viên trong khóa học. Với người quản trịcó thểthực hiện các chức năng quản lí tài khoản người dùng, quản lí các khóa học 2.2.2 Biểu đồuse case phân rã Quản lí khóa học Hình 2.2: Use case phân rã Quản lí khóa học Phân rã use case quản lý khóa học có các use case con cụthểnhư:
Thêm (tạo mới) khóa học: Giáo viên, quản trịnhập thông tin khóa học đểtạo khóa học mới.
Chỉnh sửa khóa học: Giáo viên, quản trịchỉnh sửa thông tin của khóa học. Hệ thống lưu lại các thay đổi.
Xóa khóa học: Giáo viên, quản trịyêu cầu xóa khóa học khỏi hệthống. Hệthống xác nhận và xóa khóa học khỏi cơ sởdữliệu.
2.2.3 Biểu đồuse case phân rã Quản lí tài khoản Hình 2.3: Use case phân rã Quản lí tài khoản Phân rã use case quản lý tài khoản có các use case con cụthểhơn. Thêm (Đăng ký) tài khoản: Người dùng nhập thông tin cá nhân.Hệthống kiểm tra thông tin và tạo tài khoản mới.
Chỉnh sửa tài khoản: Người dùng chỉnh sửa thông tin cá nhân. Hệthống lưu lại các thay đổi.
Xóa tài khoản: Người dùng yêu cầu xóa tài khoản. Hệthống xác nhận và xóa tài khoản khỏi cơ sởdữliệu.
2.2.4 Biểu đồuse case phân rã Quản lí điểm Hình 2.4: Use case phân rã Quản lí điểm Phân rã use case quản lý điểm có các use case con cụthểhơn. Giáo viên quản lí các điểm thành phần thông qua các bài tập và tính ra được điểm tổng kết.
2.2.5 Biểu đồuse case phân rã Quản lí câu hỏi Hình 2.5: Use case phân rã Quản lí câu hỏi Phân rã use case quản lý câu hỏi có các use case con cụthểhơn.
Thêm câu hỏi mới cho khóa học tương ứng: câu hỏi được thêm thủcông hoặc import từfile excel.
Chỉnh sửa câu hỏi: Giáo viên chỉnh sửa các câu hỏi và đáp án, hệthống sẽlưu lại các thay đổi.
Xóa câu hỏi: Giáo viên chọn xóa câu hỏi và hệthống yêu cầu xác nhận xóa câu hỏi tương ứng.
2.2.6 Biểu đồuse case phân rã Quản lí bài tập Hình 2.6: Use case phân rã Quản lí câu hỏi Phân rã use case quản lý bài tập có các use case con cụthểhơn.
Thêm bài tập mới cho khóa học tương ứng: bài tập được thêm tựđộng hoặc thêm thủcông.
Chỉnh sửa bài tập: Giáo viên chỉnh sửa các bài tập bằng việc thay đổi sô lượng câu hỏi, hệthống sẽlưu lại các thay đổi.
Xóa bài tập: Giáo viên chọn xóa bài tập và hệthống yêu cầu xác nhận xóa bài tập tương ứng.
2.2.7 Quy trình nghiệp vụ Quy trình nghiệp vụđăng kí khóa học: Người học truy cập vào hệthống đểtìm kiếm các khóa học cần đăng kí. Người học có thểxem thông tin mô tảvềkhóa học.
Nếu chưa có tài khoản, người học cần tạo một tài khoản. Sau khi đăng nhập, người học chọn khóa học muốn tham gia từdanh sách khóa học có sẵn. Nếu khóa học có phí thì người học thanh toán phí. Sau khi thanh toán thành công, người học sẽnhận được email hoặc thông báo xác nhận đăng ký khóa học.
Quy trình nghiệp vụtạo khóa học: Giáo viên thiết kếnội dung bao gồm tài liệu, video, thời gian hoàn thành khóa học và các tài nguyên khác mà người học sửdụng.
Mỗi khóa học có thểđược quản lí bởi nhiều giáo viên, tính năng có thểgiúp các giáo viên hợp tác và chia sẻtrong quá trình xây dựng cũng như triển khai khóa học 2.3 Đặc tảchức năng 2.3.1 Đặc tảuse case Đăng nhập Mã usecase UC-01 Tên usecase Đăng nhập Mục tiêu Người dùng có thểđăng nhập vào hệthống bằng tài khoản đã đăng ký Tác nhân chính Người học, giáo viên, quản trị Tiền điều kiện Người dùng đã đăng ký tài khoản Hậu điều kiện Người dùng được xác thực và chuyển đến trang tùy theo vai trò của tài khoản Luồng sựkiện chính 1. Người dùng chọn chức năng đăng nhập.
2. Hệthống nhận và xửlí yêu cầu và sau đó trảvềtrang đăng nhập 3. Người dùng nhập tên tài khoản và mật khẩu đã đăng kí và gửi thông tin đăng nhập tới hệthống 4. Hệthống kiểm tra thông tin người dùng đăng nhập [e4.1] 5. Hệthống trảvềtrang tương ứng với vai trò của tài khoản Luồng sựkiện ngoại lệ e4.1. Hệthống kiểm tra thông tin đăng nhập không hợp lệ e4.2 Hệthống trảvềthông báo lỗi, yêu cầu người dùng đăng nhập lại.
Quay lại bước 3 Bảng 2.1: Đặc tảuse case Đăng nhập 2.3.2 Đặc tảuse case Đăng kí Mã usecase UC-02 Tên usecase Đăng kí Mục tiêu Người dùng có thểđăng kí tài khoản Tác nhân chính Người học, giáo viên Tiền điều kiện Người dùng muốn đăng nhập đểsửdụng các chức năng của hệthống Hậu điều kiện Người dùng đăng kí thành công và chuyển sang trang đăng nhập Luồng sựkiện chính 1. Người dùng chọn chức năng đăng kí.
2. Hệthống nhận và xửlí yêu cầu và sau đó trảvềtrang đăng kí 3. Người dùng nhập thông tin theo yêu cầu và gửi thông tin đăng kí tới hệthống 4. Hệthống nhận và kiểm tra thông tin.
[e4.1] 5. Hệthống xác nhận thông tin hợp lệ, chuyển đến trang đăng nhập Luồng sựkiện ngoại lệ e4.1. Hệthống kiểm tra thông tin đăng kí không hợp lệ e4.2 Hệthống trảvềthông báo lỗi, yêu cầu người dùng nhập lại thông tin.
Quay lại bước 3 Bảng 2.2: Đặc tảuse case Đăng kí 2.3.3 Đặc tảuse case Quản lí khóa học Mãuse case UC-03 Tênuse case Quản lí khóa học Mục tiêu Người dùng có thểthao tác với các chức năng liên quan đến quản lí khóa học Tác nhân chính Giáo viên, quản trị Tiền điều kiện Người dùng với vai trò là giáo viên hoặc quản trị Hậu điều kiện Thông tin khóa học được thêm mới hoặc chỉnh sửa hoặc hủy thành công.
Luồng sự kiện chính 1. Tác nhân chọn chức năng quản lý khóa học.
2. Hệthống xác nhận và xửlí yêu cầu và trảvềtrang quản lí khóa học bao gồm danh sách các khóa học hiện có và các tùy chọn thêm mới, chỉnh sửa, xóa khóa học 3. Tác nhân chọn thêm mới khóa học 4. Hệthống trảvềtrang tạo khóa học 5. Người dùng nhập thông tin theo yêu cầu và gửi thông tin tới hệ thống 6. Hệthống nhận và kiểm tra thông tin. [e6.1] 7. Hệthống xác nhận thông tin hợp lệvà khóa học được thêm thành công 8. Cập nhập lại danh sách các khóa học hiện có Luồng sự kiện thay thế alt3.1.1 Tác nhân chọn chức năng chỉnh sửa khóa học alt3.1.2 Hệthống trảvềtrang chỉnh sửa khóa học tương ứng alt3.1.3 Tác nhân chỉnh sửa các thông tin cần thiết và gửi yêu cầu cập nhập tới hệthống alt3.1.4 Hệthống nhận và kiểm tra thông tin. [e3.1.4] alt3.1.5 Hệthống xác nhận thông tin hợp lệvà khóa học được chỉnh sửa thành công alt3.1.6 Cập nhập lại thông tin của khóa học hiện được chỉnh sửa alt3.2.1 Tác nhân chọn chức năng xóa khóa học alt3.2.2 Hệthống hiển thịthông báo xác nhận lại “Bạn muốn xóa khóa này ?” alt3.2.3 Tác nhân xác nhận xóa khóa học [e3.2.3.1] alt3.2.4 Hệthống nhận và thực hiện xóa khóa học alt3.2.5 Hệthống cập nhập lại danh sách khóa học Bảng 2.3: Đặc tảuse case Quản lí khóa học Luồng sựkiện ngoại lệ e6.1. Hệthống kiểm tra thông tin không hợp lệ e6.2 Hệthống trảvềthông báo lỗi, yêu cầu người dùng nhập lại thông tin Quay lại bước 5 e3.1.4.1 Hệthống kiểm tra thông tin muốn chỉnh sửa không hợp lệ e3.1.4.2 Hệthống trảvềthông báo lỗi, yêu cầu người dùng nhập lại thông tin Quay lại bước 3.1.3 e3.2.3.1 Tác nhân chọn hủy yêu cầu xóa khóa học e3.2.3.2 Hệthống hủy yêu cầu xóa khóa học 2.3.4 Đặc tảuse case Quản lí tài khoản Mãuse case UC-04 Tênuse case Quản lí tài khoản Mục tiêu Người dùng có thểthao tác với các chức năng liên quan đến quản lí tài khoản Tác nhân chính Quản trị Tiền điều kiện Người dùng với vai trò là quản trị Hậu điều kiện Thông tin tài khoản được thêm mới hoặc chỉnh sửa hoặc hủy thành công.
Luồng sự kiện chính 1. Tác nhân chọn chức năng quản lý tài khoản.
2. Hệthống xác nhận và xửlí yêu cầu và trảvềtrang quản lí tài khoản bao gồm danh sách các tài khoản hiện có và các tùy chọn thêm mới, chỉnh sửa, xóa tài khoản 3. Tác nhân chọn thêm mới tài khoản 4. Hệthống trảvềtrang tạo tài khoản 5. Tác nhân nhập thông tin theo yêu cầu và gửi thông tin tới hệ thống 6. Hệthống nhận và kiểm tra thông tin. [e6.1] 7. Hệthống xác nhận thông tin hợp lệvà tài khoản được thêm thành công 8. Cập nhập lại danh sách các tài khoản hiện có Luồng sự kiện thay thế alt3.1.1 Tác nhân chọn chức năng chỉnh sửa tài khoản alt3.1.2 Hệthống trảvềtrang chỉnh sửa tài khoản tương ứng alt3.1.3 Tác nhân chỉnh sửa các thông tin cần thiết và gửi yêu cầu cập nhập tới hệthống alt3.1.4 Hệthống nhận và kiểm tra thông tin. [e3.1.4] alt3.1.5 Hệthống xác nhận thông tin hợp lệvà tài khoản được chỉnh sửa thành công alt3.1.6 Cập nhập lại thông tin của tài khoản hiện được chỉnh sửa alt3.2.1 Tác nhân chọn chức năng xóa tài khoản alt3.2.2 Hệthống hiển thịthông báo xác nhận lại “Bạn muốn xóa tài khoản này ?” alt3.2.3 Tác nhân xác nhận xóa tài khoản [e3.2.3.1] alt3.2.4 Hệthống nhận và thực hiện xóa tài khoản alt3.2.5 Hệthống cập nhập lại danh sách tài khoản Bảng 2.4: Đặc tảuse case Quản lí tài khoản Luồng sựkiện ngoại lệ e6.1. Hệthống kiểm tra thông tin không hợp lệ e6.2 Hệthống trảvềthông báo lỗi, yêu cầu người dùng nhập lại thông tin Quay lại bước 5 e3.1.4.1 Hệthống kiểm tra thông tin muốn chỉnh sửa không hợp lệ e3.1.4.2 Hệthống trảvềthông báo lỗi, yêu cầu người dùng nhập lại thông tin Quay lại bước 3.1.3 e3.2.3.1 Tác nhân chọn hủy yêu cầu xóa tài khoản e3.2.3.2 Hệthống hủy yêu cầu xóa tài khoản 2.3.5 Đặc tảuse case Đăng kí khóa học Mã usecase UC-05 Tên usecase Đăng kí khóa học Mục tiêu Người học có thểđăng kí các khóa học hiện mởđểtham gia Tác nhân chính Người dùng Tiền điều kiện Người học đã đăng nhập và chọn được khóa học muốn đăng kí Hậu điều kiện Người học đăng kí khóa học thành công Luồng sựkiện chính 1. Tác nhân chọn chức năng đăng kí khóa học 2. Hệthống gửi thông báo xác nhận yêu cầu đăng kí 3. Tác nhân chọn xác nhận đểtiếp tục [e3.1] 4. Hệthống kiểm tra khóa học có phí và trảvềtrang thanh toán [alt4.1] 5. Tác nhân nhập thông tin thanh toán hợp lệ 6. Ngân hàng xác thực thông tin và hoàn tất giao dịch và trả vềtrạng thái cho hệthống[e.6.1] 7. Hệthống lưu lại các thông tin giao dịch 8. Hệthống thông báo thành công và thêm khóa học vào mục khóa học đã đăng kí Luồng sựkiện thay thế Alt4.1.1 Hệthống kiểm tra khóa học miễn phí Alt4.1.2 Hệthống gửi yêu cầu đăng kí đến trang quản lí khóa học Alt4.1.3 Người quản lí khóa học chấp nhận yêu cầu đăng kí Tiếp tục bước 8 Luồng sựkiện ngoại lệ e3.1 Tác nhân chọn hủy yêu cầu đăng kí e3.2 Hệthống hủy yêu cầu e6.1 Thông tin thanh toán không hợp lệ Quay lai bước 5 Bảng 2.5: Đặc tảuse case Đăng kí khóa học 2.3.6 Đặc tảuse case Quản lí câu hỏi Mã usecase UC-06 Tên usecase Quản lí câu hỏi Mục tiêu Người học có thểtạo các câu hỏi với các khóa học tương ứng Tác nhân chính Giáo viên, quản trị Tiền điều kiện Tác nhân muốn thêm hoặc chỉnh sửa hoặc xóa câu hỏi Hậu điều kiện Câu hỏi được thêm mới hoặc chỉnh sửa hoặc xóa thành công Luồng sự kiện chính 1. Tác nhân chọn chức năng quản lý câu hỏi.
2. Hệthống xác nhận và xửlí yêu cầu và trảvềtrang quản lí câu hỏi bao gồm danh sách các câu hỏi hiện có và các tùy chọn thêm mới, chỉnh sửa, xóa câu hỏi 3. Tác nhân chọn thêm mới câu hỏi[alt3.1, alt3.2] 4. Tác nhận chọn thêm câu hỏi thủcông [alt4.1] 5. Hệthống trảvềtrang tạo câu hỏi 6. Tác nhân nhập thông tin theo yêu cầu và gửi thông tin tới hệ thống 7. Hệthống nhận và kiểm tra thông tin. [e7.1] 8. Hệthống xác nhận thông tin hợp lệvà câu hỏi được thêm thành công 9. Cập nhập lại danh sách các câu hỏi hiện có Luồng sự kiện thay thế alt3.1.1 Tác nhân chọn chức năng chỉnh sửa câu hỏi alt3.1.2 Hệthống trảvềtrang chỉnh sửa câu hỏi tương ứng alt3.1.3 Tác nhân chỉnh sửa các thông tin cần thiết và gửi yêu cầu cập nhập tới hệthống alt3.1.4 Hệthống nhận và kiểm tra thông tin. [e3.1.4] alt3.1.5 Hệthống xác nhận thông tin hợp lệvà câu hỏi được chỉnh sửa thành công alt3.1.6 Cập nhập lại thông tin của câu hỏi hiện được chỉnh sửa alt3.2.1 Tác nhân chọn chức năng xóa câu hỏi alt3.2.2 Hệthống hiển thịthông báo xác nhận lại “Bạn muốn xóa câu hỏi này ?” alt3.2.3 Tác nhân xác nhận xóa câu hỏi [e3.2.3.1] alt3.2.4 Hệthống nhận và thực hiện xóa câu hỏi alt3.2.5 Hệthống cập nhập lại danh sách câu hỏi alt4.1.1 Tác nhân chọn thêm câu hỏi từfile excel alt4.1.2 Tác nhân nhập dữliệu vào file excel theo định dạng có sẵn tiếp tục bước 7 Bảng 2.6: Đặc tảuse case Quản lí câu hỏi Luồng sựkiện ngoại lệ E7.1. Hệthống kiểm tra thông tin không hợp lệ E7.2 Hệthống trảvềthông báo lỗi, yêu cầu người dùng nhập lại thông tin Quay lại bước 5 E3.1.4.1 Hệthống kiểm tra thông tin muốn chỉnh sửa không hợp lệ E3.1.4.2 Hệthống trảvềthông báo lỗi, yêu cầu người dùng nhập lại thông tin Quay lại bước 3.1.3 e3.2.3.1 Tác nhân chọn hủy yêu cầu xóa câu hỏi e3.2.3.2 Hệthống hủy yêu cầu xóa câu hỏi 2.3.7 Đặc tảuse case Làm bài tập Mã usecase UC-07 Tên usecase Làm bài tập Mục tiêu Người học thực hiện việc làm bài tập dưới hình thức câu hỏi trắc nghiệm Tác nhân chính Người học Tiền điều kiện Tác nhân đã tham gia ít nhất 1 khóa học Hậu điều kiện Tác nhân hoàn thành và nộp bài tập thành công Luồng sựkiện chính 1. Tác nhân chọn bài tập cần làm 2. Hệthống nhận yêu cầu và xửlí và sau đó hiển thịđềbài với các câu hỏi tương ứng 3. Tác nhân thực hiện làm bài dưới dạng câu hỏi trắc nghiệm.
4. Tác nhân chọn nộp bài 5. Hệthống thông báo xác nhận lại tác nhân muốn nộp bài 6. Tác nhân xác nhận nộp 7. Hệthống kiểm tra và hiển thịthông báo nộp bài thành công [e7.1] Luồng sựkiện ngoại lệ E7.1. Hệthống kiểm tra chưa hoàn thành hết tất cảcác câu hỏi E7.2 Hệthống trảvềthông báo, yêu cầu tác nhân hoàn thành hết các câu hỏi Quay lại bước 3 Bảng 2.7: Đặc tảuse case Làm bài tập 2.3.8 Đặc tảuse case Quản lí bài tập Mã usecase UC-08 Tên usecase Quản lí bài tập Mục tiêu Người học có thểtạo các bài tập với các khóa học tương ứng Tác nhân chính Giáo viên, quản trị Tiền điều kiện Tác nhân muốn thêm hoặc chỉnh sửa hoặc xóa bài tập Hậu điều kiện Bài tập được thêm mới hoặc chỉnh sửa hoặc xóa thành công Luồng sựkiện chính 1. Tác nhân chọn chức năng quản lý bài tập.
2. Hệthống xác nhận và xửlí yêu cầu và trảvềtrang quản lí bài tập bao gồm danh sách các bài tập hiện có và các tùy chọn thêm mới, chỉnh sửa, xóa bài tập 3. Tác nhân chọn thêm mới bài tập[alt3.1, alt3.2] 4. Tác nhận chọn thêm bài tập thủcông [alt4.1] 5. Hệthống trảvềtrang tạo bài tập 6. Tác nhân nhập chọn các câu hỏi và gửi thông tin tới hệthống 7. Hệthống nhận và kiểm tra thông tin. [e7.1] 8. Hệthống xác nhận thông tin hợp lệvà bài tập được thêm thành công 9. Cập nhập lại danh sách các bài tập hiện có Luồng sựkiện thay thế alt3.1.1 Tác nhân chọn chức năng chỉnh sửa bài tập alt3.1.2 Hệthống trảvềtrang chỉnh sửa bài tập tương ứng alt3.1.3 Tác nhân chỉnh sửa các thông tin cần thiết và gửi yêu cầu cập nhập tới hệthống alt3.1.4 Hệthống nhận và kiểm tra thông tin. [e3.1.4] alt3.1.5 Hệthống xác nhận thông tin hợp lệvà bài tập được chỉnh sửa thành công alt3.1.6 Cập nhập lại thông tin của bài tập hiện được chỉnh sửa alt3.2.1 Tác nhân chọn chức năng xóa bài tập alt3.2.2 Hệthống hiển thịthông báo xác nhận lại “Bạn muốn xóa bài tập này ?” alt3.2.3 Tác nhân xác nhận xóa bài tập [e3.2.3.1] alt3.2.4 Hệthống nhận và thực hiện xóa bài tập alt3.2.5 Hệthống cập nhập lại danh sách bài tập alt4.1.1 Tác nhân chọn thêm bài tập tựđộng alt4.1.2 Hệthống yêu cầu tác nhân nhập sốlượng câu hỏi alt4.1.3 Tác nhân nhập sốlượng câu hỏi mong muốn alt4.1.4 Hệthống chọn ngẫu nhiên các câu hỏi đểcấu thành bài tập quay lại bước 9 Bảng 2.8: Đặc tảuse case Quản lí bài tập Luồng sựkiện ngoại lệ E7.1. Hệthống kiểm tra thông tin không hợp lệ E7.2 Hệthống trảvềthông báo lỗi, yêu cầu tác nhân thực hiện lại Quay lại bước 6 E3.1.4.1 Hệthống kiểm tra thông tin muốn chỉnh sửa không hợp lệ E3.1.4.2 Hệthống trảvềthông báo lỗi, yêu cầu tác nhân thực hiện lại Quay lại bước 3.1.3 e3.2.3.1 Tác nhân chọn hủy yêu cầu xóa bài tập e3.2.3.2 Hệthống hủy yêu cầu xóa bài tập 2.3.9 Đặc tảuse case Quản lí điểm Mã usecase UC-09 Tên usecase Quản lí điểm Mục tiêu Giáo viên có thểquản lí điểm từng bài tập với khóa học tương ứng Tác nhân chính Giáo viên, quản trị Tiền điều kiện Tác nhân muốn quản lí điểm của người học Hậu điều kiện Tác nhân có thểthao tác với điểm của người học Luồng sựkiện chính 1. Tác nhân chọn chức năng quản lý điểm của người học 2. Hệthống xác nhận và xửlí yêu cầu và trả vềtrang quản lí điểm bao gồm danh sách các các bài tập mà các người học đã thực hiện, và tùy chọn hiển thịđiểm chi tiết của người học 3. Tác nhân chọn xem chi tiết điểm của người học 4. Tác nhân chọn xem chi tiết đáp án mà người học đã lựa chọn 5. Hệthống hiển thịtrang bài tập và hiển thị đáp án mà người học đã lựa chọn Bảng 2.9: Đặc tảuse case Quản lí điểm 2.4 Biểu đồhoạt động 2.4.1 Biểu đồhoạt động cho usecase Đăng nhập Hình 2.7: Biểu đồhoạt động cho đăng nhập 2.4.2 Biểu đồhoạt động cho usecase Đăng kí Hình 2.8: Biểu đồhoạt động cho đăng kí 2.4.3 Biểu đồhoạt động cho usecase Quản lí khóa học Hình 2.9: Biểu đồhoạt động cho Quản lí khóa học 2.4.4 Biểu đồhoạt động cho usecase Quản lí tài khoản Hình 2.10: Biểu đồhoạt động cho Quản lí tài khoản 2.4.5 Biểu đồhoạt động cho usecase Quản lí câu hỏi Hình 2.11: Biểu đồhoạt động cho Quản lí câu hỏi 2.4.6 Biểu đồhoạt động cho usecase Quản lí điểm Hình 2.12: Biểu đồhoạt động cho Quản lí điểm 2.4.7 Biểu đồhoạt động cho usecase Quản lí bài tập Hình 2.13: Biểu đồhoạt động cho Quản lí câu hỏi 2.5 Yêu cầu phi chức năng Bảo mật: Bảo vệthông tin người dùng, mã hóa dữliệu nhạy cảm, và tuân thủ các quy định vềbảo mật thông tin.
Hiệu suất: Hệthống cần hoạt động ổn định, xửlý đồng thời nhiều người dùng mà không bịlag.
Khảnăng mởrộng: Dễdàng thêm người dùng, khóa học và tính năng mới trong tương lai.
Tương thích: Hệthống cần tương thích với nhiều trình duyệt và thiết bị(máy tính, tablet, điện thoại).
Các công nghệsửdụng phát triển hệthống: Frontend(Giao diện): HTML, CSS, Javascript và một sốthư viện khác. Backend : sửdụng ngôn ngữPHP đểphát triển hệthống và framework Laravel. Và sửdụng SQL Server đểlưu trữvà quản lí dữ liệu cho hệthống.
3.1 HTML (HyperText Markup Language) HTML là ngôn ngữđánh dấu được sửdụng đểtạo cấu trúc và nội dung cho trang web. Nó bao gồm các thẻ(tags) và thuộc tính (attributes) đểđịnh nghĩa các phần tửnhư tiêu đề, đoạn văn, hình ảnh, liên kết, và nhiều hơn nữa.
3.2 CSS (Cascading Style Sheets) CSS là ngôn ngữdùng đểmô tảcách hiển thịcủa các phần tửHTML trên trang web. Nó cho phép bạn thay đổi màu sắc, phông chữ, bốcục và nhiều thuộc tính khác của các phần tửHTML.
3.3 JavaScript JavaScript là ngôn ngữlập trình được sửdụng đểtạo ra các tương tác động trên trang web. Nó cho phép bạn thay đổi nội dung, xửlý sựkiện, và tương tác với người dùng mà không cần tải lại trang.
3.4 Ngôn ngữPHP PHP(Hypertext Preprocessor) là một ngôn ngữlập trình kịch bản phía máy chủ, được sửdụng rộng rãi trong phát triển web. PHP được tạo ra bởi Rasmus Lerdorf vào năm1994. Ban đầu, nó được gọi là Personal Home Page, nhưng sau đó đã được đổi tên thành Hypertext Preprocessor2.
Cấu trúc cơ bản: PHP cung cấp nhiều hàm tích hợp sẵn đểxửlý dữliệu. Có thểtạo hàm tùy chỉnh bằng cách sửdụng từkhóa function. Câu lệnh điều kiện: Sử dụng các câu lệnh if, else, elseif đểkiểm tra điều kiện và thực hiện các hành động tương ứng. Vòng lặp: PHP hỗtrợcác vòng lặp for, while, do-while và foreach để lặp qua các phần tửcủa mảng hoặc thực hiện các hành động lặp lại. PHP thường được sửdụng đểphát triển các ứng dụng web động và tương tác với cơ sởdữliệu.
Một sốứng dụng phổbiến của PHP bao gồm: Phát triển website: PHP có thể nhúng vào HTML đểtạo ra các trang web động. Quản lý cơ sởdữliệu: PHP thường được sửdụng cùng với MySQL đểquản lý cơ sởdữliệu. Xửlý biểu mẫu: PHP có thểxửlý dữliệu từcác biểu mẫu HTML và lưu trữchúng vào cơ sởdữliệu. Tạo API: PHP có thểđược sửdụng đểtạo các API RESTful cho các ứng dụng web và di động.
Ưu Điểm của PHP: Mã nguồn mởvà miễn phí: PHP là ngôn ngữmã nguồn mở và miễn phí, giúp tiết kiệm chi phí phát triển. Dễhọc và sửdụng: PHP có cú pháp đơn giản và dễhiểu, phù hợp cho cảngười mới bắt đầu và lập trình viên có kinh nghiệm. Tương thích cao: PHP tương thích với nhiều hệđiều hành như Windows, MacOS, và Linux. Cộng đồng lớn: PHP có một cộng đồng lớn và năng động, cung cấp nhiều tài liệu, hướng dẫn và hỗtrợ.
Nhược Điểm của PHP: PHP có thểgặp phải các vấn đềbảo mật nếu không được cấu hình và lập trình đúng cách. PHP có thểkhông hiệu quảbằng một sốngôn ngữ lập trình khác trong các ứng dụng yêu cầu hiệu năng cao.
3.5 Mô hình MVC Hình 3.1: Mô hình MVC Model: Quản lý dữliệu và logic nghiệp vụcủa ứng dụng. Model tương tác với cơ sởdữliệu đểtruy xuất và lưu trữdữliệu.
View là các tệp HTML/CSS/JavaScript được sửdụng đểtạo giao diện người dùng. Hiển thịdữliệu cho người dùng.
Controller: Xửlý các yêu cầu từngười dùng, tương tác với Model đểlấy dữliệu và trảvềView đểhiển thị.
3.6 Laravel Framework Laravel là một framework PHP mã nguồn mở, được thiết kếđểphát triển các ứng dụng web theo mô hình MVC (Model-View-Controller).
Các tính năng chính của Laravel Routing: Laravel cung cấp một hệthống định tuyến mạnh mẽ, cho phép bạn định nghĩa các URL và ánh xạchúng tới các hành động cụthểtrong Controller.
Eloquent ORM: Hệthống ORM (Object-Relational Mapping) của Lar avel, giúp tương tác với cơ sởdữliệu một cách dễdàng và trực quan.
Blade Templating Engine: Công cụtạo mẫu Blade của Laravel cho phép bạn sửdụng các cấu trúc điều khiển và biến trong các tệp HTML.
Middleware: Cho phép bạn lọc các yêu cầu HTTP vào ứng dụng của mình, ví dụnhư xác thực người dùng hoặc kiểm tra quyền truy cập.
Artisan CLI: Công cụdòng lệnh của Laravel, cung cấp nhiều lệnh hữu ích đểphát triển và quản lý ứng dụng.
Ưu điểm của Laravel:
Dễhọc và sửdụng: Laravel có cú pháp rõ ràng và dễhiểu, giúp lập trình viên nhanh chóng làm quen và phát triển ứng dụng.
Cộng đồng lớn: Laravel có một cộng đồng lớn và năng động, cung cấp nhiều tài liệu, hướng dẫn và hỗtrợ.
Tích hợp tốt với các công cụkhác: Laravel tích hợp tốt với các công cụ như Redis, Memcached, và các dịch vụemail, giúp bạn xây dựng ứng dụng nhanh chóng và hiệu quả.
3.7 Hệquản trịcơ sởdữliệu SQL Server SQL Server là một hệquản trịcơ sởdữliệu quan hệ(RDBMS)được phát triển bởi Microsoft. Nó hỗtrợnhiều tính năng mạnh mẽđểquản lý và truy vấn dữ liệu.
Cấu Trúc Cơ Bản: Database: (Là một tập hợp các bảng, chỉmục, và các đối tượng khác liên quan đến dữliệu), Table: (Là một tập hợp các hàng và cột, nơi dữliệu được lưu trữ), Column: (Là một trường trong bảng, đại diện cho một loại dữliệu cụthể), Row: (Là một bản ghi trong bảng, chứa dữliệu cho một mục cụ thể) Các loại dữliệu: SQL Server hỗtrợnhiều loại dữliệu khác nhau như: INT(Số nguyên), VARCHAR(Chuỗi ký tựcó độdài thay đổi), DATETIME(Ngày và giờ), FLOAT(Sốthực) Một sốkhái niệm nâng cao như: Stored Procedures: (Là các tập lệnh SQL được lưu trữvà có thểtái sửdụng), Triggers: Là các thủtục tựđộng thực thi khi có sựkiện cụthểxảy ra trong cơ sởdữliệu, Views: (Là các truy vấn SQL được lưu trữdưới dạng bảng ảo), Indexes: (Là các cấu trúc dữliệu giúp tăng tốc độ truy vấn dữliệu) Các Phép Toán Tập Hợp: SQLServer hỗtrợcác phép toán tập hợp như UNION, INTERSECT và EXCEPT, giúp kết hợp và so sánh các tập dữliệu2. Quản Lý Giao Dịch: SQL Server cung cấp các tính năng quản lý giao dịch đểđảm bảo tính toàn vẹn và nhất quán của dữliệu. Các giao dịch có thểđược bắt đầu, cam kết hoặc hủy bỏbằng các lệnh BEGIN TRANSACTION, COMMIT, và ROLLBACK.
Bảo Mật: SQL Server cung cấp nhiều cơ chếbảo mật đểbảo vệdữliệu, mã hóa dữliệu.
Hiệu Năng và Tối Ưu Hóa: SQL Server cung cấp nhiều công cụvà tính năng để tối ưu hóa hiệu năng, bao gồm lập chỉmục, tối ưu hóa truy vấn, và quản lý bộnhớ.
Sao Lưu và Phục Hồi: SQL Server hỗtrợcác tính năng sao lưu và phục hồi dữ liệu đểđảm bảo an toàn dữliệu trong trường hợp xảy ra sựcố.
3.8 AJAX AJAX (Asynchronous JavaScript and XML) là một kỹthuật phát triển web cho phép các trang web cập nhật nội dung một cách động mà không cần tải lại toàn bộ trang.
Cách hoạt động của AJAX: AJAX hoạt động bằng cách gửi các yêu cầu HTTP không đồng bộtới máy chủvà nhận phản hồi từmáy chủmà không làm gián đoạn trải nghiệm người dùng. Quá trình này bao gồm các bước sau: Sựkiện người dùng:
Người dùng thực hiện một hành động trên trang web. Gửi yêu cầu: JavaScript gửi một yêu cầu HTTP không đồng bộtới máy chủ. Xửlý yêu cầu: Máy chủxửlý yêu cầu và trảvềdữliệu (thường là XML, JSON hoặc HTML). Cập nhật trang:
JavaScript nhận dữliệu từmáy chủvà cập nhật nội dung trang web mà không cần tải lại toàn bộtrang.
Các Thành Phần Chính của AJAX: XMLHttpRequest: Đối tượng này được sử dụng đểgửi các yêu cầu HTTP tới máy chủvà nhận phản hồi. JavaScript: Ngôn ngữlập trình được sửdụng đểthao tác với đối tượng XMLHttpRequest và cập nhật nội dung trang web. Dữliệu: Dữliệu được trao đổi giữa máy chủvà trình duyệt, thường ởđịnh dạng XML, JSON hoặc HTML.
Ưu điểm của AJAX Tăng trải nghiệm người dùng: AJAX cho phép cập nhật nội dung trang web một cách mượt mà mà không cần tải lại toàn bộtrang. Tiết kiệm băng thông: Chỉcác phần dữliệu cần thiết được trao đổi giữa máy chủvà trình duyệt, giúp tiết kiệm băng thông. Tăng hiệu suất: Giảm thời gian tải trang và tăng hiệu suất của ứng dụng web.
Nhược điểm của AJAX: Phụthuộc vào JavaScript: AJAX yêu cầu JavaScript để hoạt động, do đó nếu người dùng tắt JavaScript, ứng dụng sẽkhông hoạt động đúng cách. Vấn đềbảo mật: AJAX có thểgặp phải các vấn đềbảo mật như tấn công XSS (Cross-Site Scripting) nếu không được cấu hình đúng cách.
Việc kết hợp sửdụng HTML, CSS Javascript cùng với các thư viện khác đểtạo phần giao diện cho hệthống cùng với Laravel đểphát triển hệthống theo mô hình MVC.Với các tính năng mạnh mẽ, laravel giúp phát hệthống nhanh chóng và hiệu quả. Cơ sởdữliệu SQL hỗtrợviệc lưu trữdữliệu với nhiều tính năng hỗtrợ. Sử dụng AJAX gửi yêu cầu như xóa các đối tượng, hỗtrợchức năng chat realtime mà không phải tải lại trang web giúp trải nghiệm người dùng tốt hơn và tiết kiệm băng thông.
4.1 Thiết kếkiến trúc 4.1.1 Lựa chọn kiến trúc phần mềm Kiến trúc MVC (Model-View-Controller) là một phương pháp thiết kếphổbiến bởi khảnăng tách biệt rõ ràng giữa các thành phần khác nhau của ứng dụng. Điều này không chỉgiúp cho việc phát triển và bảo trì ứng dụng trởnên dễdàng hơn mà còn giúp cho hoạt động làm việc nhóm được hiệu quảhơn bởi mỗi thành viên có thểđược chia theo các công việc rõ ràng. Trong đồán tốt nghiệp này, em sẽáp dụng kiến trúc MVC đểxây dựng một hệthống học tập trực tuyến, với mục tiêu mang lại lợi ích 2 phía cảvềđáp ứng yêu cầu người dùng và cảvềviệc mởrộng, hay bảo trì hệthống.
Kiến trúc MVC được chia thành ba thành phần chính: Model, View và Con troller. Mỗi thành phần có vai trò và chức năng riêng biệt, giúp tách biệt các khía cạnh khác nhau của ứng dụng, từđó tăng tính linh hoạt và khảnăng mởrộng.
Model Model chịu trách nhiệm quản lý dữliệu và logic nghiệp vụcủa hệthống. Model tương tác với cơ sởdữliệu đểtruy xuất và lưu trữdữliệu, đồng thời thực hiện các phép tính và xửlý logic cần thiết.
Vai trò của Model:
Quản lý dữliệu: Model lưu trữvà quản lý dữliệu của hệthống . Nó có thểbao gồm các đối tượng dữliệu, các lớp (classes) và các phương thức (methods) đểthao tác với dữliệu.
Tương tác với cơ sởdữliệu: Model thực hiện các thao tác CRUD (Create, Read, Update, Delete) đểtương tác với cơ sởdữliệu. Nó sửdụng các truy vấn SQL hoặc ORM(Object-Relational Mapping) đểtruy xuất và lưu trữdữliệu.
Xửlý logic nghiệp vụ: Model chứa các quy tắc và logic nghiệp vụcủa ứng dụng.
Nó thực hiện các phép tính, kiểm tra điều kiện và xửlý dữliệu trước khi gửi đến View hoặc Controller.
Cấu trúc của Model:
Entities: Các đối tượng dữliệu đại diện cho các bảng trong cơ sởdữliệu. Mỗi entity thường tương ứng với một bảng và chứa các thuộc tính (fields) đại diện cho các cột trong bảng.
Repositories: Các lớp hoặc đối tượng chịu trách nhiệm truy xuất và lưu trữdữ liệu từcơ sởdữliệu. Repositories cung cấp các phương thức đểthực hiện các thao tác CRUD.
Services: Các lớp hoặc đối tượng chứa logic nghiệp vụcủa ứng dụng. Services sửdụng các repositories đểtruy xuất và lưu trữdữliệu, đồng thời thực hiện các phép tính và xửlý logic cần thiết. Những model cơ bản của hệthống triển khai như Course(Khóa học), User(người dùng), Exercise(Bài tập), Question(Câu hỏi), Section(Tài liệu khóa học) View View chịu trách nhiệm hiển thịdữliệu cho người dùng. View là các tệp HTML, CSS, và JavaScript được sửdụng đểtạo giao diện người dùng. Nó nhận dữliệu từ Controller và hiển thịdữliệu đó dưới dạng dễhiểu và dễtương tác. Ngoài ra, trong Laravel framework các view được tạo ra với đuôi blade.php. Blade là một công cụ tạo mẫu (templating engine) mạnh mẽvà linh hoạt được tích hợp sẵn trong Laravel.
Blade cho phép bạn sửdụng các cấu trúc điều khiển và biến trong các tệp HTML một cách dễdàng và hiệu quả.
Vai trò của View:
Hiển thịdữliệu: View nhận dữliệu từController và hiển thịdữliệu đó cho người dùng. Dữliệu có thểlà văn bản, hình ảnh, biểu đồ, hoặc bất kỳloại thông tin nào khác.
Tương tác với người dùng: View cung cấp các phần tửgiao diện như biểu mẫu, nút bấm, và liên kết đểngười dùng tương tác với ứng dụng. Tách biệt giao diện và logic nghiệp vụ: View giúp tách biệt giao diện người dùng khỏi logic nghiệp vụ, giúp dễdàng bảo trì và mởrộng ứng dụng.
Cấu trúc của View:
View bao gồm các tệp HTML, CSS, Javascript nên cấu trúc của nó được tạo ra từcác tệp này. HTML giúp tạo cấu trúc cơ bản của trang web, bao gồm các phần tửnhư tiêu đề, đoạn văn, hình ảnh, và biểu mẫu. CSS giúp tạo kiểu dáng cho trang web, bao gồm màu sắc, phông chữ, bốcục, và các hiệu ứng. JavaScript gjup tạo các tương tác động trên trang web, chẳng hạn như xửlý sựkiện, xác thực biểu mẫu, và cập nhật nội dung mà không cần tải lại trang.
Trong hệthống đang triển khai sẽcó các view bao gồm các trang như trang quản lí khóa học(quản trị), quản lí người dùng(quản trị), trang chủ, danh sách khóa học Controller Controller đóng vai trò trung gian giữa model và view giúp táchbiệt logic nghiệp vụvà giao diện người dùng. Nó chịu trách nhiệm xửlý các yêu cầu từngười dùng từview, tương tác với Model đểlấy dữliệu và trảvềView đểhiển thị.
Vai trò của Controller:
Xửlý yêu cầu từngười dùng: Controller nhận các yêu cầu HTTP từngười dùng (ví dụ: GET, POST, PUT, DELETE) và xác định hành động cần thực hiện.
Tương tác với Model: Controller gọi các phương thức của Model đểtruy xuất, lưu trữhoặc cập nhật dữliệu. TrảvềView: Sau khi lấy dữliệu từModel, Controller trảvềView đểhiển thịdữliệu cho người dùng.
Cấu trúc của Controller:
Phương thức (Methods): Controller chứa các phương thức đểxửlý các yêu cầu cụthểtừngười dùng. Mỗi phương thức thường tương ứng với một hành động cụ thể(ví dụ: hiển thịdanh sách, thêm mới, cập nhật, xóa).
Định tuyến (Routing): Controller được ánh xạtới các URL cụthểthông qua hệ thống định tuyến của framework. Điều này cho phép người dùng truy cập các hành động của Controller thông qua các URL tương ứng. Trong hệthống đang triển khai sẽcó các controller như CourseController(Thêm(), chỉnh sửa() , xóa() , tìm kiếm khóa học()), UserController(thêm(), cập nhập thông tin(), xóa(), tìm kiếm người dùng()) Lợi ích của Kiến trúc MVC Tách biệt trách nhiệm: Giúp tách biệt các phần khác nhau của ứng dụng, làm cho việc phát triển và bảo trì dễdàng hơn.
Tái sửdụng mãnguồn: Các thành phần có thểđược tái sửdụng trong nhiều phần khác nhau của ứng dụng.
Dễdàng kiểm thử: Từng thành phần có thểđược kiểm thửmột cách độc lập, giúp nâng cao chất lượng phần mềm.
Phát triển song song: Các nhà phát triển có thểlàm việc trên Model, View, và Controller cùng một lúc mà ít ảnh hưởng lẫn nhau 4.1.2 Thiết kếgói Với gói User: mục đích chứa các đối tượng người dùng trong hệthống như quản trị, giáo viên, người học giúp quản lí thông tin người dùng và xác thực người dùng.
Course pakage: quản lí thông tin khóa học và các thành phần liên quan đến khóa học như nội dung tài liệu, bài tập, câu hỏi Role pakage: quản lí thông tin vềvai trò của từng loại người dùng trong hệthống mỗi vai trò được gắn với các quyền tương ứng.
Payment pakage: quản lí viêc thanh toán khóa học nếu khóa học trảphí giúp giáo viên và quản trịviên nắm được thông tin vềnguồn thu từkhóa học.
Chat pakage: quản lí việc trao đổi thông tin giữa người dùng cũng như trong khóa học và phần gửi thông báo 2 chiều giữa người học và giáo viên.
Score pakage: giúp lưu thông tin vềđiểm các lần làm của người học và kèm theo đáp án tương ứng.Giáo viên có thểquản lí điểm của người học và người học cũng theo dõi được tiến độhọc của bản thân.
4.2 Thiết kếchi tiết 4.2.1 Thiết kếgiao diện Trong quá trình phát triển hệthống , việc thiết kếgiao diện người dùng(UI) đóng vai trò quan trọng nhằm mang lại trải nghiệm tốt nhất cho người dùng. Thiết kếUI không chỉđảm bảo tính thẩm mỹmà còn phải đáp ứng và tính dễsửdụng, nhất quán và thân thiện với người dùng. Các vấn đềtrong thiết kếgiao diện như thông sốkĩ thuật của màn hình mục tiêu mà hệthống hướng tới, từđộphân giải, kích thước màn hình, sốlượng màu sắc, quy tắc vềnút bấm, điều khiển, vịtrí hiển thịthông điệp phản hồi...Những thông sốnày giúp định hướng quá trình thiết kế.
Đặc tảthông tin vềmàn hình:
Độphân giải màn hình: Được thiết kếhướng tập trung trên Desktop/Laptop với độphân giải Full HD (1920x1080 pixels) Kích thước màn hình: Màn hình từ13 inch đến 27 inch Sốlượng màu sắc hỗtrợ: Hệthống sẽhộtrợhiển thịhầu như sốlượng màu để đảm bảo chất lượng hình ảnh và giao diện người dùng sắc nét.
Chuẩn hóa thiết kếgiao diện:
Thiết kếnút: Hình chữnhật với góc bo tròn, chiều cao và chiều rộng tùy thuộc vào nội dung.
Điều khiển: Các thanh cuộn với màu nền đen, phía bên phải, hoạt động khi quá chiều cao tối đa , Các form với chiều cao tựđộng theo nội dung.
Vịtrí hiển thịthông điệp phản hồi: thông điệp sẽđược hiển thịởphía trên và ở giữa màn hình.
Phối màu: Sửdụng chủyếu nền trắng đểnổi bật nội dung và có thểđổi qua nền đen.
* Thiết kếtrang Đăng nhập Hình 4.1: Thiết kếtrang đăng nhập Trang đăng nhập được thiết kếvới các trường nhập cho tên đăng nhập, mật khẩu và một nút đểgửi yêu cầu đăng nhập. Ngoài ra còn có ô check ghi nhớđăng nhập và liên kết đến trang đăng kí nếu chưa có tài khoản và 1 liên kết đến chức năng quên mật khẩu.
* Thiết kếtrang danh sách khóa học Hình 4.2: Thiết kếdanh sách khóa học Giao diện hiển thịdanh sách các khóa học hiện có và các thông tin đi kèm trong 1 thẻkhóa học gồm ảnh đại diện của giáo viên và ảnh đại diện khóa học kèm học phí khóa học (nếu có) gắn kèm ởgóc trái của ảnh cùng với tên khóa học và mô tả vềkhóa học và có một nút đểgửi yêu cầu đăng kí khóa học.
* Thiết kếtrang quản lí khóa học Hình 4.3: Thiết kếtrang quản lí khóa học Giao diện gồm 3 phần: thanh bên trái gồm avatar và vai trò của người đăng nhập là quản trịhay giáo viên cùng với avatar và tên của người đăng nhập và ởdưới là danh sách các chức năng của người quản lí có thểchọn đểsửdụng, Thanh ởtrên gồm ôtìm kiếm như tìm kiếm khóa học hoặc giáo viên và 2 biểu tượng tin nhắn và ô menu thu gọn. Phần còn lại chứa nội dung tương ứng với chức năng đã chọn.
* Thiết kếtrang Tạo khóa học Hình 4.4: Thiết kếtrang Tạo khóa học Giao diện tạo khóa học bao gồm form với các trường cần thiết đểtạo một khóa học và 1 nút đểgửi yêu cầu tạo khóa học 4.2.2 Thiết kếlớp Minh họa một sốphương thức qua biểu đồhoạt động Hình 4.5: Biểu đồlớp cho hệthống * Phương thức đăng kí khóa học: Người học chọn khóa học và gửi yêu cầu đăng kí.Nếu khóa học miễn phí thì yêu cầu được gửi đến giáo viên quản lí đểxác nhận.
Nếu khóa học có phí thì gọi phương thức thanh toán khóa học. Sau khi đăng kí thành công thì người học sẽđược thêm vào khóa học Hình 4.6: Biểu đồhoạt động đăng kí khóa học * Phương thức làm bài tập: Người học sau khi được thêm vào khóa học và chọn chức năng làm bài tập. Hệthống chuyển đến giao diện bài tập tương ứng. Người học sau khi làm bài và chọn nộp bài. Hệthống xác nhận xem người học đã hoàn thành hết các câu hỏi chưa. Nếu đã hoàn thành thì xác nhận nộp bài thành công và tiến hành nộp bài và lưu điểm. Nếu chưa thì yêu cầu hoàn thành tiếp Hình 4.7: Biểu đồhoạt động làm bài tập 4.2.3 Thiết kếcơ sởdữliệu *Biểu đồthực thểliên kết Các thực thểchủđạo như course (khóa học) và user (người dùng). Thực thểuser được phân quyền theo từng vai trò nhất, mỗi loại người dùng thì có một vai trò tương ứng. Trong mỗi vai trò thì lại có các quyền khác nhau đểthao tác. Ngoài ra đối với loại người dùng là người học thì các thanh toán học phí phát sinh và mỗi người dùng có các thông báo và tin nhắn đến và đi. Đối với thực thểkhóa học, mỗi khóa học thuộc vềmột danh mục lĩnh vực lớn và ngược lại mỗi danh mục thì bao Hình 4.8: Biểu đồthực thểliên kết gồmnhiều khóa học. Vềphần học liệu thì mỗi khóa học lại có nhiều phần nội dung tài liệu và các câu hỏi và bài tập tương ứng.
* Cơ sởdữliệu cho hệthống Hình 4.9: Lưu thông tin khóa học Hình 4.10: Lưu thông tin vai trò người dùng Hình 4.11: Lưu điểm và đáp án * Chi tiết các bảng a,Bảng User Lưu các thông tin của người dùng email, mật khẩu, tên, ảnh đại diện Tên cột Kiểu dữliệu id bigint name nvarchar(255) email nvarchar(255) avatar_image_path nvarchar(255) email_verified_at datetime password nvarchar(255) remember_token nvarchar(100) created_at datetime updated_at datetime Bảng 4.1: Bảng người dùng b, Bảng Course Bảng course lưu thông tin cơ bản của khóa học như tên, mô tảkhóa học, chi phí khóa học, ảnh đại diện khóa học.
Tên cột Kiểu dữliệu id bigint name nvarchar(255) [content] nvarchar(255) category_id bigint user_id bigint cost int course _ image_path nvarchar(50) created_at datetime updated_at datetime Bảng 4.2: Bảng khóa học c, Bảng score_exercise Bảng score_exercise lưu thông tin vềđiểm của các lần làm bài tập của người dùng.
Tên cột Kiểu dữliệu id bigint num_of_time int score float id_exercise bigint id_user_do bigint created_at datetime updated_at datetime Bảng 4.3: Bảng lưu điểm d, Bảng question Bảng câu hỏi lưu thông tin vềcác câu hỏi và có 1 bảng answer đểánh xạsang bảng câu hỏi với khóa ngoài là id của câu hỏi.
Tên cột Kiểu dữliệu id bigint content nvarchar(255) level int id_course bigint type_question int created_at datetime updated_at datetime Bảng 4.4: Bảng câu hỏi e, Bảng role Bảng vai trò lưu thông tin của các vai trò ứng với từng loại người dùng khác nhau.
Tên cột Kiểu dữliệu id bigint name nvarchar(255) description_name nvarchar(255) created_at datetime updated_at datetime Bảng 4.5: Bảng vai trò f, Bảng permission Tên cột Kiểu dữliệu id bigint name nvarchar(255) description_name nvarchar(255) parent_id bigint key_code nvarchar(255) created_at datetime updated_at datetime Bảng 4.6: Bảng quyền theo từng vai trò g, Bảng section Bảng lưu các nội dung tổng quát vềnội dung của khóa học và mã của bảng section sẽlà khóa ngoài tới bảng lưu các file tương ứng.
Tên cột Kiểu dữliệu id bigint name_section nvarchar(255) id_course bigint content nvarchar(1000) created_at datetime updated_at datetime Bảng 4.7: Bảng nội dung khóa học h, Bảng course_file Bảng lưu thông tin vềcác file thuộc vào các khóa học tương ứng Tên cột Kiểu dữliệu id bigint file_path nvarchar(255) id_section bigint file_name nvarchar(255) type_file varchar(20) created_at datetime updated_at datetime deleted_at datetime Bảng 4.8: Bảng File của khóa học i, Bảng exercise Bảng bài tập lưu thông tin vềcác bài tập tương ứng với khóa học và mà bài tập sẽlà khóa ngoài ánh xạtới bảng câu hỏi đểlấy câu hỏi tương ứng.
Tên cột Kiểu dữliệu id bigint id_course bigint name_exercise nvarchar(255) time_do int num_level_easy int num_level_medium int num_level_hard int created_at datetime updated_at datetime deleted_at datetime Bảng 4.9: Bảng bài tập 4.3 Xây dựng ứng dụng 4.3.1 Thư viện và công cụsửdụng Mục đích Công cụ Địa chỉURL IDE lập trình VS code https://www.php.net Ngôn ngữ lập trình PHP https://apps.microsoft.com Thư viện hỗ trợ Laravel Framework https://laravel.com Gửi tin nhắn trong thời gian thực Pusher https://pusher.com Quản lí cơ sởdữliệu SQLServermanage ment Studiohttps://www.microsoft.com/en us/sql server Bảng 4.10: Thư viện và công cụsửdụng 4.3.2 Kết quảđạt được Sản phẩm của đồán: Hệthống học tập trực tuyến trên nền Website. Hệthống cung cấp nền tảng trực tuyến cho người dùng có nhu cầu học tập và các giáo viên muốn tạo các khóa học online chất lượng hoặc có thểchia sẻvà trao đổi kiến thức qua những câu hỏi trong group cộng đồng. Người học có thểtruy cập vào các khóa học từbất kỳđâu và bất kỳlúc nào, chỉcần có kết nối internet. Người học và giáo viên có thểchủđộng hơn trong quá trình học và dạy của mình. Hệthống giúp giảng viên dễdàng quản lý khóa học, theo dõi tiến độhọc tập của học viên, và đánh giá kết quảhọc tập. Hệthống có thểcung cấp các tính năng tương tác thời gian thực.
Học viên có thểhọc theo tốc độcủa riêng mình và lựa chọn các khóa học phù hợp với nhu cầu và sởthích cá nhân. Giảm chi phí liên quan đến việc di chuyển, thuê phòng học, và in ấn tài liệu. Vềmặt nghiệp vụcủa hệthống: Giao diện người dùng đơn giản, dễsửdụng giúp tăng trải nghiệm người dùng Đã đưa ra được các chức năng cần có so với nghiệp vụ, yêu cầu của hệthống cần có. Vềmặt dữliệu được quản lí một cách hiệu quảđảm bảo tính nhất quán và toàn vẹn dữliệu. Các chức năng chính của hệthống như đăng kí khóa học, làm bài tập, chức năng thanh toán, chức tạo khóa học, chức năng chat realtime.
Đăng ký khóa học: Cho phép học viên chọn và đăng ký các khóa học mà họ quan tâm. Giúp học viên dễdàng tiếp cận và tham gia vào các khóa học, đồng thời giúp giảng viên quản lý sốlượng học viên tham gia.
Làm bài tập: Cung cấp cho học viên các bài tập đểkiểm tra và củng cốkiến thức đã học. Giúp học viên thực hành và áp dụng kiến thức, đồng thời giúp giảng viên đánh giá tiến độvà hiệu quảhọc tập của học viên.
Chức năng thanh toán: Cho phép học viên thanh toán học phí (nếu có) và các khoản phí liên quan trực tuyến. Tạo điều kiện thuận lợi cho học viên trong việc thanh toán, đồng thời giúp hệthống quản lý tài chính và thu chi một cách hiệu quả.
Chức năng quản lí khóa học: Cho phép giảng viên tạo và quản lý các khóa học mới. Giúp giảng viên dễdàng thiết lập nội dung khóa học, lịch trình và các tài liệu học tập, đồng thời giúp hệthống duy trì và cập nhật các khóa học mới.
Chức năng chat realtime: Cung cấp kênh giao tiếp thời gian thực giữa học viên và giảng viên. Tăng cường tương tác và hỗtrợhọc viên kịp thời, giúp giải đáp thắc mắc và tạo môi trường học tập năng động và hiệu quả 4.3.3 Minh họa các chức năng chính Trong hệthống, các màn hình đã thiết kếdựa trên các phân tích đểđảm bảo người dùng dễsửdụng, thao tác và vẫn đáp ứng đầy đủcác yêu cầu nghiệp vụ.Dưới đây là một sốmàn hình mô tảmột sốchức năng của hệthống:
* Màn hình trang chủ Cung cấp các thông tin cơ bản của một hệthống học tập như hiển thịcác khóa học, phần đăng nhập cho người dùng và người dùng có thểtìm kiếm các khóa học mong muốn.
Hình 4.12: Trang chủ Hình 4.13: Trang chủ2 * Màn hình khi người dùng đã vào hệthống Người học sau khi đã đăng nhập vào hệthống thì đưa đến trang chủcá nhân.
Các chức năng bao gồm như hiển thịcác khóa học đang tham gia, có thểtìm kiếm các khóa học, nhận thông báo (nếu có), tìm kiếm giáo viên và chức năng cập nhập thông tin cá nhân.
Hình 4.14: Màn hình sau khi đăng nhập * Màn hình làm bài tập Thành phần hiển thịgồm các câu hỏi và đáp án tương ứng với bài tập, các ô chọn đáp án sẽtương ứng với loại câu hỏi( 1 hay nhiều đáp án ) giúp người học dễ dàng hơn trong việc học tập và củng cốvà cuối cùng là nút gửi bài tập khi gửi hệ thống sẽkiểm tra các câu hỏi đã được hoàn thành hết chưa và xác nhận lại yêu cầu nộp bài.
Hình 4.15: Trang làm bài tập * Màn hình quản lí khóa học Hiển thịđầy đủthông tin vềcác khóa học hiện có. Giúp người quản lí hoặc giáo viên dễdàng quản lí hoặc chỉnh sửa nếu có nhầm lẫn. Các chức năng có bản như chỉnh sửa, xóa đi kèm với từng khóa học giúp quản lí dễdàng chỉnh sửa hoặc xóa bỏ. Bên trái trang là các liên kết đến các chức năng mà người quản lí có thểtheo dõi dễdàng.
Hình 4.16: Trang quản lí khóa học * Màn hình Thêm khóa học Hiển thịcác trường cần thiết khi tạo một khóa học mới bao gồm tên, học phí, ảnh đại diện(nếu có). Trong ô nhập liệu giáo viên cùng quản lí, đưa ra danh sách các giáo viên đểngười tạo lựa chọn và nút đểxác nhận gửi yêu cầu tạo khóa học với các nội dung đã khai báo.
Hình 4.17: Trang tạo khóa học * Màn hình chat của khóa học Giúp người học và giáo viên trao đổi các vấn đềthắc mắc liên quan trong khóa học tương ứng. Bao gồm các nội dung tên, nội dung người gửi và người nhận cùng thời gian gửi, nhân.
Hình 4.18: Trang chat khóa học * Màn hình thanh toán Trang thanh toán học phí của khóa học (nếu có). Hiển thịcác nội dung cơ bản vềthông tin thanh toán và nội dung thanh toán.
Hình 4.19: Trang Thanh toán 4.4 Kiểm thử Phần này có độdài từhai đến ba trang. Sinh viên thiết kếcác trường hợp kiểm thửcho hai đến ba chức năng quan trọng nhất. Sinh viên cần chỉrõ các kỹthuật kiểm thửđã sửdụng. Chi tiết các trường hợp kiểm thửkhác, nếu muốn trình bày, sinh viên đưa vào phần phụlục. Sinh viên sau cùng tổng kết vềsốlượng các trường hợp kiểm thửvà kết quảkiểm thử. Sinh viên cần phân tích lý do nếu kết quảkiểm thửkhông đạt * Kiểm thửchức năng Đăng nhập và đăng kí STT Mô tả Dữliệu đầu vào Kết quảmong đợi Kết quảthực tế Đăng ký với email hợp lệ Email:
test@gmail.com Mật khẩu:
Đăng ký thành công và chuyển đến trang đăng nhập Đăng ký thành công Đăng ký với email đã tồn tại Email:
test2@gmail.com Mật khẩu:
Hiển thịthông báo lỗi "email đã tồn tại" Hiển thịthông báo lỗi Đăng nhập với thông tin đúng Email:
test@gmail.com Mật khẩu:
Đăng nhập thành công và chuyển đến trang chủ Đăng nhập thành công Đăng nhập với tài khoản hoặc mật khẩu sai Email:
er ror@gmail.com Mật khẩu: 123 Thông báo tài khoản hoặc mật khẩu bịsai Hiển thịlỗi Bảng 4.11: Kiểm thửchức năng đăng nhập, đăng kí STT Mô tả Dữliệu đầu vào Kết quảmong đợi Kết quảthực tế Người học chưa hoàn thành đủ các câu hỏi Chọn thiếu câu trảlời Thông báo người học chưa hoàn thành hết các câu hỏi Thông báo chưa hoàn thành hết các câu hỏi Hoàn thành tất cảcác câu hỏi Chọn hết các câu hỏi trong bài tập Hệthống hiển thị thông báo xác nhận nộp bài Hệthống hiển thị thông báo xác nhận nộp bài Bảng 4.12: Kiểm thửchức năng nộp bài tập STT Mô tả Dữliệu đầu vào Kết quảmong đợi Kết quảthực tế Nhập thông tin thanh toán sai STK:
085430354, Ngày: 4/3, Tên TK: NGUYEN VAN A Thông báo tài khoản không hợp lệ, yêu cầu nhập lại Thông báo tài khoản không hợp lệ, yêu cầu nhập lại Nhập đúng thông tin thanh toán STK:
0854367887, Ngày:
07/15, Tên TK:
NGUYEN VAN C Hệ thống xác nhận hợp lệvà chuyển sang trang xác nhận Hệ thống xác nhận hợp lệvà chuyển sang trang xác nhận Bảng 4.13: Kiểm thửchức năng thanh toán STT Mô tả Dữliệu đầu vào Kết quảmong đợi Kết quảthực tế Nhập thiếu trường bắt buộc Nhập thiếu trường tên khóa học Thiếu trường tên khóa học, yêu cầu nhập thêm Thông báo thiếu trường tên khóa học Nhập đủtrường theo yêu cầu Nhập đủ các thông tin vào form Hệ thống xác nhận thành công và quay lại trang danh sách khóa học Hệthống thêm thành công và quay lại trang danh sách khóa học Bảng 4.14: Kiểm thửchức năng tạo khóa học mới *Phân tích kết quảkiểm thửTrong quá trình kiểm thửthì tất cảcác trường hợp kiểm thửđều đạt kết quảmong đợi,không có lỗi xảy ra.Điều này chứng tỏrằng hệ thống đã hoạt động ổn định và đúng như yêu cầu.
4.5 Triển khai Hệthống được triển khai và thửnghiệm thực tếtrên máy tính cá nhân có những cấu hình và thống sốnhư sau:
Thông số Cấu hình Hệđiều hành Win 11 64 bit RAM 28 GB CPU 12th Gen Intel(R) Core(TM) i5-12450HX 2.40 GHz Cơ sởdữliệu SQL Server Phần mềm khác SQL Server , VS code Bảng 4.15: Cấu hình máy tính triển khai hệthống 5.1 Một sốvấn đềvà giải pháp Trong quá trình làm đồán, em có gặp một vài vấn đềkhó khăn như ởchức năng chat giữa người học và giáo viên làm cách nào đểgiáo viên và người học có thể trao đổi qua lại mà không phải tải lại trang website khi có một tin nhắn mới được gửi. Sau khi tìm hiểu em đã tìm ra giải pháp giúp giải quyết vấn đềtrên. Em đã sử dụng pusher đểxửlí các tác vụthời gian thực. Cách hoạt động của pusher là khi có 1 tin nhắn được gửi hệthống sẽgửi dữliệu đến pusher thông qua api của pusher.
Sau đó máy chủpusher nhận dữliệu và xác định các kênh nhận thông báo. Máy chủpusher phát sóng dữliệu đến tất cảcác client đã đăng kí. các client nhân dữ liệu và cập nhập giao diện người dùng theo thời gian thực. Một vấn đềnữa có thể kểđến là việc khi thực hiện chức năng xóa 1 hàng dữliệu thì việc phải tải lại cả trang gây ảnh hưởng đến trải nghiệm. Từkinh nghiệm xây dựng hệthống đã có thì em đã sửdụng ajax- một kĩ thuật phát triển web cho phép các trang web cập nhập nội dung một cách động mà không cần phải tải lại toàn bộtrang.
5.2 Kết luận Trong quá trình thực hiện đồán, em học thêm và tích lũy thêm nhiều kinh nghiệm vềnghiên cứu, phân tích, thiết kếvà triển khai hệthống trên nền tảng website. Hệthống cơ bản đã hoàn thành các chức năng cần thiết so với các hệ thống đã có. Hệthống học tập trực tuyến đã chứng minh được tính hiệu quảvà tiện lợi trong việc cung cấp kiến thức và đào tạo. Với khảnăng tiếp cận rộng rãi, tính tương tác cao và khảnăng tùy chỉnh nội dung học tập, hệthống này đã mang lại nhiều lợi ích cho cảhọc viên và giảng viên. Chất lượng nội dung của các khóa học, tài liệu học tập được cung cấp đầy đủtừcác giáo viên. Ngoài ra, với các chức năng cần có của hệthống học trực tuyến như đăng kí khóa học, làm bài tập, chức năng thanh toán, tạo khóa học và chức năng chat realtime.
Bên cạnh đó, trong quá trình phát triển và hoàn thiện hệthống, em nhận thấy vẫn còn những mảng chưa thực sựhoặc cần hoàn thiện thêm. Một trong sốchức năng như cấp chứng chỉcho người học khi hoàn thành khóa học. Vấn đềcần kết hợp với các giáo viên liên quan đến khóa học đểthực hiện. Một chức năng nữa phải nói đến như phân tích dữliệu người học đểcó thểphát triển các khóa học theo xu hướng các lĩnh vực được quan tâm nhiều tại từng thời điểm. Giúp người kết nối kịp thời giữa người chia sẻkiến thức và người có nhu cầu học tập. Ngoài ra, em cũng nhận thấy cần thực hiện kiểm thửvà đánh giá một cách tổng quan hơn hệthống khi đưa vào bộkiểm thửvới sốlượng người dùng lớn đểkịp thời phát hiện những vấn đềtiềm ẩn cũng như khảnăng chịu tải của hệthống. Mặc dù đã thực hiện các kiểm thửcơ bản và đánh giá hiệu suất nhưng chưa đủchi tiết và bao quát đểcó thểđảm bảo được hệthống có thểhoạt động ổn định và hiệu quảvới tất cảcác tình huống có thểxảy ra trong môi trường thực tế. Việc thực hiện kiểm thửchi tiết và đánh giá với sốlượng người dùng lớn là cần thiết.
Trong suốt quá trình thực hiện đồán, em đã học hỏi và tích lũy được thêm các kinh nghiệm vềcảlĩnh vực chuyên môn cũng như lĩnh vực nghiệp vụliên quan của đềtài. Đối với phần chuyên môn, em đã dày dặn hơn trong phần tạo và tổchức các đềmục công việc liên quan một cách hiệu quả, phân bổđược thời gian một cách hiệu quảvà hợp lí, rèn luyện được khảnăng tựlãnh đạo và làm việc chủđộng. Bên cạnh đó, em đã gặp phải nhiều vấn đềkhó khăn trong quá trình triển khai và phát triển. Sau khi giải quyết các vấn đề, lỗi phát sinh em nhận thấy rằng việc phát triển kĩ năng sẽsong song với quá trình giải quyết các vấn đềtừcơ bản đến phức tạp.
Từviệc giải quyết, xửlí vấn đềtìm được điểm thắt có thểgiúp tối ưu và hoàn thiện hơn vềmột chức năng nói riêng cũng như một vấn đềnói chung 5.3 Hướng phát triển Dựa trên kết quảcủa quá trình phân tích và thiết kếhệthống. Các chức năng đã được đưa ra đểxây dựng một hệthống hoàn chỉnh. Một sốchức năng như: chức năng đăng kí khóa học dành cho người học, các công việc thiết kếgiao diện gồm các danh sách khóa học và các nút chức năng, tạo các phương thưc đểlưu trữcác thông tin đăng kí vào cơ sởdữliệu, tích hợp thanh toán nếu khóa học có phí, kiểm thửcác phương thức liên quan đểđảm bảo hệthống hoạt động ổn định. Với chức năng thanh toán khóa học các công việc cần thiết như tích hợp các hình thức thanh toán, tạo phương thưc đểlưu các nội dung thanh toán vào cơ sởdữliệu. Với tính năng chat thì các công việc được tạo như tạo giao diện hộp thoại chat. tạo phương thức lưu nội dung chat, tạo phương thức đểgửi realtime nội dung tới người nhận.
Các chức năng ởtrên có thểđược cải thiện hơn như tích hợp thêm các phương thức thanh toán đểngười dùng có thểdễdàng lựa chọn. Với tính năng chat có thểđưa thêm các tùy chọn ảnh file có thểgửi giúp người học trao đổi được nhiều cách hơn.
Một hệthống ổn đinh và hiệu quảlà một hệthống luôn được cập nhập và phát triển. Không ngoại lệ, đối với hệthống được triển khai trong đồán sẽcó các hướng phát triển sao cho hệthống ngày càng được hoàn thiện trong tương lai. Hệthống có thểmởrộng như phát triển thêm nhiều ngôn ngữđểhỗtrợcác học viên từnhiều quốc gia khác nhau. Tích hợp thêm các công nghệtrí tuệnhân tao hỗtrợhọc tập giúp người học có thểchủđộng hơn trong quá trình trao đổi kiến thức. Phát triển thêm các loại bài tập với các dạng đặc thù hơn chẳng hạn như lập trình.
[1] SQL, https://www.w3schools.com/sql/ [2] LaravelFramework, https://laravel.com/ [3] Coursera, https://www.coursera.org/